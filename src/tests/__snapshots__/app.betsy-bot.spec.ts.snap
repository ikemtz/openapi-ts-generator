// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files 1`] = `
Array [
  "cowbot-server-api-controllers-test-object.form-group-fac.ts",
  "cowbot-server-api-controllers-test-object.form.ts",
  "cowbot-server-api-controllers-test-object.model.ts",
  "cowbot-server-api-controllers-test-object.properties.ts",
  "cowbot-server-api-controllers-test-object.test-obj-fac.ts",
  "cowbot-server-models-database-models-audit-log-action.enum.ts",
  "cowbot-server-models-database-models-audit-log-feature.enum.ts",
  "cowbot-server-models-database-models-audit-log.form-group-fac.ts",
  "cowbot-server-models-database-models-audit-log.form.ts",
  "cowbot-server-models-database-models-audit-log.model.ts",
  "cowbot-server-models-database-models-audit-log.properties.ts",
  "cowbot-server-models-database-models-audit-log.test-obj-fac.ts",
  "cowbot-server-models-database-models-authorized-invite-sender-roles.form-group-fac.ts",
  "cowbot-server-models-database-models-authorized-invite-sender-roles.form.ts",
  "cowbot-server-models-database-models-authorized-invite-sender-roles.model.ts",
  "cowbot-server-models-database-models-authorized-invite-sender-roles.properties.ts",
  "cowbot-server-models-database-models-authorized-invite-sender-roles.test-obj-fac.ts",
  "cowbot-server-models-database-models-authorized-invite-sender.form-group-fac.ts",
  "cowbot-server-models-database-models-authorized-invite-sender.form.ts",
  "cowbot-server-models-database-models-authorized-invite-sender.model.ts",
  "cowbot-server-models-database-models-authorized-invite-sender.properties.ts",
  "cowbot-server-models-database-models-authorized-invite-sender.test-obj-fac.ts",
  "cowbot-server-models-database-models-backup-topics.enum.ts",
  "cowbot-server-models-database-models-betsy-premium-role.enum.ts",
  "cowbot-server-models-database-models-discord-author.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-author.form.ts",
  "cowbot-server-models-database-models-discord-author.model.ts",
  "cowbot-server-models-database-models-discord-author.properties.ts",
  "cowbot-server-models-database-models-discord-author.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-auto-responder-phrase.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-auto-responder-phrase.form.ts",
  "cowbot-server-models-database-models-discord-auto-responder-phrase.model.ts",
  "cowbot-server-models-database-models-discord-auto-responder-phrase.properties.ts",
  "cowbot-server-models-database-models-discord-auto-responder-phrase.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-auto-responder.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-auto-responder.form.ts",
  "cowbot-server-models-database-models-discord-auto-responder.model.ts",
  "cowbot-server-models-database-models-discord-auto-responder.properties.ts",
  "cowbot-server-models-database-models-discord-auto-responder.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-auto-roles.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-auto-roles.form.ts",
  "cowbot-server-models-database-models-discord-auto-roles.model.ts",
  "cowbot-server-models-database-models-discord-auto-roles.properties.ts",
  "cowbot-server-models-database-models-discord-auto-roles.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-button-style.enum.ts",
  "cowbot-server-models-database-models-discord-channel-backup.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-channel-backup.form.ts",
  "cowbot-server-models-database-models-discord-channel-backup.model.ts",
  "cowbot-server-models-database-models-discord-channel-backup.properties.ts",
  "cowbot-server-models-database-models-discord-channel-backup.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-channel-cleaner.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-channel-cleaner.form.ts",
  "cowbot-server-models-database-models-discord-channel-cleaner.model.ts",
  "cowbot-server-models-database-models-discord-channel-cleaner.properties.ts",
  "cowbot-server-models-database-models-discord-channel-cleaner.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-channel-message.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-channel-message.form.ts",
  "cowbot-server-models-database-models-discord-channel-message.model.ts",
  "cowbot-server-models-database-models-discord-channel-message.properties.ts",
  "cowbot-server-models-database-models-discord-channel-message.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-channel-transcript.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-channel-transcript.form.ts",
  "cowbot-server-models-database-models-discord-channel-transcript.model.ts",
  "cowbot-server-models-database-models-discord-channel-transcript.properties.ts",
  "cowbot-server-models-database-models-discord-channel-transcript.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-default-request-data.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-default-request-data.form.ts",
  "cowbot-server-models-database-models-discord-command-action-default-request-data.model.ts",
  "cowbot-server-models-database-models-discord-command-action-default-request-data.properties.ts",
  "cowbot-server-models-database-models-discord-command-action-default-request-data.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-request-header.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-request-header.form.ts",
  "cowbot-server-models-database-models-discord-command-action-request-header.model.ts",
  "cowbot-server-models-database-models-discord-command-action-request-header.properties.ts",
  "cowbot-server-models-database-models-discord-command-action-request-header.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-request-metadata.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-command-action-request-metadata.form.ts",
  "cowbot-server-models-database-models-discord-command-action-request-metadata.model.ts",
  "cowbot-server-models-database-models-discord-command-action-request-metadata.properties.ts",
  "cowbot-server-models-database-models-discord-command-action-request-metadata.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-command-action.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-command-action.form.ts",
  "cowbot-server-models-database-models-discord-command-action.model.ts",
  "cowbot-server-models-database-models-discord-command-action.properties.ts",
  "cowbot-server-models-database-models-discord-command-action.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-command.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-command.form.ts",
  "cowbot-server-models-database-models-discord-command.model.ts",
  "cowbot-server-models-database-models-discord-command.properties.ts",
  "cowbot-server-models-database-models-discord-command.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-component-type.enum.ts",
  "cowbot-server-models-database-models-discord-component-wrapper.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-component-wrapper.form.ts",
  "cowbot-server-models-database-models-discord-component-wrapper.model.ts",
  "cowbot-server-models-database-models-discord-component-wrapper.properties.ts",
  "cowbot-server-models-database-models-discord-component-wrapper.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-component.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-component.form.ts",
  "cowbot-server-models-database-models-discord-component.model.ts",
  "cowbot-server-models-database-models-discord-component.properties.ts",
  "cowbot-server-models-database-models-discord-component.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-embed-field.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-embed-field.form.ts",
  "cowbot-server-models-database-models-discord-embed-field.model.ts",
  "cowbot-server-models-database-models-discord-embed-field.properties.ts",
  "cowbot-server-models-database-models-discord-embed-field.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-embed-footer.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-embed-footer.form.ts",
  "cowbot-server-models-database-models-discord-embed-footer.model.ts",
  "cowbot-server-models-database-models-discord-embed-footer.properties.ts",
  "cowbot-server-models-database-models-discord-embed-footer.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-embed-image.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-embed-image.form.ts",
  "cowbot-server-models-database-models-discord-embed-image.model.ts",
  "cowbot-server-models-database-models-discord-embed-image.properties.ts",
  "cowbot-server-models-database-models-discord-embed-image.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-embed-video.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-embed-video.form.ts",
  "cowbot-server-models-database-models-discord-embed-video.model.ts",
  "cowbot-server-models-database-models-discord-embed-video.properties.ts",
  "cowbot-server-models-database-models-discord-embed-video.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-embed.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-embed.form.ts",
  "cowbot-server-models-database-models-discord-embed.model.ts",
  "cowbot-server-models-database-models-discord-embed.properties.ts",
  "cowbot-server-models-database-models-discord-embed.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-emoji.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-emoji.form.ts",
  "cowbot-server-models-database-models-discord-emoji.model.ts",
  "cowbot-server-models-database-models-discord-emoji.properties.ts",
  "cowbot-server-models-database-models-discord-emoji.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-form-data.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-form-data.form.ts",
  "cowbot-server-models-database-models-discord-form-data.model.ts",
  "cowbot-server-models-database-models-discord-form-data.properties.ts",
  "cowbot-server-models-database-models-discord-form-data.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-form-field-answer.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-form-field-answer.form.ts",
  "cowbot-server-models-database-models-discord-form-field-answer.model.ts",
  "cowbot-server-models-database-models-discord-form-field-answer.properties.ts",
  "cowbot-server-models-database-models-discord-form-field-answer.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-form-field-answers.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-form-field-answers.form.ts",
  "cowbot-server-models-database-models-discord-form-field-answers.model.ts",
  "cowbot-server-models-database-models-discord-form-field-answers.properties.ts",
  "cowbot-server-models-database-models-discord-form-field-answers.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-form-submission.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-form-submission.form.ts",
  "cowbot-server-models-database-models-discord-form-submission.model.ts",
  "cowbot-server-models-database-models-discord-form-submission.properties.ts",
  "cowbot-server-models-database-models-discord-form-submission.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-form.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-form.form.ts",
  "cowbot-server-models-database-models-discord-form.model.ts",
  "cowbot-server-models-database-models-discord-form.properties.ts",
  "cowbot-server-models-database-models-discord-form.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway-participant.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway-participant.form.ts",
  "cowbot-server-models-database-models-discord-giveaway-participant.model.ts",
  "cowbot-server-models-database-models-discord-giveaway-participant.properties.ts",
  "cowbot-server-models-database-models-discord-giveaway-participant.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway-role.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway-role.form.ts",
  "cowbot-server-models-database-models-discord-giveaway-role.model.ts",
  "cowbot-server-models-database-models-discord-giveaway-role.properties.ts",
  "cowbot-server-models-database-models-discord-giveaway-role.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-giveaway.form.ts",
  "cowbot-server-models-database-models-discord-giveaway.model.ts",
  "cowbot-server-models-database-models-discord-giveaway.properties.ts",
  "cowbot-server-models-database-models-discord-giveaway.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-guild-user-invite.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-guild-user-invite.form.ts",
  "cowbot-server-models-database-models-discord-guild-user-invite.model.ts",
  "cowbot-server-models-database-models-discord-guild-user-invite.properties.ts",
  "cowbot-server-models-database-models-discord-guild-user-invite.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-guild-user.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-guild-user.form.ts",
  "cowbot-server-models-database-models-discord-guild-user.model.ts",
  "cowbot-server-models-database-models-discord-guild-user.properties.ts",
  "cowbot-server-models-database-models-discord-guild-user.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-invite-link.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-invite-link.form.ts",
  "cowbot-server-models-database-models-discord-invite-link.model.ts",
  "cowbot-server-models-database-models-discord-invite-link.properties.ts",
  "cowbot-server-models-database-models-discord-invite-link.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-menu-option.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-menu-option.form.ts",
  "cowbot-server-models-database-models-discord-menu-option.model.ts",
  "cowbot-server-models-database-models-discord-menu-option.properties.ts",
  "cowbot-server-models-database-models-discord-menu-option.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-message-attachment.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-message-attachment.form.ts",
  "cowbot-server-models-database-models-discord-message-attachment.model.ts",
  "cowbot-server-models-database-models-discord-message-attachment.properties.ts",
  "cowbot-server-models-database-models-discord-message-attachment.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-message-flags.enum.ts",
  "cowbot-server-models-database-models-discord-message-reference.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-message-reference.form.ts",
  "cowbot-server-models-database-models-discord-message-reference.model.ts",
  "cowbot-server-models-database-models-discord-message-reference.properties.ts",
  "cowbot-server-models-database-models-discord-message-reference.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-message.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-message.form.ts",
  "cowbot-server-models-database-models-discord-message.model.ts",
  "cowbot-server-models-database-models-discord-message.properties.ts",
  "cowbot-server-models-database-models-discord-message.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-poll-participant.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-poll-participant.form.ts",
  "cowbot-server-models-database-models-discord-poll-participant.model.ts",
  "cowbot-server-models-database-models-discord-poll-participant.properties.ts",
  "cowbot-server-models-database-models-discord-poll-participant.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-poll.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-poll.form.ts",
  "cowbot-server-models-database-models-discord-poll.model.ts",
  "cowbot-server-models-database-models-discord-poll.properties.ts",
  "cowbot-server-models-database-models-discord-poll.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-review-category.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-review-category.form.ts",
  "cowbot-server-models-database-models-discord-review-category.model.ts",
  "cowbot-server-models-database-models-discord-review-category.properties.ts",
  "cowbot-server-models-database-models-discord-review-category.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-review-type.enum.ts",
  "cowbot-server-models-database-models-discord-review.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-review.form.ts",
  "cowbot-server-models-database-models-discord-review.model.ts",
  "cowbot-server-models-database-models-discord-review.properties.ts",
  "cowbot-server-models-database-models-discord-review.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-role-selector.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-role-selector.form.ts",
  "cowbot-server-models-database-models-discord-role-selector.model.ts",
  "cowbot-server-models-database-models-discord-role-selector.properties.ts",
  "cowbot-server-models-database-models-discord-role-selector.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-role.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-role.form.ts",
  "cowbot-server-models-database-models-discord-role.model.ts",
  "cowbot-server-models-database-models-discord-role.properties.ts",
  "cowbot-server-models-database-models-discord-role.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server-global-settings.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server-global-settings.form.ts",
  "cowbot-server-models-database-models-discord-server-global-settings.model.ts",
  "cowbot-server-models-database-models-discord-server-global-settings.properties.ts",
  "cowbot-server-models-database-models-discord-server-global-settings.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server-invite-role.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server-invite-role.form.ts",
  "cowbot-server-models-database-models-discord-server-invite-role.model.ts",
  "cowbot-server-models-database-models-discord-server-invite-role.properties.ts",
  "cowbot-server-models-database-models-discord-server-invite-role.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server-invite-settings.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server-invite-settings.form.ts",
  "cowbot-server-models-database-models-discord-server-invite-settings.model.ts",
  "cowbot-server-models-database-models-discord-server-invite-settings.properties.ts",
  "cowbot-server-models-database-models-discord-server-invite-settings.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server-review-settings.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server-review-settings.form.ts",
  "cowbot-server-models-database-models-discord-server-review-settings.model.ts",
  "cowbot-server-models-database-models-discord-server-review-settings.properties.ts",
  "cowbot-server-models-database-models-discord-server-review-settings.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server-status.enum.ts",
  "cowbot-server-models-database-models-discord-server-verification-settings.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server-verification-settings.form.ts",
  "cowbot-server-models-database-models-discord-server-verification-settings.model.ts",
  "cowbot-server-models-database-models-discord-server-verification-settings.properties.ts",
  "cowbot-server-models-database-models-discord-server-verification-settings.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-server.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-server.form.ts",
  "cowbot-server-models-database-models-discord-server.model.ts",
  "cowbot-server-models-database-models-discord-server.properties.ts",
  "cowbot-server-models-database-models-discord-server.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-support-ticket-settings.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-support-ticket-settings.form.ts",
  "cowbot-server-models-database-models-discord-support-ticket-settings.model.ts",
  "cowbot-server-models-database-models-discord-support-ticket-settings.properties.ts",
  "cowbot-server-models-database-models-discord-support-ticket-settings.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-support-ticket.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-support-ticket.form.ts",
  "cowbot-server-models-database-models-discord-support-ticket.model.ts",
  "cowbot-server-models-database-models-discord-support-ticket.properties.ts",
  "cowbot-server-models-database-models-discord-support-ticket.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-thread-channel.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-thread-channel.form.ts",
  "cowbot-server-models-database-models-discord-thread-channel.model.ts",
  "cowbot-server-models-database-models-discord-thread-channel.properties.ts",
  "cowbot-server-models-database-models-discord-thread-channel.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-thumbnail-image.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-thumbnail-image.form.ts",
  "cowbot-server-models-database-models-discord-thumbnail-image.model.ts",
  "cowbot-server-models-database-models-discord-thumbnail-image.properties.ts",
  "cowbot-server-models-database-models-discord-thumbnail-image.test-obj-fac.ts",
  "cowbot-server-models-database-models-discord-tracked-message.form-group-fac.ts",
  "cowbot-server-models-database-models-discord-tracked-message.form.ts",
  "cowbot-server-models-database-models-discord-tracked-message.model.ts",
  "cowbot-server-models-database-models-discord-tracked-message.properties.ts",
  "cowbot-server-models-database-models-discord-tracked-message.test-obj-fac.ts",
  "cowbot-server-models-database-models-ip-information.form-group-fac.ts",
  "cowbot-server-models-database-models-ip-information.form.ts",
  "cowbot-server-models-database-models-ip-information.model.ts",
  "cowbot-server-models-database-models-ip-information.properties.ts",
  "cowbot-server-models-database-models-ip-information.test-obj-fac.ts",
  "cowbot-server-models-database-models-key-value-category.form-group-fac.ts",
  "cowbot-server-models-database-models-key-value-category.form.ts",
  "cowbot-server-models-database-models-key-value-category.model.ts",
  "cowbot-server-models-database-models-key-value-category.properties.ts",
  "cowbot-server-models-database-models-key-value-category.test-obj-fac.ts",
  "cowbot-server-models-database-models-key-value-storage.form-group-fac.ts",
  "cowbot-server-models-database-models-key-value-storage.form.ts",
  "cowbot-server-models-database-models-key-value-storage.model.ts",
  "cowbot-server-models-database-models-key-value-storage.properties.ts",
  "cowbot-server-models-database-models-key-value-storage.test-obj-fac.ts",
  "cowbot-server-models-database-models-message-data.form-group-fac.ts",
  "cowbot-server-models-database-models-message-data.form.ts",
  "cowbot-server-models-database-models-message-data.model.ts",
  "cowbot-server-models-database-models-message-data.properties.ts",
  "cowbot-server-models-database-models-message-data.test-obj-fac.ts",
  "cowbot-server-models-database-models-rest-request-response-mapping.form-group-fac.ts",
  "cowbot-server-models-database-models-rest-request-response-mapping.form.ts",
  "cowbot-server-models-database-models-rest-request-response-mapping.model.ts",
  "cowbot-server-models-database-models-rest-request-response-mapping.properties.ts",
  "cowbot-server-models-database-models-rest-request-response-mapping.test-obj-fac.ts",
  "cowbot-server-models-database-models-support-ticket-audits.enum.ts",
  "cowbot-server-models-database-models-support-ticket-role-options.form-group-fac.ts",
  "cowbot-server-models-database-models-support-ticket-role-options.form.ts",
  "cowbot-server-models-database-models-support-ticket-role-options.model.ts",
  "cowbot-server-models-database-models-support-ticket-role-options.properties.ts",
  "cowbot-server-models-database-models-support-ticket-role-options.test-obj-fac.ts",
  "cowbot-server-models-database-models-support-ticket-settings-text-options.form-group-fac.ts",
  "cowbot-server-models-database-models-support-ticket-settings-text-options.form.ts",
  "cowbot-server-models-database-models-support-ticket-settings-text-options.model.ts",
  "cowbot-server-models-database-models-support-ticket-settings-text-options.properties.ts",
  "cowbot-server-models-database-models-support-ticket-settings-text-options.test-obj-fac.ts",
  "cowbot-server-models-database-models-user.form-group-fac.ts",
  "cowbot-server-models-database-models-user.form.ts",
  "cowbot-server-models-database-models-user.model.ts",
  "cowbot-server-models-database-models-user.properties.ts",
  "cowbot-server-models-database-models-user.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.test-obj-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form-group-fac.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.model.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.properties.ts",
  "cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.model.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.properties.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.model.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.properties.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.model.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.properties.ts",
  "cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form.ts",
  "cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.model.ts",
  "cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.properties.ts",
  "cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form.ts",
  "cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.model.ts",
  "cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.properties.ts",
  "cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-command-base-discord-command.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-command-base-discord-command.form.ts",
  "cowbot-server-models-dt-os-discord-command-base-discord-command.model.ts",
  "cowbot-server-models-dt-os-discord-command-base-discord-command.properties.ts",
  "cowbot-server-models-dt-os-discord-command-base-discord-command.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form.ts",
  "cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.model.ts",
  "cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.properties.ts",
  "cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form.ts",
  "cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.model.ts",
  "cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.properties.ts",
  "cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form.ts",
  "cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.model.ts",
  "cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.properties.ts",
  "cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-form-base-discord-form.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-form-base-discord-form.form.ts",
  "cowbot-server-models-dt-os-discord-form-base-discord-form.model.ts",
  "cowbot-server-models-dt-os-discord-form-base-discord-form.properties.ts",
  "cowbot-server-models-dt-os-discord-form-base-discord-form.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form.ts",
  "cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.model.ts",
  "cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.properties.ts",
  "cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form.ts",
  "cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.model.ts",
  "cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.properties.ts",
  "cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form.ts",
  "cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.model.ts",
  "cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.properties.ts",
  "cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form.ts",
  "cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.model.ts",
  "cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.properties.ts",
  "cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-message-base-discord-message.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-message-base-discord-message.form.ts",
  "cowbot-server-models-dt-os-discord-message-base-discord-message.model.ts",
  "cowbot-server-models-dt-os-discord-message-base-discord-message.properties.ts",
  "cowbot-server-models-dt-os-discord-message-base-discord-message.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form.ts",
  "cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.model.ts",
  "cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.properties.ts",
  "cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form.ts",
  "cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.model.ts",
  "cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.properties.ts",
  "cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form.ts",
  "cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.model.ts",
  "cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.properties.ts",
  "cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-request-exchange-code-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-request-exchange-code-request.form.ts",
  "cowbot-server-models-dt-os-discord-request-exchange-code-request.model.ts",
  "cowbot-server-models-dt-os-discord-request-exchange-code-request.properties.ts",
  "cowbot-server-models-dt-os-discord-request-exchange-code-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-request-refresh-token-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-request-refresh-token-request.form.ts",
  "cowbot-server-models-dt-os-discord-request-refresh-token-request.model.ts",
  "cowbot-server-models-dt-os-discord-request-refresh-token-request.properties.ts",
  "cowbot-server-models-dt-os-discord-request-refresh-token-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-response-discord-ping-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-response-discord-ping-response.form.ts",
  "cowbot-server-models-dt-os-discord-response-discord-ping-response.model.ts",
  "cowbot-server-models-dt-os-discord-response-discord-ping-response.properties.ts",
  "cowbot-server-models-dt-os-discord-response-discord-ping-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-base-discord-server.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-base-discord-server.form.ts",
  "cowbot-server-models-dt-os-discord-server-base-discord-server.model.ts",
  "cowbot-server-models-dt-os-discord-server-base-discord-server.properties.ts",
  "cowbot-server-models-dt-os-discord-server-base-discord-server.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form.ts",
  "cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.model.ts",
  "cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.properties.ts",
  "cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form.ts",
  "cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.model.ts",
  "cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.properties.ts",
  "cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.model.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.properties.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.model.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.properties.ts",
  "cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form.ts",
  "cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.model.ts",
  "cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.properties.ts",
  "cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.model.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.properties.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.model.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.properties.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.model.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.properties.ts",
  "cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form.ts",
  "cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.model.ts",
  "cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.properties.ts",
  "cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form.ts",
  "cowbot-server-models-dt-os-discord-server-response-message-template-import-json.model.ts",
  "cowbot-server-models-dt-os-discord-server-response-message-template-import-json.properties.ts",
  "cowbot-server-models-dt-os-discord-server-response-message-template-import-json.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.model.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.properties.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.model.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.properties.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.model.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.properties.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.model.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.properties.ts",
  "cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form.ts",
  "cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.model.ts",
  "cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.properties.ts",
  "cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-error-error-reason.enum.ts",
  "cowbot-server-models-dt-os-error-response-error-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-error-response-error-response.form.ts",
  "cowbot-server-models-dt-os-error-response-error-response.model.ts",
  "cowbot-server-models-dt-os-error-response-error-response.properties.ts",
  "cowbot-server-models-dt-os-error-response-error-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-shared-betsy-bot-feature.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-application-command-option-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-application-command-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-auto-responder-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-autorole-container-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-channel-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-command-action-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-command-type.enum.ts",
  "cowbot-server-models-dt-os-shared-discord-message-type.enum.ts",
  "cowbot-server-models-dt-os-user-request-register-user-dto.form-group-fac.ts",
  "cowbot-server-models-dt-os-user-request-register-user-dto.form.ts",
  "cowbot-server-models-dt-os-user-request-register-user-dto.model.ts",
  "cowbot-server-models-dt-os-user-request-register-user-dto.properties.ts",
  "cowbot-server-models-dt-os-user-request-register-user-dto.test-obj-fac.ts",
  "cowbot-server-models-dt-os-user-request-update-password-request.form-group-fac.ts",
  "cowbot-server-models-dt-os-user-request-update-password-request.form.ts",
  "cowbot-server-models-dt-os-user-request-update-password-request.model.ts",
  "cowbot-server-models-dt-os-user-request-update-password-request.properties.ts",
  "cowbot-server-models-dt-os-user-request-update-password-request.test-obj-fac.ts",
  "cowbot-server-models-dt-os-user-response-login-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-user-response-login-response.form.ts",
  "cowbot-server-models-dt-os-user-response-login-response.model.ts",
  "cowbot-server-models-dt-os-user-response-login-response.properties.ts",
  "cowbot-server-models-dt-os-user-response-login-response.test-obj-fac.ts",
  "cowbot-server-models-dt-os-user-response-profile-response.form-group-fac.ts",
  "cowbot-server-models-dt-os-user-response-profile-response.form.ts",
  "cowbot-server-models-dt-os-user-response-profile-response.model.ts",
  "cowbot-server-models-dt-os-user-response-profile-response.properties.ts",
  "cowbot-server-models-dt-os-user-response-profile-response.test-obj-fac.ts",
  "cowbot-server-models-ip-quality-score-models-email-quality-response.form-group-fac.ts",
  "cowbot-server-models-ip-quality-score-models-email-quality-response.form.ts",
  "cowbot-server-models-ip-quality-score-models-email-quality-response.model.ts",
  "cowbot-server-models-ip-quality-score-models-email-quality-response.properties.ts",
  "cowbot-server-models-ip-quality-score-models-email-quality-response.test-obj-fac.ts",
  "cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form-group-fac.ts",
  "cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form.ts",
  "cowbot-server-models-ip-quality-score-models-ip-quality-date-response.model.ts",
  "cowbot-server-models-ip-quality-score-models-ip-quality-date-response.properties.ts",
  "cowbot-server-models-ip-quality-score-models-ip-quality-date-response.test-obj-fac.ts",
  "endpoints.ts",
  "index.ts",
  "system-io-file.model.ts",
]
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-api-controllers-test-object.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Api.Controllers.TestObjectForm {
    test: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-api-controllers-test-object.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Api.Controllers.TestObjectForm } from './cowbot-server-api-controllers-test-object.form';

export function Cowbot.Server.Api.Controllers.TestObjectFormGroupFac(): FormGroup<ICowbot.Server.Api.Controllers.TestObjectForm> {
  return new FormGroup<ICowbot.Server.Api.Controllers.TestObjectForm>({
    test: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-api-controllers-test-object.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Api.Controllers.TestObject {
  test?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-api-controllers-test-object.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Api.Controllers.TestObjectProperties {
  TEST = 'test',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-api-controllers-test-object.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Api.Controllers.TestObjectProperties } from './cowbot-server-api-controllers-test-object.properties';

export function createTestCowbot.Server.Api.Controllers.TestObject() {
    return { 
      [Cowbot.Server.Api.Controllers.TestObjectProperties.TEST]: 'TEST', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IAuditLogActionForm } from './audit-log-action.form';
import { IDiscordServerForm } from './discord-server.form';
import { IUserForm } from './user.form';

export interface ICowbot.Server.Models.DatabaseModels.AuditLogForm {
    propertyName: FormControl<string | null | undefined>;
    tableName: FormControl<string | null | undefined>;
    before: FormControl<string | null | undefined>;
    after: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    userId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    action: FormGroup<IAuditLogActionForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    user: FormGroup<IUserForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.AuditLogForm } from './cowbot-server-models-database-models-audit-log.form';
import { IAuditLogActionForm } from './audit-log-action.form';
import { AuditLogActionFormGroupFac } from './audit-log-action.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IUserForm } from './user.form';
import { UserFormGroupFac } from './user.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.AuditLogFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.AuditLogForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.AuditLogForm>({
    propertyName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    tableName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    before: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    after: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordServerId: new FormControl<string | null | undefined>(null),
    userId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    action: new FormGroup<IAuditLogActionForm>(AuditLogActionFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    user: new FormGroup<IUserForm>(UserFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IAuditLogAction } from './audit-log-action.model';
import { IDiscordServer } from './discord-server.model';
import { IUser } from './user.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.AuditLog {
  propertyName?: string | null;
  tableName?: string | null;
  before?: string | null;
  after?: string | null;
  discordUserId?: string | null;
  discordServerId?: string | null;
  userId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  action?: Partial<IAuditLogAction>;
  discordServer?: Partial<IDiscordServer>;
  user?: Partial<IUser>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.AuditLogProperties {
  PROPERTY_NAME = 'propertyName',
  TABLE_NAME = 'tableName',
  BEFORE = 'before',
  AFTER = 'after',
  DISCORD_USER_ID = 'discordUserId',
  DISCORD_SERVER_ID = 'discordServerId',
  USER_ID = 'userId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  ACTION = 'action',
  DISCORD_SERVER = 'discordServer',
  USER = 'user',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.AuditLogProperties } from './cowbot-server-models-database-models-audit-log.properties';

export function createTestCowbot.Server.Models.DatabaseModels.AuditLog() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.PROPERTY_NAME]: 'PROPERTY_NAME',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.TABLE_NAME]: 'TABLE_NAME',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.BEFORE]: 'BEFORE',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.AFTER]: 'AFTER',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.USER_ID]: 'USER_ID',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.ACTION]: 'ACTION',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.AuditLogProperties.USER]: 'USER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log-action.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.AuditLogAction {
  0 = 0,
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DatabaseModels.AuditLogActionNames {
  0 = '0',
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDatabaseModelsAuditLogActionValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-audit-log-feature.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.AuditLogFeature {
  1 = 1,
  2 = 2,
  4 = 4,
  8 = 8,
  16 = 16,
  32 = 32,
  64 = 64,
  128 = 128,
  256 = 256,
  512 = 512,
  1024 = 1024,
  2048 = 2048,
  4096 = 4096,
  8192 = 8192,
  16384 = 16384,
  32768 = 32768,
}

export enum Cowbot.Server.Models.DatabaseModels.AuditLogFeatureNames {
  1 = '1',
  2 = '2',
  4 = '4',
  8 = '8',
  16 = '16',
  32 = '32',
  64 = '64',
  128 = '128',
  256 = '256',
  512 = '512',
  1024 = '1024',
  2048 = '2048',
  4096 = '4096',
  8192 = '8192',
  16384 = '16384',
  32768 = '32768',
}

export const cowbotServerModelsDatabaseModelsAuditLogFeatureValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 4, name: '4', displayText: '4'},
  { key: 8, name: '8', displayText: '8'},
  { key: 16, name: '16', displayText: '16'},
  { key: 32, name: '32', displayText: '32'},
  { key: 64, name: '64', displayText: '64'},
  { key: 128, name: '128', displayText: '128'},
  { key: 256, name: '256', displayText: '256'},
  { key: 512, name: '512', displayText: '512'},
  { key: 1024, name: '1024', displayText: '1024'},
  { key: 2048, name: '2048', displayText: '2048'},
  { key: 4096, name: '4096', displayText: '4096'},
  { key: 8192, name: '8192', displayText: '8192'},
  { key: 16384, name: '16384', displayText: '16384'},
  { key: 32768, name: '32768', displayText: '32768'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderForm {
    discordUserId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderForm } from './cowbot-server-models-database-models-authorized-invite-sender.form';

export function Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderForm>({
    discordUserId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSender {
  discordUserId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderProperties {
  DISCORD_USER_ID = 'discordUserId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderProperties } from './cowbot-server-models-database-models-authorized-invite-sender.properties';

export function createTestCowbot.Server.Models.DatabaseModels.AuthorizedInviteSender() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender-roles.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesForm {
    discordRoleId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender-roles.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesForm } from './cowbot-server-models-database-models-authorized-invite-sender-roles.form';

export function Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesForm>({
    discordRoleId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender-roles.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRoles {
  discordRoleId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender-roles.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesProperties {
  DISCORD_ROLE_ID = 'discordRoleId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-authorized-invite-sender-roles.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesProperties } from './cowbot-server-models-database-models-authorized-invite-sender-roles.properties';

export function createTestCowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRoles() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.AuthorizedInviteSenderRolesProperties.DISCORD_ROLE_ID]: 'DISCORD_ROLE_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-backup-topics.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.BackupTopics {
  1 = 1,
  2 = 2,
  4 = 4,
  8 = 8,
}

export enum Cowbot.Server.Models.DatabaseModels.BackupTopicNames {
  1 = '1',
  2 = '2',
  4 = '4',
  8 = '8',
}

export const cowbotServerModelsDatabaseModelsBackupTopicValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 4, name: '4', displayText: '4'},
  { key: 8, name: '8', displayText: '8'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-betsy-premium-role.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.BetsyPremiumRole {
  0 = 0,
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DatabaseModels.BetsyPremiumRoleNames {
  0 = '0',
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDatabaseModelsBetsyPremiumRoleValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-author.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordAuthorForm {
    name: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
    icon_url: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-author.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordAuthorForm } from './cowbot-server-models-database-models-discord-author.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordAuthorFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAuthorForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAuthorForm>({
    name: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
    icon_url: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-author.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordAuthor {
  name?: string | null;
  url?: string | null;
  icon_url?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-author.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordAuthorProperties {
  NAME = 'name',
  URL = 'url',
  ICON_URL = 'icon_url',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-author.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordAuthorProperties } from './cowbot-server-models-database-models-discord-author.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordAuthor() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordAuthorProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordAuthorProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordAuthorProperties.ICON_URL]: 'ICON_URL', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordAutoResponderTypeForm } from './discord-auto-responder-type.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordAutoResponderPhraseForm } from './discord-auto-responder-phrase.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderForm {
    name: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    deleteAfterMinutes: FormControl<number | null | undefined>;
    ignoredChannels: FormArray<FormControl<string>>;
    whitelistedChannels: FormArray<FormControl<string>>;
    whitelistedCategories: FormArray<FormControl<string>>;
    discordServerId: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordAutoResponderTypeForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    phrases: FormArray<FormGroup<IDiscordAutoResponderPhraseForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderForm } from './cowbot-server-models-database-models-discord-auto-responder.form';
import { IDiscordAutoResponderTypeForm } from './discord-auto-responder-type.form';
import { DiscordAutoResponderTypeFormGroupFac } from './discord-auto-responder-type.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordAutoResponderPhraseForm } from './discord-auto-responder-phrase.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    deleteAfterMinutes: new FormControl<number | null | undefined>(null),
    ignoredChannels: new FormArray<FormControl<string>>([], { validators:  }),
    whitelistedChannels: new FormArray<FormControl<string>>([], { validators:  }),
    whitelistedCategories: new FormArray<FormControl<string>>([], { validators:  }),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordAutoResponderTypeForm>(DiscordAutoResponderTypeFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    phrases: new FormArray<FormGroup<IDiscordAutoResponderPhraseForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordAutoResponderType } from './discord-auto-responder-type.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordAutoResponderPhrase } from './discord-auto-responder-phrase.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoResponder {
  name?: string | null;
  active?: boolean | null;
  deleteAfterMinutes?: number | null;
  ignoredChannels?: string[] | null;
  whitelistedChannels?: string[] | null;
  whitelistedCategories?: string[] | null;
  discordServerId?: string | null;
  discordMessageId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordAutoResponderType>;
  discordServer?: Partial<IDiscordServer>;
  discordMessage?: Partial<IDiscordMessage>;
  phrases?: Partial<IDiscordAutoResponderPhrase[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties {
  NAME = 'name',
  ACTIVE = 'active',
  DELETE_AFTER_MINUTES = 'deleteAfterMinutes',
  IGNORED_CHANNELS = 'ignoredChannels',
  WHITELISTED_CHANNELS = 'whitelistedChannels',
  WHITELISTED_CATEGORIES = 'whitelistedCategories',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  DISCORD_SERVER = 'discordServer',
  DISCORD_MESSAGE = 'discordMessage',
  PHRASES = 'phrases',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties } from './cowbot-server-models-database-models-discord-auto-responder.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordAutoResponder() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.DELETE_AFTER_MINUTES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.IGNORED_CHANNELS]: 'IGNORED_CHANNELS',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.WHITELISTED_CHANNELS]: 'WHITELISTED_CHANNELS',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.WHITELISTED_CATEGORIES]: 'WHITELISTED_CATEGORIES',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderProperties.PHRASES]: 'PHRASES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder-phrase.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseForm {
    value: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder-phrase.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseForm } from './cowbot-server-models-database-models-discord-auto-responder-phrase.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseForm>({
    value: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder-phrase.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhrase {
  value?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder-phrase.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseProperties {
  VALUE = 'value',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-responder-phrase.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseProperties } from './cowbot-server-models-database-models-discord-auto-responder-phrase.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhrase() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoResponderPhraseProperties.VALUE]: 'VALUE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-roles.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoRolesForm {
    name: FormControl<string | null | undefined>;
    discordRoleId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-roles.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordAutoRolesForm } from './cowbot-server-models-database-models-discord-auto-roles.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordAutoRolesFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoRolesForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordAutoRolesForm>({
    name: new FormControl<string | null | undefined>(null),
    discordRoleId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-roles.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordAutoRoles {
  name?: string | null;
  discordRoleId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-roles.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordAutoRolesProperties {
  NAME = 'name',
  DISCORD_ROLE_ID = 'discordRoleId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-auto-roles.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordAutoRolesProperties } from './cowbot-server-models-database-models-discord-auto-roles.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordAutoRoles() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoRolesProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordAutoRolesProperties.DISCORD_ROLE_ID]: 'DISCORD_ROLE_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-button-style.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.DiscordButtonStyle {
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
}

export enum Cowbot.Server.Models.DatabaseModels.DiscordButtonStyleNames {
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
  5 = '5',
}

export const cowbotServerModelsDatabaseModelsDiscordButtonStyleValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
  { key: 5, name: '5', displayText: '5'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-backup.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordChannelTranscriptForm } from './discord-channel-transcript.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelBackupForm {
    channelId: FormControl<string | null | undefined>;
    channelName: FormControl<string | null | undefined>;
    generatedByDiscordName: FormControl<string | null | undefined>;
    generatedByDiscordUserId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    transcript: FormGroup<IDiscordChannelTranscriptForm>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-backup.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordChannelBackupForm } from './cowbot-server-models-database-models-discord-channel-backup.form';
import { IDiscordChannelTranscriptForm } from './discord-channel-transcript.form';
import { DiscordChannelTranscriptFormGroupFac } from './discord-channel-transcript.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelBackupForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelBackupForm>({
    channelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    channelName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    generatedByDiscordName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    generatedByDiscordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    transcript: new FormGroup<IDiscordChannelTranscriptForm>(DiscordChannelTranscriptFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-backup.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordChannelTranscript } from './discord-channel-transcript.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelBackup {
  channelId?: string | null;
  channelName?: string | null;
  generatedByDiscordName?: string | null;
  generatedByDiscordUserId?: string | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  transcript?: Partial<IDiscordChannelTranscript>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-backup.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties {
  CHANNEL_ID = 'channelId',
  CHANNEL_NAME = 'channelName',
  GENERATED_BY_DISCORD_NAME = 'generatedByDiscordName',
  GENERATED_BY_DISCORD_USER_ID = 'generatedByDiscordUserId',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TRANSCRIPT = 'transcript',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-backup.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties } from './cowbot-server-models-database-models-discord-channel-backup.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordChannelBackup() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.CHANNEL_ID]: 'CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.CHANNEL_NAME]: 'CHANNEL_NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.GENERATED_BY_DISCORD_NAME]: 'GENERATED_BY_DISCORD_NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.GENERATED_BY_DISCORD_USER_ID]: 'GENERATED_BY_DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.TRANSCRIPT]: 'TRANSCRIPT',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelBackupProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-cleaner.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelCleanerForm {
    discordChannelId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    ageInHours: FormControl<number | null | undefined>;
    lastRunTime: FormControl<Date | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-cleaner.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordChannelCleanerForm } from './cowbot-server-models-database-models-discord-channel-cleaner.form';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelCleanerForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelCleanerForm>({
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    ageInHours: new FormControl<number | null | undefined>(null),
    lastRunTime: new FormControl<Date | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-cleaner.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelCleaner {
  discordChannelId?: string | null;
  active?: boolean | null;
  ageInHours?: number | null;
  lastRunTime?: Date | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-cleaner.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties {
  DISCORD_CHANNEL_ID = 'discordChannelId',
  ACTIVE = 'active',
  AGE_IN_HOURS = 'ageInHours',
  LAST_RUN_TIME = 'lastRunTime',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-cleaner.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties } from './cowbot-server-models-database-models-discord-channel-cleaner.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordChannelCleaner() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.AGE_IN_HOURS]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.LAST_RUN_TIME]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelCleanerProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageAttachmentForm } from './discord-message-attachment.form';
import { IDiscordEmbedForm } from './discord-embed.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelMessageForm {
    message: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    discordUserName: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    attachments: FormArray<FormGroup<IDiscordMessageAttachmentForm>>;
    embeds: FormArray<FormGroup<IDiscordEmbedForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordChannelMessageForm } from './cowbot-server-models-database-models-discord-channel-message.form';
import { IDiscordMessageAttachmentForm } from './discord-message-attachment.form';
import { IDiscordEmbedForm } from './discord-embed.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelMessageForm>({
    message: new FormControl<string | null | undefined>(null),
    discordUserId: new FormControl<string | null | undefined>(null),
    discordUserName: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    attachments: new FormArray<FormGroup<IDiscordMessageAttachmentForm>>([]),
    embeds: new FormArray<FormGroup<IDiscordEmbedForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageAttachment } from './discord-message-attachment.model';
import { IDiscordEmbed } from './discord-embed.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelMessage {
  message?: string | null;
  discordUserId?: string | null;
  discordUserName?: string | null;
  createdDate?: Date | null;
  attachments?: Partial<IDiscordMessageAttachment[]>;
  embeds?: Partial<IDiscordEmbed[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties {
  MESSAGE = 'message',
  DISCORD_USER_ID = 'discordUserId',
  DISCORD_USER_NAME = 'discordUserName',
  CREATED_DATE = 'createdDate',
  ATTACHMENTS = 'attachments',
  EMBEDS = 'embeds',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties } from './cowbot-server-models-database-models-discord-channel-message.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordChannelMessage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.MESSAGE]: 'MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.DISCORD_USER_NAME]: 'DISCORD_USER_NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.CREATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.ATTACHMENTS]: 'ATTACHMENTS',
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelMessageProperties.EMBEDS]: 'EMBEDS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-transcript.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordChannelMessageForm } from './discord-channel-message.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptForm {
    generatedAt: FormControl<Date | null | undefined>;
    messages: FormArray<FormGroup<IDiscordChannelMessageForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-transcript.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptForm } from './cowbot-server-models-database-models-discord-channel-transcript.form';
import { IDiscordChannelMessageForm } from './discord-channel-message.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptForm>({
    generatedAt: new FormControl<Date | null | undefined>(null),
    messages: new FormArray<FormGroup<IDiscordChannelMessageForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-transcript.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordChannelMessage } from './discord-channel-message.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordChannelTranscript {
  generatedAt?: Date | null;
  messages?: Partial<IDiscordChannelMessage[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-transcript.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptProperties {
  GENERATED_AT = 'generatedAt',
  MESSAGES = 'messages',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-channel-transcript.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptProperties } from './cowbot-server-models-database-models-discord-channel-transcript.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordChannelTranscript() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptProperties.GENERATED_AT]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordChannelTranscriptProperties.MESSAGES]: 'MESSAGES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordCommandActionForm } from './discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandForm {
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    discordApplicationCommandId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordCommandTypeForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    discordCommandActions: FormArray<FormGroup<IDiscordCommandActionForm>>;
    commandInformation: FormGroup<IDiscordApplicationCommandForm>;
    responseMessage: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordCommandForm } from './cowbot-server-models-database-models-discord-command.form';
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { DiscordCommandTypeFormGroupFac } from './discord-command-type.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordCommandActionForm } from './discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { DiscordApplicationCommandFormGroupFac } from './discord-application-command.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordCommandFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    description: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    private: new FormControl<boolean | null | undefined>(null),
    discordApplicationCommandId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordCommandTypeForm>(DiscordCommandTypeFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    discordCommandActions: new FormArray<FormGroup<IDiscordCommandActionForm>>([]),
    commandInformation: new FormGroup<IDiscordApplicationCommandForm>(DiscordApplicationCommandFormGroupFac().controls),
    responseMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandType } from './discord-command-type.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordCommandAction } from './discord-command-action.model';
import { IDiscordApplicationCommand } from './discord-application-command.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordCommand {
  name?: string | null;
  description?: string | null;
  private?: boolean | null;
  discordApplicationCommandId?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordCommandType>;
  discordServer?: Partial<IDiscordServer>;
  discordCommandActions?: Partial<IDiscordCommandAction[]>;
  commandInformation?: Partial<IDiscordApplicationCommand>;
  responseMessage?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties {
  NAME = 'name',
  DESCRIPTION = 'description',
  PRIVATE = 'private',
  DISCORD_APPLICATION_COMMAND_ID = 'discordApplicationCommandId',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  DISCORD_SERVER = 'discordServer',
  DISCORD_COMMAND_ACTIONS = 'discordCommandActions',
  COMMAND_INFORMATION = 'commandInformation',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties } from './cowbot-server-models-database-models-discord-command.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordCommand() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.DISCORD_APPLICATION_COMMAND_ID]: 'DISCORD_APPLICATION_COMMAND_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.DISCORD_COMMAND_ACTIONS]: 'DISCORD_COMMAND_ACTIONS',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.COMMAND_INFORMATION]: 'COMMAND_INFORMATION',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordFormForm } from './discord-form.form';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionForm {
    private: FormControl<boolean | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordCommandActionTypeForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    discordForm: FormGroup<IDiscordFormForm>;
    restRequestMetadata: FormGroup<IDiscordCommandActionRequestMetadataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordCommandActionForm } from './cowbot-server-models-database-models-discord-command-action.form';
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { DiscordCommandActionTypeFormGroupFac } from './discord-command-action-type.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordFormForm } from './discord-form.form';
import { DiscordFormFormGroupFac } from './discord-form.form-group-fac';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';
import { DiscordCommandActionRequestMetadataFormGroupFac } from './discord-command-action-request-metadata.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordCommandActionFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionForm>({
    private: new FormControl<boolean | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    discordCategoryId: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordCommandActionTypeForm>(DiscordCommandActionTypeFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    discordForm: new FormGroup<IDiscordFormForm>(DiscordFormFormGroupFac().controls),
    restRequestMetadata: new FormGroup<IDiscordCommandActionRequestMetadataForm>(DiscordCommandActionRequestMetadataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandActionType } from './discord-command-action-type.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordForm } from './discord-form.model';
import { IDiscordCommandActionRequestMetadata } from './discord-command-action-request-metadata.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandAction {
  private?: boolean | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  discordMessageId?: string | null;
  discordFormId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordCommandActionType>;
  discordMessage?: Partial<IDiscordMessage>;
  discordForm?: Partial<IDiscordForm>;
  restRequestMetadata?: Partial<IDiscordCommandActionRequestMetadata>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties {
  PRIVATE = 'private',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_FORM_ID = 'discordFormId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  DISCORD_MESSAGE = 'discordMessage',
  DISCORD_FORM = 'discordForm',
  REST_REQUEST_METADATA = 'restRequestMetadata',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties } from './cowbot-server-models-database-models-discord-command-action.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordCommandAction() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.DISCORD_FORM]: 'DISCORD_FORM',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionProperties.REST_REQUEST_METADATA]: 'REST_REQUEST_METADATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-default-request-data.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordApplicationCommandOptionTypeForm } from './discord-application-command-option-type.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataForm {
    name: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
    apiPath: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordApplicationCommandOptionTypeForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-default-request-data.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataForm } from './cowbot-server-models-database-models-discord-command-action-default-request-data.form';
import { IDiscordApplicationCommandOptionTypeForm } from './discord-application-command-option-type.form';
import { DiscordApplicationCommandOptionTypeFormGroupFac } from './discord-application-command-option-type.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataForm>({
    name: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
    apiPath: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordApplicationCommandOptionTypeForm>(DiscordApplicationCommandOptionTypeFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-default-request-data.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordApplicationCommandOptionType } from './discord-application-command-option-type.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestData {
  name?: string | null;
  value?: string | null;
  apiPath?: string | null;
  type?: Partial<IDiscordApplicationCommandOptionType>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-default-request-data.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties {
  NAME = 'name',
  VALUE = 'value',
  API_PATH = 'apiPath',
  TYPE = 'type',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-default-request-data.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties } from './cowbot-server-models-database-models-discord-command-action-default-request-data.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestData() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties.VALUE]: 'VALUE',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties.API_PATH]: 'API_PATH', 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionDefaultRequestDataProperties.TYPE]: 'TYPE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-header.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderForm {
    name: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-header.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderForm } from './cowbot-server-models-database-models-discord-command-action-request-header.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderForm>({
    name: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-header.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeader {
  name?: string | null;
  value?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-header.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderProperties {
  NAME = 'name',
  VALUE = 'value',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-header.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderProperties } from './cowbot-server-models-database-models-discord-command-action-request-header.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeader() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestHeaderProperties.VALUE]: 'VALUE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-metadata.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandActionRequestHeaderForm } from './discord-command-action-request-header.form';
import { IDiscordCommandActionDefaultRequestDataForm } from './discord-command-action-default-request-data.form';
import { IRestRequestResponseMappingForm } from './rest-request-response-mapping.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataForm {
    apiUrl: FormControl<string | null | undefined>;
    requestHeaders: FormArray<FormGroup<IDiscordCommandActionRequestHeaderForm>>;
    defaultRequestData: FormArray<FormGroup<IDiscordCommandActionDefaultRequestDataForm>>;
    requestResponseMappings: FormArray<FormGroup<IRestRequestResponseMappingForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-metadata.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataForm } from './cowbot-server-models-database-models-discord-command-action-request-metadata.form';
import { IDiscordCommandActionRequestHeaderForm } from './discord-command-action-request-header.form';
import { IDiscordCommandActionDefaultRequestDataForm } from './discord-command-action-default-request-data.form';
import { IRestRequestResponseMappingForm } from './rest-request-response-mapping.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataForm>({
    apiUrl: new FormControl<string | null | undefined>(null),
    requestHeaders: new FormArray<FormGroup<IDiscordCommandActionRequestHeaderForm>>([]),
    defaultRequestData: new FormArray<FormGroup<IDiscordCommandActionDefaultRequestDataForm>>([]),
    requestResponseMappings: new FormArray<FormGroup<IRestRequestResponseMappingForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-metadata.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandActionRequestHeader } from './discord-command-action-request-header.model';
import { IDiscordCommandActionDefaultRequestData } from './discord-command-action-default-request-data.model';
import { IRestRequestResponseMapping } from './rest-request-response-mapping.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadata {
  apiUrl?: string | null;
  requestHeaders?: Partial<IDiscordCommandActionRequestHeader[]>;
  defaultRequestData?: Partial<IDiscordCommandActionDefaultRequestData[]>;
  requestResponseMappings?: Partial<IRestRequestResponseMapping[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-metadata.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties {
  API_URL = 'apiUrl',
  REQUEST_HEADERS = 'requestHeaders',
  DEFAULT_REQUEST_DATA = 'defaultRequestData',
  REQUEST_RESPONSE_MAPPINGS = 'requestResponseMappings',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-command-action-request-metadata.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties } from './cowbot-server-models-database-models-discord-command-action-request-metadata.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadata() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties.API_URL]: 'API_URL', 
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties.REQUEST_HEADERS]: 'REQUEST_HEADERS',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties.DEFAULT_REQUEST_DATA]: 'DEFAULT_REQUEST_DATA',
      [Cowbot.Server.Models.DatabaseModels.DiscordCommandActionRequestMetadataProperties.REQUEST_RESPONSE_MAPPINGS]: 'REQUEST_RESPONSE_MAPPINGS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordComponentTypeForm } from './discord-component-type.form';
import { IDiscordButtonStyleForm } from './discord-button-style.form';
import { IDiscordEmojiForm } from './discord-emoji.form';
import { IDiscordMenuOptionForm } from './discord-menu-option.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordComponentForm {
    label: FormControl<string | null | undefined>;
    custom_id: FormControl<string | null | undefined>;
    min_length: FormControl<number | null | undefined>;
    max_length: FormControl<number | null | undefined>;
    min_values: FormControl<number | null | undefined>;
    max_values: FormControl<number | null | undefined>;
    placeholder: FormControl<string | null | undefined>;
    required: FormControl<boolean | null | undefined>;
    description: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
    disabled: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordComponentTypeForm>;
    style: FormGroup<IDiscordButtonStyleForm>;
    emoji: FormGroup<IDiscordEmojiForm>;
    options: FormArray<FormGroup<IDiscordMenuOptionForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordComponentForm } from './cowbot-server-models-database-models-discord-component.form';
import { IDiscordComponentTypeForm } from './discord-component-type.form';
import { DiscordComponentTypeFormGroupFac } from './discord-component-type.form-group-fac';
import { IDiscordButtonStyleForm } from './discord-button-style.form';
import { DiscordButtonStyleFormGroupFac } from './discord-button-style.form-group-fac';
import { IDiscordEmojiForm } from './discord-emoji.form';
import { DiscordEmojiFormGroupFac } from './discord-emoji.form-group-fac';
import { IDiscordMenuOptionForm } from './discord-menu-option.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordComponentFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordComponentForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordComponentForm>({
    label: new FormControl<string | null | undefined>(null),
    custom_id: new FormControl<string | null | undefined>(null),
    min_length: new FormControl<number | null | undefined>(null),
    max_length: new FormControl<number | null | undefined>(null),
    min_values: new FormControl<number | null | undefined>(null),
    max_values: new FormControl<number | null | undefined>(null),
    placeholder: new FormControl<string | null | undefined>(null),
    required: new FormControl<boolean | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
    disabled: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordComponentTypeForm>(DiscordComponentTypeFormGroupFac().controls),
    style: new FormGroup<IDiscordButtonStyleForm>(DiscordButtonStyleFormGroupFac().controls),
    emoji: new FormGroup<IDiscordEmojiForm>(DiscordEmojiFormGroupFac().controls),
    options: new FormArray<FormGroup<IDiscordMenuOptionForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordComponentType } from './discord-component-type.model';
import { IDiscordButtonStyle } from './discord-button-style.model';
import { IDiscordEmoji } from './discord-emoji.model';
import { IDiscordMenuOption } from './discord-menu-option.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordComponent {
  label?: string | null;
  custom_id?: string | null;
  min_length?: number | null;
  max_length?: number | null;
  min_values?: number | null;
  max_values?: number | null;
  placeholder?: string | null;
  required?: boolean | null;
  description?: string | null;
  value?: string | null;
  url?: string | null;
  disabled?: boolean | null;
  type?: Partial<IDiscordComponentType>;
  style?: Partial<IDiscordButtonStyle>;
  emoji?: Partial<IDiscordEmoji>;
  options?: Partial<IDiscordMenuOption[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties {
  LABEL = 'label',
  CUSTOM_ID = 'custom_id',
  MIN_LENGTH = 'min_length',
  MAX_LENGTH = 'max_length',
  MIN_VALUES = 'min_values',
  MAX_VALUES = 'max_values',
  PLACEHOLDER = 'placeholder',
  REQUIRED = 'required',
  DESCRIPTION = 'description',
  VALUE = 'value',
  URL = 'url',
  DISABLED = 'disabled',
  TYPE = 'type',
  STYLE = 'style',
  EMOJI = 'emoji',
  OPTIONS = 'options',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties } from './cowbot-server-models-database-models-discord-component.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordComponent() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.LABEL]: 'LABEL',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.MIN_LENGTH]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.MAX_LENGTH]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.MIN_VALUES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.MAX_VALUES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.PLACEHOLDER]: 'PLACEHOLDER',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.REQUIRED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.VALUE]: 'VALUE',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.DISABLED]: false, 
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.STYLE]: 'STYLE',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.EMOJI]: 'EMOJI',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentProperties.OPTIONS]: 'OPTIONS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.DiscordComponentType {
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
}

export enum Cowbot.Server.Models.DatabaseModels.DiscordComponentTypeNames {
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
}

export const cowbotServerModelsDatabaseModelsDiscordComponentTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-wrapper.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordComponentTypeForm } from './discord-component-type.form';
import { IDiscordComponentForm } from './discord-component.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordComponentWrapperForm {
    type: FormGroup<IDiscordComponentTypeForm>;
    components: FormArray<FormGroup<IDiscordComponentForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-wrapper.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordComponentWrapperForm } from './cowbot-server-models-database-models-discord-component-wrapper.form';
import { IDiscordComponentTypeForm } from './discord-component-type.form';
import { DiscordComponentTypeFormGroupFac } from './discord-component-type.form-group-fac';
import { IDiscordComponentForm } from './discord-component.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordComponentWrapperFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordComponentWrapperForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordComponentWrapperForm>({
    type: new FormGroup<IDiscordComponentTypeForm>(DiscordComponentTypeFormGroupFac().controls),
    components: new FormArray<FormGroup<IDiscordComponentForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-wrapper.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordComponentType } from './discord-component-type.model';
import { IDiscordComponent } from './discord-component.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordComponentWrapper {
  type?: Partial<IDiscordComponentType>;
  components?: Partial<IDiscordComponent[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-wrapper.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordComponentWrapperProperties {
  TYPE = 'type',
  COMPONENTS = 'components',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-component-wrapper.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordComponentWrapperProperties } from './cowbot-server-models-database-models-discord-component-wrapper.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordComponentWrapper() {
    return {  
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentWrapperProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordComponentWrapperProperties.COMPONENTS]: 'COMPONENTS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordEmbedFieldForm } from './discord-embed-field.form';
import { IDiscordEmbedFooterForm } from './discord-embed-footer.form';
import { IDiscordEmbedImageForm } from './discord-embed-image.form';
import { IDiscordThumbnailImageForm } from './discord-thumbnail-image.form';
import { IDiscordEmbedVideoForm } from './discord-embed-video.form';
import { IDiscordAuthorForm } from './discord-author.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedForm {
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
    color: FormControl<number | null | undefined>;
    timestamp: FormControl<Date | null | undefined>;
    fields: FormArray<FormGroup<IDiscordEmbedFieldForm>>;
    footer: FormGroup<IDiscordEmbedFooterForm>;
    image: FormGroup<IDiscordEmbedImageForm>;
    thumbnail: FormGroup<IDiscordThumbnailImageForm>;
    video: FormGroup<IDiscordEmbedVideoForm>;
    author: FormGroup<IDiscordAuthorForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmbedForm } from './cowbot-server-models-database-models-discord-embed.form';
import { IDiscordEmbedFieldForm } from './discord-embed-field.form';
import { IDiscordEmbedFooterForm } from './discord-embed-footer.form';
import { DiscordEmbedFooterFormGroupFac } from './discord-embed-footer.form-group-fac';
import { IDiscordEmbedImageForm } from './discord-embed-image.form';
import { DiscordEmbedImageFormGroupFac } from './discord-embed-image.form-group-fac';
import { IDiscordThumbnailImageForm } from './discord-thumbnail-image.form';
import { DiscordThumbnailImageFormGroupFac } from './discord-thumbnail-image.form-group-fac';
import { IDiscordEmbedVideoForm } from './discord-embed-video.form';
import { DiscordEmbedVideoFormGroupFac } from './discord-embed-video.form-group-fac';
import { IDiscordAuthorForm } from './discord-author.form';
import { DiscordAuthorFormGroupFac } from './discord-author.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmbedFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedForm>({
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
    color: new FormControl<number | null | undefined>(null),
    timestamp: new FormControl<Date | null | undefined>(null),
    fields: new FormArray<FormGroup<IDiscordEmbedFieldForm>>([]),
    footer: new FormGroup<IDiscordEmbedFooterForm>(DiscordEmbedFooterFormGroupFac().controls),
    image: new FormGroup<IDiscordEmbedImageForm>(DiscordEmbedImageFormGroupFac().controls),
    thumbnail: new FormGroup<IDiscordThumbnailImageForm>(DiscordThumbnailImageFormGroupFac().controls),
    video: new FormGroup<IDiscordEmbedVideoForm>(DiscordEmbedVideoFormGroupFac().controls),
    author: new FormGroup<IDiscordAuthorForm>(DiscordAuthorFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordEmbedField } from './discord-embed-field.model';
import { IDiscordEmbedFooter } from './discord-embed-footer.model';
import { IDiscordEmbedImage } from './discord-embed-image.model';
import { IDiscordThumbnailImage } from './discord-thumbnail-image.model';
import { IDiscordEmbedVideo } from './discord-embed-video.model';
import { IDiscordAuthor } from './discord-author.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbed {
  title?: string | null;
  description?: string | null;
  url?: string | null;
  color?: number | null;
  timestamp?: Date | null;
  fields?: Partial<IDiscordEmbedField[]>;
  footer?: Partial<IDiscordEmbedFooter>;
  image?: Partial<IDiscordEmbedImage>;
  thumbnail?: Partial<IDiscordThumbnailImage>;
  video?: Partial<IDiscordEmbedVideo>;
  author?: Partial<IDiscordAuthor>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties {
  TITLE = 'title',
  DESCRIPTION = 'description',
  URL = 'url',
  COLOR = 'color',
  TIMESTAMP = 'timestamp',
  FIELDS = 'fields',
  FOOTER = 'footer',
  IMAGE = 'image',
  THUMBNAIL = 'thumbnail',
  VIDEO = 'video',
  AUTHOR = 'author',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties } from './cowbot-server-models-database-models-discord-embed.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmbed() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.COLOR]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.TIMESTAMP]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.FIELDS]: 'FIELDS',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.FOOTER]: 'FOOTER',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.IMAGE]: 'IMAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.THUMBNAIL]: 'THUMBNAIL',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.VIDEO]: 'VIDEO',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedProperties.AUTHOR]: 'AUTHOR',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-field.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedFieldForm {
    name: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
    inline: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-field.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmbedFieldForm } from './cowbot-server-models-database-models-discord-embed-field.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedFieldForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedFieldForm>({
    name: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
    inline: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-field.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedField {
  name?: string | null;
  value?: string | null;
  inline?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-field.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldProperties {
  NAME = 'name',
  VALUE = 'value',
  INLINE = 'inline',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-field.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldProperties } from './cowbot-server-models-database-models-discord-embed-field.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmbedField() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldProperties.VALUE]: 'VALUE',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedFieldProperties.INLINE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-footer.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedFooterForm {
    text: FormControl<string | null | undefined>;
    icon_url: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-footer.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmbedFooterForm } from './cowbot-server-models-database-models-discord-embed-footer.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmbedFooterFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedFooterForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedFooterForm>({
    text: new FormControl<string | null | undefined>(null),
    icon_url: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-footer.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedFooter {
  text?: string | null;
  icon_url?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-footer.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmbedFooterProperties {
  TEXT = 'text',
  ICON_URL = 'icon_url',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-footer.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmbedFooterProperties } from './cowbot-server-models-database-models-discord-embed-footer.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmbedFooter() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedFooterProperties.TEXT]: 'TEXT',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedFooterProperties.ICON_URL]: 'ICON_URL', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-image.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedImageForm {
    url: FormControl<string | null | undefined>;
    height: FormControl<number | null | undefined>;
    width: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-image.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmbedImageForm } from './cowbot-server-models-database-models-discord-embed-image.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedImageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedImageForm>({
    url: new FormControl<string | null | undefined>(null),
    height: new FormControl<number | null | undefined>(null),
    width: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-image.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedImage {
  url?: string | null;
  height?: number | null;
  width?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-image.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageProperties {
  URL = 'url',
  HEIGHT = 'height',
  WIDTH = 'width',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-image.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageProperties } from './cowbot-server-models-database-models-discord-embed-image.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmbedImage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageProperties.HEIGHT]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedImageProperties.WIDTH]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-video.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedVideoForm {
    url: FormControl<string | null | undefined>;
    height: FormControl<number | null | undefined>;
    width: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-video.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmbedVideoForm } from './cowbot-server-models-database-models-discord-embed-video.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedVideoForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmbedVideoForm>({
    url: new FormControl<string | null | undefined>(null),
    height: new FormControl<number | null | undefined>(null),
    width: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-video.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmbedVideo {
  url?: string | null;
  height?: number | null;
  width?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-video.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoProperties {
  URL = 'url',
  HEIGHT = 'height',
  WIDTH = 'width',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-embed-video.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoProperties } from './cowbot-server-models-database-models-discord-embed-video.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmbedVideo() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoProperties.HEIGHT]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmbedVideoProperties.WIDTH]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-emoji.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordEmojiForm {
    name: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    animated: FormControl<boolean | null | undefined>;
    managed: FormControl<boolean | null | undefined>;
    require_colons: FormControl<boolean | null | undefined>;
    available: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-emoji.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordEmojiForm } from './cowbot-server-models-database-models-discord-emoji.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordEmojiFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmojiForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordEmojiForm>({
    name: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    animated: new FormControl<boolean | null | undefined>(null),
    managed: new FormControl<boolean | null | undefined>(null),
    require_colons: new FormControl<boolean | null | undefined>(null),
    available: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-emoji.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordEmoji {
  name?: string | null;
  id?: string | null;
  animated?: boolean | null;
  managed?: boolean | null;
  require_colons?: boolean | null;
  available?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-emoji.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties {
  NAME = 'name',
  ID = 'id',
  ANIMATED = 'animated',
  MANAGED = 'managed',
  REQUIRE_COLONS = 'require_colons',
  AVAILABLE = 'available',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-emoji.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties } from './cowbot-server-models-database-models-discord-emoji.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordEmoji() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.ANIMATED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.MANAGED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.REQUIRE_COLONS]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordEmojiProperties.AVAILABLE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';
import { IDiscordFormSubmissionForm } from './discord-form-submission.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordMessageForm } from './discord-message.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordFormForm {
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
    submissions: FormArray<FormGroup<IDiscordFormSubmissionForm>>;
    discordServer: FormGroup<IDiscordServerForm>;
    responseMessage: FormGroup<IDiscordMessageForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordFormForm } from './cowbot-server-models-database-models-discord-form.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';
import { IDiscordFormSubmissionForm } from './discord-form-submission.form';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordFormFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormForm>({
    title: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    description: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    customId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(100) } ),
    private: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
    submissions: new FormArray<FormGroup<IDiscordFormSubmissionForm>>([]),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    responseMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';
import { IDiscordFormSubmission } from './discord-form-submission.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordMessage } from './discord-message.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordForm {
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  formData?: Partial<IDiscordFormData>;
  submissions?: Partial<IDiscordFormSubmission[]>;
  discordServer?: Partial<IDiscordServer>;
  responseMessage?: Partial<IDiscordMessage>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordFormProperties {
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  FORM_DATA = 'formData',
  SUBMISSIONS = 'submissions',
  DISCORD_SERVER = 'discordServer',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordFormProperties } from './cowbot-server-models-database-models-discord-form.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordForm() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.FORM_DATA]: 'FORM_DATA',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.SUBMISSIONS]: 'SUBMISSIONS',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-data.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordComponentWrapperForm } from './discord-component-wrapper.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordFormDataForm {
    components: FormArray<FormGroup<IDiscordComponentWrapperForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-data.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordFormDataForm } from './cowbot-server-models-database-models-discord-form-data.form';
import { IDiscordComponentWrapperForm } from './discord-component-wrapper.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordFormDataFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormDataForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormDataForm>({
    components: new FormArray<FormGroup<IDiscordComponentWrapperForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-data.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordComponentWrapper } from './discord-component-wrapper.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordFormData {
  components?: Partial<IDiscordComponentWrapper[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-data.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordFormDataProperties {
  COMPONENTS = 'components',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-data.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordFormDataProperties } from './cowbot-server-models-database-models-discord-form-data.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordFormData() {
    return {  
      [Cowbot.Server.Models.DatabaseModels.DiscordFormDataProperties.COMPONENTS]: 'COMPONENTS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answer.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerForm {
    label: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answer.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerForm } from './cowbot-server-models-database-models-discord-form-field-answer.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerForm>({
    label: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answer.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswer {
  label?: string | null;
  customId?: string | null;
  value?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answer.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerProperties {
  LABEL = 'label',
  CUSTOM_ID = 'customId',
  VALUE = 'value',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answer.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerProperties } from './cowbot-server-models-database-models-discord-form-field-answer.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswer() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerProperties.LABEL]: 'LABEL',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswerProperties.VALUE]: 'VALUE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answers.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormFieldAnswerForm } from './discord-form-field-answer.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersForm {
    fields: FormArray<FormGroup<IDiscordFormFieldAnswerForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answers.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersForm } from './cowbot-server-models-database-models-discord-form-field-answers.form';
import { IDiscordFormFieldAnswerForm } from './discord-form-field-answer.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersForm>({
    fields: new FormArray<FormGroup<IDiscordFormFieldAnswerForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answers.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormFieldAnswer } from './discord-form-field-answer.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswers {
  fields?: Partial<IDiscordFormFieldAnswer[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answers.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersProperties {
  FIELDS = 'fields',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-field-answers.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersProperties } from './cowbot-server-models-database-models-discord-form-field-answers.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswers() {
    return {  
      [Cowbot.Server.Models.DatabaseModels.DiscordFormFieldAnswersProperties.FIELDS]: 'FIELDS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-submission.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormFieldAnswersForm } from './discord-form-field-answers.form';
import { IDiscordFormForm } from './discord-form.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordFormSubmissionForm {
    discordUserId: FormControl<string | null | undefined>;
    discordUsername: FormControl<string | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    answers: FormGroup<IDiscordFormFieldAnswersForm>;
    discordForm: FormGroup<IDiscordFormForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-submission.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordFormSubmissionForm } from './cowbot-server-models-database-models-discord-form-submission.form';
import { IDiscordFormFieldAnswersForm } from './discord-form-field-answers.form';
import { DiscordFormFieldAnswersFormGroupFac } from './discord-form-field-answers.form-group-fac';
import { IDiscordFormForm } from './discord-form.form';
import { DiscordFormFormGroupFac } from './discord-form.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormSubmissionForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordFormSubmissionForm>({
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordUsername: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    discordFormId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    answers: new FormGroup<IDiscordFormFieldAnswersForm>(DiscordFormFieldAnswersFormGroupFac().controls),
    discordForm: new FormGroup<IDiscordFormForm>(DiscordFormFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-submission.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormFieldAnswers } from './discord-form-field-answers.model';
import { IDiscordForm } from './discord-form.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordFormSubmission {
  discordUserId?: string | null;
  discordUsername?: string | null;
  discordFormId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  answers?: Partial<IDiscordFormFieldAnswers>;
  discordForm?: Partial<IDiscordForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-submission.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties {
  DISCORD_USER_ID = 'discordUserId',
  DISCORD_USERNAME = 'discordUsername',
  DISCORD_FORM_ID = 'discordFormId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  ANSWERS = 'answers',
  DISCORD_FORM = 'discordForm',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-form-submission.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties } from './cowbot-server-models-database-models-discord-form-submission.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordFormSubmission() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.DISCORD_USERNAME]: 'DISCORD_USERNAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.ANSWERS]: 'ANSWERS',
      [Cowbot.Server.Models.DatabaseModels.DiscordFormSubmissionProperties.DISCORD_FORM]: 'DISCORD_FORM',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordGiveawayParticipantForm } from './discord-giveaway-participant.form';
import { IDiscordGiveawayRoleForm } from './discord-giveaway-role.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveawayForm {
    name: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    amountOfWinners: FormControl<number | null | undefined>;
    descriptionOfPrize: FormControl<string | null | undefined>;
    cancellationToken: FormControl<number | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    ended: FormControl<boolean | null | undefined>;
    limitToRoles: FormControl<boolean | null | undefined>;
    ends: FormControl<Date | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    containerMessageId: FormControl<string | null | undefined>;
    winningMessageId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordServer: FormGroup<IDiscordServerForm>;
    containerMessage: FormGroup<IDiscordMessageForm>;
    winningMessage: FormGroup<IDiscordMessageForm>;
    participants: FormArray<FormGroup<IDiscordGiveawayParticipantForm>>;
    roles: FormArray<FormGroup<IDiscordGiveawayRoleForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordGiveawayForm } from './cowbot-server-models-database-models-discord-giveaway.form';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordGiveawayParticipantForm } from './discord-giveaway-participant.form';
import { IDiscordGiveawayRoleForm } from './discord-giveaway-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordGiveawayFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    amountOfWinners: new FormControl<number | null | undefined>(null),
    descriptionOfPrize: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(200) } ),
    cancellationToken: new FormControl<number | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    ended: new FormControl<boolean | null | undefined>(null),
    limitToRoles: new FormControl<boolean | null | undefined>(null),
    ends: new FormControl<Date | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    containerMessageId: new FormControl<string | null | undefined>(null),
    winningMessageId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    containerMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    winningMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    participants: new FormArray<FormGroup<IDiscordGiveawayParticipantForm>>([]),
    roles: new FormArray<FormGroup<IDiscordGiveawayRoleForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordServer } from './discord-server.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordGiveawayParticipant } from './discord-giveaway-participant.model';
import { IDiscordGiveawayRole } from './discord-giveaway-role.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveaway {
  name?: string | null;
  active?: boolean | null;
  amountOfWinners?: number | null;
  descriptionOfPrize?: string | null;
  cancellationToken?: number | null;
  discordChannelId?: string | null;
  ended?: boolean | null;
  limitToRoles?: boolean | null;
  ends?: Date | null;
  discordServerId?: string | null;
  containerMessageId?: string | null;
  winningMessageId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordServer?: Partial<IDiscordServer>;
  containerMessage?: Partial<IDiscordMessage>;
  winningMessage?: Partial<IDiscordMessage>;
  participants?: Partial<IDiscordGiveawayParticipant[]>;
  roles?: Partial<IDiscordGiveawayRole[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties {
  NAME = 'name',
  ACTIVE = 'active',
  AMOUNT_OF_WINNERS = 'amountOfWinners',
  DESCRIPTION_OF_PRIZE = 'descriptionOfPrize',
  CANCELLATION_TOKEN = 'cancellationToken',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  ENDED = 'ended',
  LIMIT_TO_ROLES = 'limitToRoles',
  ENDS = 'ends',
  DISCORD_SERVER_ID = 'discordServerId',
  CONTAINER_MESSAGE_ID = 'containerMessageId',
  WINNING_MESSAGE_ID = 'winningMessageId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_SERVER = 'discordServer',
  CONTAINER_MESSAGE = 'containerMessage',
  WINNING_MESSAGE = 'winningMessage',
  PARTICIPANTS = 'participants',
  ROLES = 'roles',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties } from './cowbot-server-models-database-models-discord-giveaway.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordGiveaway() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.AMOUNT_OF_WINNERS]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.DESCRIPTION_OF_PRIZE]: 'DESCRIPTION_OF_PRIZE',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.CANCELLATION_TOKEN]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.ENDED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.LIMIT_TO_ROLES]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.ENDS]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.CONTAINER_MESSAGE_ID]: 'CONTAINER_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.WINNING_MESSAGE_ID]: 'WINNING_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.CONTAINER_MESSAGE]: 'CONTAINER_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.WINNING_MESSAGE]: 'WINNING_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.PARTICIPANTS]: 'PARTICIPANTS',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayProperties.ROLES]: 'ROLES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-participant.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantForm {
    discordUsername: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    winner: FormControl<boolean | null | undefined>;
    claimed: FormControl<boolean | null | undefined>;
    totalEntries: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-participant.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantForm } from './cowbot-server-models-database-models-discord-giveaway-participant.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantForm>({
    discordUsername: new FormControl<string | null | undefined>(null),
    discordUserId: new FormControl<string | null | undefined>(null),
    winner: new FormControl<boolean | null | undefined>(null),
    claimed: new FormControl<boolean | null | undefined>(null),
    totalEntries: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-participant.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipant {
  discordUsername?: string | null;
  discordUserId?: string | null;
  winner?: boolean | null;
  claimed?: boolean | null;
  totalEntries?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-participant.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties {
  DISCORD_USERNAME = 'discordUsername',
  DISCORD_USER_ID = 'discordUserId',
  WINNER = 'winner',
  CLAIMED = 'claimed',
  TOTAL_ENTRIES = 'totalEntries',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-participant.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties } from './cowbot-server-models-database-models-discord-giveaway-participant.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipant() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties.DISCORD_USERNAME]: 'DISCORD_USERNAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties.WINNER]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties.CLAIMED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayParticipantProperties.TOTAL_ENTRIES]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-role.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleForm {
    name: FormControl<string | null | undefined>;
    discordRoleId: FormControl<string | null | undefined>;
    numberOfEntries: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-role.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleForm } from './cowbot-server-models-database-models-discord-giveaway-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleForm>({
    name: new FormControl<string | null | undefined>(null),
    discordRoleId: new FormControl<string | null | undefined>(null),
    numberOfEntries: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-role.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordGiveawayRole {
  name?: string | null;
  discordRoleId?: string | null;
  numberOfEntries?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-role.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleProperties {
  NAME = 'name',
  DISCORD_ROLE_ID = 'discordRoleId',
  NUMBER_OF_ENTRIES = 'numberOfEntries',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-giveaway-role.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleProperties } from './cowbot-server-models-database-models-discord-giveaway-role.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordGiveawayRole() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleProperties.DISCORD_ROLE_ID]: 'DISCORD_ROLE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGiveawayRoleProperties.NUMBER_OF_ENTRIES]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IEmailQualityResponseForm } from './email-quality-response.form';
import { IIpInformationForm } from './ip-information.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordGuildUserForm {
    discordUserId: FormControl<string | null | undefined>;
    lastKnownName: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    emailInformation: FormGroup<IEmailQualityResponseForm>;
    ips: FormArray<FormGroup<IIpInformationForm>>;
    servers: FormArray<FormGroup<IDiscordServerForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordGuildUserForm } from './cowbot-server-models-database-models-discord-guild-user.form';
import { IEmailQualityResponseForm } from './email-quality-response.form';
import { EmailQualityResponseFormGroupFac } from './email-quality-response.form-group-fac';
import { IIpInformationForm } from './ip-information.form';
import { IDiscordServerForm } from './discord-server.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordGuildUserFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGuildUserForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGuildUserForm>({
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    lastKnownName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    emailInformation: new FormGroup<IEmailQualityResponseForm>(EmailQualityResponseFormGroupFac().controls),
    ips: new FormArray<FormGroup<IIpInformationForm>>([]),
    servers: new FormArray<FormGroup<IDiscordServerForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IEmailQualityResponse } from './email-quality-response.model';
import { IIpInformation } from './ip-information.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordGuildUser {
  discordUserId?: string | null;
  lastKnownName?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  emailInformation?: Partial<IEmailQualityResponse>;
  ips?: Partial<IIpInformation[]>;
  servers?: Partial<IDiscordServer[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties {
  DISCORD_USER_ID = 'discordUserId',
  LAST_KNOWN_NAME = 'lastKnownName',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  EMAIL_INFORMATION = 'emailInformation',
  IPS = 'ips',
  SERVERS = 'servers',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties } from './cowbot-server-models-database-models-discord-guild-user.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordGuildUser() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.LAST_KNOWN_NAME]: 'LAST_KNOWN_NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.EMAIL_INFORMATION]: 'EMAIL_INFORMATION',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.IPS]: 'IPS',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserProperties.SERVERS]: 'SERVERS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user-invite.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordInviteLinkForm } from './discord-invite-link.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteForm {
    invitedBy: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    discordInviteLinkId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordInviteLink: FormGroup<IDiscordInviteLinkForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user-invite.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteForm } from './cowbot-server-models-database-models-discord-guild-user-invite.form';
import { IDiscordInviteLinkForm } from './discord-invite-link.form';
import { DiscordInviteLinkFormGroupFac } from './discord-invite-link.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteForm>({
    invitedBy: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordInviteLinkId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordInviteLink: new FormGroup<IDiscordInviteLinkForm>(DiscordInviteLinkFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user-invite.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordInviteLink } from './discord-invite-link.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordGuildUserInvite {
  invitedBy?: string | null;
  discordUserId?: string | null;
  discordInviteLinkId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordInviteLink?: Partial<IDiscordInviteLink>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user-invite.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties {
  INVITED_BY = 'invitedBy',
  DISCORD_USER_ID = 'discordUserId',
  DISCORD_INVITE_LINK_ID = 'discordInviteLinkId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_INVITE_LINK = 'discordInviteLink',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-guild-user-invite.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties } from './cowbot-server-models-database-models-discord-guild-user-invite.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordGuildUserInvite() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.INVITED_BY]: 'INVITED_BY',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.DISCORD_INVITE_LINK_ID]: 'DISCORD_INVITE_LINK_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordGuildUserInviteProperties.DISCORD_INVITE_LINK]: 'DISCORD_INVITE_LINK',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-invite-link.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordGuildUserInviteForm } from './discord-guild-user-invite.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordInviteLinkForm {
    code: FormControl<string | null | undefined>;
    expiresAt: FormControl<Date | null | undefined>;
    uses: FormControl<number | null | undefined>;
    maxUses: FormControl<number | null | undefined>;
    temporary: FormControl<boolean | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    inviterDiscordUserId: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    discordGuildUserInvites: FormArray<FormGroup<IDiscordGuildUserInviteForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-invite-link.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordInviteLinkForm } from './cowbot-server-models-database-models-discord-invite-link.form';
import { IDiscordGuildUserInviteForm } from './discord-guild-user-invite.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordInviteLinkForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordInviteLinkForm>({
    code: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    expiresAt: new FormControl<Date | null | undefined>(null),
    uses: new FormControl<number | null | undefined>(null),
    maxUses: new FormControl<number | null | undefined>(null),
    temporary: new FormControl<boolean | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    inviterDiscordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordGuildUserInvites: new FormArray<FormGroup<IDiscordGuildUserInviteForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-invite-link.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordGuildUserInvite } from './discord-guild-user-invite.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordInviteLink {
  code?: string | null;
  expiresAt?: Date | null;
  uses?: number | null;
  maxUses?: number | null;
  temporary?: boolean | null;
  active?: boolean | null;
  inviterDiscordUserId?: string | null;
  discordChannelId?: string | null;
  discordServerId?: string | null;
  discordGuildUserInvites?: Partial<IDiscordGuildUserInvite[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-invite-link.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties {
  CODE = 'code',
  EXPIRES_AT = 'expiresAt',
  USES = 'uses',
  MAX_USES = 'maxUses',
  TEMPORARY = 'temporary',
  ACTIVE = 'active',
  INVITER_DISCORD_USER_ID = 'inviterDiscordUserId',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_GUILD_USER_INVITES = 'discordGuildUserInvites',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-invite-link.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties } from './cowbot-server-models-database-models-discord-invite-link.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordInviteLink() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.CODE]: 'CODE',
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.EXPIRES_AT]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.USES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.MAX_USES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.TEMPORARY]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.INVITER_DISCORD_USER_ID]: 'INVITER_DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID', 
      [Cowbot.Server.Models.DatabaseModels.DiscordInviteLinkProperties.DISCORD_GUILD_USER_INVITES]: 'DISCORD_GUILD_USER_INVITES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-menu-option.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordEmojiForm } from './discord-emoji.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordMenuOptionForm {
    label: FormControl<string | null | undefined>;
    value: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    emoji: FormGroup<IDiscordEmojiForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-menu-option.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordMenuOptionForm } from './cowbot-server-models-database-models-discord-menu-option.form';
import { IDiscordEmojiForm } from './discord-emoji.form';
import { DiscordEmojiFormGroupFac } from './discord-emoji.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMenuOptionForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMenuOptionForm>({
    label: new FormControl<string | null | undefined>(null),
    value: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    emoji: new FormGroup<IDiscordEmojiForm>(DiscordEmojiFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-menu-option.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordEmoji } from './discord-emoji.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordMenuOption {
  label?: string | null;
  value?: string | null;
  description?: string | null;
  emoji?: Partial<IDiscordEmoji>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-menu-option.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties {
  LABEL = 'label',
  VALUE = 'value',
  DESCRIPTION = 'description',
  EMOJI = 'emoji',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-menu-option.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties } from './cowbot-server-models-database-models-discord-menu-option.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordMenuOption() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties.LABEL]: 'LABEL',
      [Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties.VALUE]: 'VALUE',
      [Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties.DESCRIPTION]: 'DESCRIPTION', 
      [Cowbot.Server.Models.DatabaseModels.DiscordMenuOptionProperties.EMOJI]: 'EMOJI',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { IMessageDataForm } from './message-data.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordMessageForm {
    name: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordMessageTypeForm>;
    message: FormGroup<IMessageDataForm>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordMessageForm } from './cowbot-server-models-database-models-discord-message.form';
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { DiscordMessageTypeFormGroupFac } from './discord-message-type.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordMessageId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordCategoryId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordMessageTypeForm>(DiscordMessageTypeFormGroupFac().controls),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageType } from './discord-message-type.model';
import { IMessageData } from './message-data.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordMessage {
  name?: string | null;
  discordMessageId?: string | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordMessageType>;
  message?: Partial<IMessageData>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties {
  NAME = 'name',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  MESSAGE = 'message',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties } from './cowbot-server-models-database-models-discord-message.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordMessage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.MESSAGE]: 'MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-attachment.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentForm {
    id: FormControl<string | null | undefined>;
    filename: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    proxy_url: FormControl<string | null | undefined>;
    height: FormControl<string | null | undefined>;
    width: FormControl<string | null | undefined>;
    content_type: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-attachment.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentForm } from './cowbot-server-models-database-models-discord-message-attachment.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentForm>({
    id: new FormControl<string | null | undefined>(null),
    filename: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    proxy_url: new FormControl<string | null | undefined>(null),
    height: new FormControl<string | null | undefined>(null),
    width: new FormControl<string | null | undefined>(null),
    content_type: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-attachment.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordMessageAttachment {
  id?: string | null;
  filename?: string | null;
  description?: string | null;
  proxy_url?: string | null;
  height?: string | null;
  width?: string | null;
  content_type?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-attachment.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties {
  ID = 'id',
  FILENAME = 'filename',
  DESCRIPTION = 'description',
  PROXY_URL = 'proxy_url',
  HEIGHT = 'height',
  WIDTH = 'width',
  CONTENT_TYPE = 'content_type',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-attachment.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties } from './cowbot-server-models-database-models-discord-message-attachment.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordMessageAttachment() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.FILENAME]: 'FILENAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.PROXY_URL]: 'PROXY_URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.HEIGHT]: 'HEIGHT',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.WIDTH]: 'WIDTH',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageAttachmentProperties.CONTENT_TYPE]: 'CONTENT_TYPE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-flags.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.DiscordMessageFlags {
  1 = 1,
  2 = 2,
  4 = 4,
  8 = 8,
  16 = 16,
  32 = 32,
  64 = 64,
  128 = 128,
  256 = 256,
}

export enum Cowbot.Server.Models.DatabaseModels.DiscordMessageFlagNames {
  1 = '1',
  2 = '2',
  4 = '4',
  8 = '8',
  16 = '16',
  32 = '32',
  64 = '64',
  128 = '128',
  256 = '256',
}

export const cowbotServerModelsDatabaseModelsDiscordMessageFlagValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 4, name: '4', displayText: '4'},
  { key: 8, name: '8', displayText: '8'},
  { key: 16, name: '16', displayText: '16'},
  { key: 32, name: '32', displayText: '32'},
  { key: 64, name: '64', displayText: '64'},
  { key: 128, name: '128', displayText: '128'},
  { key: 256, name: '256', displayText: '256'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-reference.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordMessageReferenceForm {
    message_id: FormControl<string | null | undefined>;
    channel_id: FormControl<string | null | undefined>;
    guild_id: FormControl<string | null | undefined>;
    fail_if_not_exists: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-reference.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordMessageReferenceForm } from './cowbot-server-models-database-models-discord-message-reference.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageReferenceForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordMessageReferenceForm>({
    message_id: new FormControl<string | null | undefined>(null),
    channel_id: new FormControl<string | null | undefined>(null),
    guild_id: new FormControl<string | null | undefined>(null),
    fail_if_not_exists: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-reference.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordMessageReference {
  message_id?: string | null;
  channel_id?: string | null;
  guild_id?: string | null;
  fail_if_not_exists?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-reference.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties {
  MESSAGE_ID = 'message_id',
  CHANNEL_ID = 'channel_id',
  GUILD_ID = 'guild_id',
  FAIL_IF_NOT_EXISTS = 'fail_if_not_exists',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-message-reference.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties } from './cowbot-server-models-database-models-discord-message-reference.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordMessageReference() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties.MESSAGE_ID]: 'MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties.CHANNEL_ID]: 'CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties.GUILD_ID]: 'GUILD_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordMessageReferenceProperties.FAIL_IF_NOT_EXISTS]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordPollParticipantForm } from './discord-poll-participant.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordPollForm {
    name: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    cancellationToken: FormControl<number | null | undefined>;
    ended: FormControl<boolean | null | undefined>;
    ends: FormControl<Date | null | undefined>;
    containerMessageId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordServer: FormGroup<IDiscordServerForm>;
    containerMessage: FormGroup<IDiscordMessageForm>;
    participants: FormArray<FormGroup<IDiscordPollParticipantForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordPollForm } from './cowbot-server-models-database-models-discord-poll.form';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordPollParticipantForm } from './discord-poll-participant.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordPollFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordPollForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordPollForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordServerId: new FormControl<string | null | undefined>(null),
    cancellationToken: new FormControl<number | null | undefined>(null),
    ended: new FormControl<boolean | null | undefined>(null),
    ends: new FormControl<Date | null | undefined>(null),
    containerMessageId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    containerMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    participants: new FormArray<FormGroup<IDiscordPollParticipantForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordServer } from './discord-server.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordPollParticipant } from './discord-poll-participant.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordPoll {
  name?: string | null;
  active?: boolean | null;
  discordChannelId?: string | null;
  discordServerId?: string | null;
  cancellationToken?: number | null;
  ended?: boolean | null;
  ends?: Date | null;
  containerMessageId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordServer?: Partial<IDiscordServer>;
  containerMessage?: Partial<IDiscordMessage>;
  participants?: Partial<IDiscordPollParticipant[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordPollProperties {
  NAME = 'name',
  ACTIVE = 'active',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_SERVER_ID = 'discordServerId',
  CANCELLATION_TOKEN = 'cancellationToken',
  ENDED = 'ended',
  ENDS = 'ends',
  CONTAINER_MESSAGE_ID = 'containerMessageId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_SERVER = 'discordServer',
  CONTAINER_MESSAGE = 'containerMessage',
  PARTICIPANTS = 'participants',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordPollProperties } from './cowbot-server-models-database-models-discord-poll.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordPoll() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.CANCELLATION_TOKEN]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.ENDED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.ENDS]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.CONTAINER_MESSAGE_ID]: 'CONTAINER_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.CONTAINER_MESSAGE]: 'CONTAINER_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollProperties.PARTICIPANTS]: 'PARTICIPANTS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll-participant.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordPollParticipantForm {
    discordUsername: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    answer: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll-participant.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordPollParticipantForm } from './cowbot-server-models-database-models-discord-poll-participant.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordPollParticipantForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordPollParticipantForm>({
    discordUsername: new FormControl<string | null | undefined>(null),
    discordUserId: new FormControl<string | null | undefined>(null),
    answer: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll-participant.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordPollParticipant {
  discordUsername?: string | null;
  discordUserId?: string | null;
  answer?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll-participant.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantProperties {
  DISCORD_USERNAME = 'discordUsername',
  DISCORD_USER_ID = 'discordUserId',
  ANSWER = 'answer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-poll-participant.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantProperties } from './cowbot-server-models-database-models-discord-poll-participant.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordPollParticipant() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantProperties.DISCORD_USERNAME]: 'DISCORD_USERNAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordPollParticipantProperties.ANSWER]: 'ANSWER', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordReviewTypeForm } from './discord-review-type.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordReviewForm {
    message: FormControl<string | null | undefined>;
    rating: FormControl<number | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    category: FormControl<string | null | undefined>;
    targetUserId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordReviewTypeForm>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordReviewForm } from './cowbot-server-models-database-models-discord-review.form';
import { IDiscordReviewTypeForm } from './discord-review-type.form';
import { DiscordReviewTypeFormGroupFac } from './discord-review-type.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordReviewFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordReviewForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordReviewForm>({
    message: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(512) } ),
    rating: new FormControl<number | null | undefined>(null),
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    category: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    targetUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordReviewTypeForm>(DiscordReviewTypeFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordReviewType } from './discord-review-type.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordReview {
  message?: string | null;
  rating?: number | null;
  discordUserId?: string | null;
  category?: string | null;
  targetUserId?: string | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordReviewType>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties {
  MESSAGE = 'message',
  RATING = 'rating',
  DISCORD_USER_ID = 'discordUserId',
  CATEGORY = 'category',
  TARGET_USER_ID = 'targetUserId',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties } from './cowbot-server-models-database-models-discord-review.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordReview() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.MESSAGE]: 'MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.RATING]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.CATEGORY]: 'CATEGORY',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.TARGET_USER_ID]: 'TARGET_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-category.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordButtonStyleForm } from './discord-button-style.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordReviewCategoryForm {
    name: FormControl<string | null | undefined>;
    buttonStyle: FormGroup<IDiscordButtonStyleForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-category.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordReviewCategoryForm } from './cowbot-server-models-database-models-discord-review-category.form';
import { IDiscordButtonStyleForm } from './discord-button-style.form';
import { DiscordButtonStyleFormGroupFac } from './discord-button-style.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordReviewCategoryFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordReviewCategoryForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordReviewCategoryForm>({
    name: new FormControl<string | null | undefined>(null),
    buttonStyle: new FormGroup<IDiscordButtonStyleForm>(DiscordButtonStyleFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-category.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordButtonStyle } from './discord-button-style.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordReviewCategory {
  name?: string | null;
  buttonStyle?: Partial<IDiscordButtonStyle>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-category.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordReviewCategoryProperties {
  NAME = 'name',
  BUTTON_STYLE = 'buttonStyle',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-category.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordReviewCategoryProperties } from './cowbot-server-models-database-models-discord-review-category.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordReviewCategory() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewCategoryProperties.NAME]: 'NAME', 
      [Cowbot.Server.Models.DatabaseModels.DiscordReviewCategoryProperties.BUTTON_STYLE]: 'BUTTON_STYLE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-review-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.DiscordReviewType {
  0 = 0,
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DatabaseModels.DiscordReviewTypeNames {
  0 = '0',
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDatabaseModelsDiscordReviewTypeValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordRoleForm {
    discordRoleId: FormControl<string | null | undefined>;
    label: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    discordEmojiId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordRoleForm } from './cowbot-server-models-database-models-discord-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordRoleFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordRoleForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordRoleForm>({
    discordRoleId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    label: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    description: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(100) } ),
    discordEmojiId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordRole {
  discordRoleId?: string | null;
  label?: string | null;
  description?: string | null;
  discordEmojiId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties {
  DISCORD_ROLE_ID = 'discordRoleId',
  LABEL = 'label',
  DESCRIPTION = 'description',
  DISCORD_EMOJI_ID = 'discordEmojiId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties } from './cowbot-server-models-database-models-discord-role.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordRole() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.DISCORD_ROLE_ID]: 'DISCORD_ROLE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.LABEL]: 'LABEL',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.DISCORD_EMOJI_ID]: 'DISCORD_EMOJI_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleProperties.UPDATED_DATE]: new Date(), 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role-selector.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordAutoroleContainerTypeForm } from './discord-autorole-container-type.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordRoleForm } from './discord-role.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordRoleSelectorForm {
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    type: FormGroup<IDiscordAutoroleContainerTypeForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    discordRoles: FormArray<FormGroup<IDiscordRoleForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role-selector.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordRoleSelectorForm } from './cowbot-server-models-database-models-discord-role-selector.form';
import { IDiscordAutoroleContainerTypeForm } from './discord-autorole-container-type.form';
import { DiscordAutoroleContainerTypeFormGroupFac } from './discord-autorole-container-type.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordRoleForm } from './discord-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordRoleSelectorForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordRoleSelectorForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    description: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    type: new FormGroup<IDiscordAutoroleContainerTypeForm>(DiscordAutoroleContainerTypeFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    discordRoles: new FormArray<FormGroup<IDiscordRoleForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role-selector.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordAutoroleContainerType } from './discord-autorole-container-type.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordRole } from './discord-role.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordRoleSelector {
  name?: string | null;
  description?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  discordMessageId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  type?: Partial<IDiscordAutoroleContainerType>;
  discordServer?: Partial<IDiscordServer>;
  discordMessage?: Partial<IDiscordMessage>;
  discordRoles?: Partial<IDiscordRole[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role-selector.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties {
  NAME = 'name',
  DESCRIPTION = 'description',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TYPE = 'type',
  DISCORD_SERVER = 'discordServer',
  DISCORD_MESSAGE = 'discordMessage',
  DISCORD_ROLES = 'discordRoles',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-role-selector.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties } from './cowbot-server-models-database-models-discord-role-selector.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordRoleSelector() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordRoleSelectorProperties.DISCORD_ROLES]: 'DISCORD_ROLES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IUserForm } from './user.form';
import { IDiscordCommandForm } from './discord-command.form';
import { IDiscordFormForm } from './discord-form.form';
import { IDiscordTrackedMessageForm } from './discord-tracked-message.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordInviteLinkForm } from './discord-invite-link.form';
import { IDiscordSupportTicketForm } from './discord-support-ticket.form';
import { IDiscordSupportTicketSettingsForm } from './discord-support-ticket-settings.form';
import { IDiscordThreadChannelForm } from './discord-thread-channel.form';
import { IDiscordPollForm } from './discord-poll.form';
import { IDiscordGiveawayForm } from './discord-giveaway.form';
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { IAuditLogFeatureForm } from './audit-log-feature.form';
import { IDiscordServerGlobalSettingsForm } from './discord-server-global-settings.form';
import { IDiscordServerReviewSettingsForm } from './discord-server-review-settings.form';
import { IDiscordServerInviteSettingsForm } from './discord-server-invite-settings.form';
import { IDiscordGuildUserForm } from './discord-guild-user.form';
import { IDiscordServerStatusForm } from './discord-server-status.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerForm {
    guildId: FormControl<string | null | undefined>;
    invited: FormControl<boolean | null | undefined>;
    auditLogChannelId: FormControl<string | null | undefined>;
    serverOwnerDiscordId: FormControl<string | null | undefined>;
    premiumUntil: FormControl<Date | null | undefined>;
    name: FormControl<string | null | undefined>;
    authorizedUsers: FormArray<FormControl<string>>;
    coinbaseCommerceApiKey: FormControl<string | null | undefined>;
    coinbaseCommerceWebhookSecret: FormControl<string | null | undefined>;
    ipQualityScoreApiKey: FormControl<string | null | undefined>;
    customBotJwtKey: FormControl<string | null | undefined>;
    customBotApplicationId: FormControl<string | null | undefined>;
    customBotActive: FormControl<boolean | null | undefined>;
    transferToken: FormControl<string | null | undefined>;
    customBotStatus: FormControl<string | null | undefined>;
    ownerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    owner: FormGroup<IUserForm>;
    commands: FormArray<FormGroup<IDiscordCommandForm>>;
    forms: FormArray<FormGroup<IDiscordFormForm>>;
    trackedMessages: FormArray<FormGroup<IDiscordTrackedMessageForm>>;
    messages: FormArray<FormGroup<IDiscordMessageForm>>;
    inviteLinks: FormArray<FormGroup<IDiscordInviteLinkForm>>;
    supportTickets: FormArray<FormGroup<IDiscordSupportTicketForm>>;
    supportTicketSettings: FormArray<FormGroup<IDiscordSupportTicketSettingsForm>>;
    threadChannels: FormArray<FormGroup<IDiscordThreadChannelForm>>;
    polls: FormArray<FormGroup<IDiscordPollForm>>;
    giveaways: FormArray<FormGroup<IDiscordGiveawayForm>>;
    activeFeatures: FormGroup<IBetsyBotFeatureForm>;
    activeAuditLogFeatures: FormGroup<IAuditLogFeatureForm>;
    globalSettings: FormGroup<IDiscordServerGlobalSettingsForm>;
    reviewSettings: FormGroup<IDiscordServerReviewSettingsForm>;
    inviteSettings: FormGroup<IDiscordServerInviteSettingsForm>;
    guildUsers: FormArray<FormGroup<IDiscordGuildUserForm>>;
    status: FormGroup<IDiscordServerStatusForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerForm } from './cowbot-server-models-database-models-discord-server.form';
import { IUserForm } from './user.form';
import { UserFormGroupFac } from './user.form-group-fac';
import { IDiscordCommandForm } from './discord-command.form';
import { IDiscordFormForm } from './discord-form.form';
import { IDiscordTrackedMessageForm } from './discord-tracked-message.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordInviteLinkForm } from './discord-invite-link.form';
import { IDiscordSupportTicketForm } from './discord-support-ticket.form';
import { IDiscordSupportTicketSettingsForm } from './discord-support-ticket-settings.form';
import { IDiscordThreadChannelForm } from './discord-thread-channel.form';
import { IDiscordPollForm } from './discord-poll.form';
import { IDiscordGiveawayForm } from './discord-giveaway.form';
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { BetsyBotFeatureFormGroupFac } from './betsy-bot-feature.form-group-fac';
import { IAuditLogFeatureForm } from './audit-log-feature.form';
import { AuditLogFeatureFormGroupFac } from './audit-log-feature.form-group-fac';
import { IDiscordServerGlobalSettingsForm } from './discord-server-global-settings.form';
import { DiscordServerGlobalSettingsFormGroupFac } from './discord-server-global-settings.form-group-fac';
import { IDiscordServerReviewSettingsForm } from './discord-server-review-settings.form';
import { DiscordServerReviewSettingsFormGroupFac } from './discord-server-review-settings.form-group-fac';
import { IDiscordServerInviteSettingsForm } from './discord-server-invite-settings.form';
import { DiscordServerInviteSettingsFormGroupFac } from './discord-server-invite-settings.form-group-fac';
import { IDiscordGuildUserForm } from './discord-guild-user.form';
import { IDiscordServerStatusForm } from './discord-server-status.form';
import { DiscordServerStatusFormGroupFac } from './discord-server-status.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerForm>({
    guildId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    invited: new FormControl<boolean | null | undefined>(null),
    auditLogChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    serverOwnerDiscordId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    premiumUntil: new FormControl<Date | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    authorizedUsers: new FormArray<FormControl<string>>([], { validators:  }),
    coinbaseCommerceApiKey: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(1000) } ),
    coinbaseCommerceWebhookSecret: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(1000) } ),
    ipQualityScoreApiKey: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(1000) } ),
    customBotJwtKey: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(1000) } ),
    customBotApplicationId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    customBotActive: new FormControl<boolean | null | undefined>(null),
    transferToken: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(10) } ),
    customBotStatus: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(20) } ),
    ownerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    owner: new FormGroup<IUserForm>(UserFormGroupFac().controls),
    commands: new FormArray<FormGroup<IDiscordCommandForm>>([]),
    forms: new FormArray<FormGroup<IDiscordFormForm>>([]),
    trackedMessages: new FormArray<FormGroup<IDiscordTrackedMessageForm>>([]),
    messages: new FormArray<FormGroup<IDiscordMessageForm>>([]),
    inviteLinks: new FormArray<FormGroup<IDiscordInviteLinkForm>>([]),
    supportTickets: new FormArray<FormGroup<IDiscordSupportTicketForm>>([]),
    supportTicketSettings: new FormArray<FormGroup<IDiscordSupportTicketSettingsForm>>([]),
    threadChannels: new FormArray<FormGroup<IDiscordThreadChannelForm>>([]),
    polls: new FormArray<FormGroup<IDiscordPollForm>>([]),
    giveaways: new FormArray<FormGroup<IDiscordGiveawayForm>>([]),
    activeFeatures: new FormGroup<IBetsyBotFeatureForm>(BetsyBotFeatureFormGroupFac().controls),
    activeAuditLogFeatures: new FormGroup<IAuditLogFeatureForm>(AuditLogFeatureFormGroupFac().controls),
    globalSettings: new FormGroup<IDiscordServerGlobalSettingsForm>(DiscordServerGlobalSettingsFormGroupFac().controls),
    reviewSettings: new FormGroup<IDiscordServerReviewSettingsForm>(DiscordServerReviewSettingsFormGroupFac().controls),
    inviteSettings: new FormGroup<IDiscordServerInviteSettingsForm>(DiscordServerInviteSettingsFormGroupFac().controls),
    guildUsers: new FormArray<FormGroup<IDiscordGuildUserForm>>([]),
    status: new FormGroup<IDiscordServerStatusForm>(DiscordServerStatusFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IUser } from './user.model';
import { IDiscordCommand } from './discord-command.model';
import { IDiscordForm } from './discord-form.model';
import { IDiscordTrackedMessage } from './discord-tracked-message.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordInviteLink } from './discord-invite-link.model';
import { IDiscordSupportTicket } from './discord-support-ticket.model';
import { IDiscordSupportTicketSettings } from './discord-support-ticket-settings.model';
import { IDiscordThreadChannel } from './discord-thread-channel.model';
import { IDiscordPoll } from './discord-poll.model';
import { IDiscordGiveaway } from './discord-giveaway.model';
import { IBetsyBotFeature } from './betsy-bot-feature.model';
import { IAuditLogFeature } from './audit-log-feature.model';
import { IDiscordServerGlobalSettings } from './discord-server-global-settings.model';
import { IDiscordServerReviewSettings } from './discord-server-review-settings.model';
import { IDiscordServerInviteSettings } from './discord-server-invite-settings.model';
import { IDiscordGuildUser } from './discord-guild-user.model';
import { IDiscordServerStatus } from './discord-server-status.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServer {
  guildId?: string | null;
  invited?: boolean | null;
  auditLogChannelId?: string | null;
  serverOwnerDiscordId?: string | null;
  premiumUntil?: Date | null;
  name?: string | null;
  authorizedUsers?: string[] | null;
  coinbaseCommerceApiKey?: string | null;
  coinbaseCommerceWebhookSecret?: string | null;
  ipQualityScoreApiKey?: string | null;
  customBotJwtKey?: string | null;
  customBotApplicationId?: string | null;
  customBotActive?: boolean | null;
  transferToken?: string | null;
  customBotStatus?: string | null;
  ownerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  owner?: Partial<IUser>;
  commands?: Partial<IDiscordCommand[]>;
  forms?: Partial<IDiscordForm[]>;
  trackedMessages?: Partial<IDiscordTrackedMessage[]>;
  messages?: Partial<IDiscordMessage[]>;
  inviteLinks?: Partial<IDiscordInviteLink[]>;
  supportTickets?: Partial<IDiscordSupportTicket[]>;
  supportTicketSettings?: Partial<IDiscordSupportTicketSettings[]>;
  threadChannels?: Partial<IDiscordThreadChannel[]>;
  polls?: Partial<IDiscordPoll[]>;
  giveaways?: Partial<IDiscordGiveaway[]>;
  activeFeatures?: Partial<IBetsyBotFeature>;
  activeAuditLogFeatures?: Partial<IAuditLogFeature>;
  globalSettings?: Partial<IDiscordServerGlobalSettings>;
  reviewSettings?: Partial<IDiscordServerReviewSettings>;
  inviteSettings?: Partial<IDiscordServerInviteSettings>;
  guildUsers?: Partial<IDiscordGuildUser[]>;
  status?: Partial<IDiscordServerStatus>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerProperties {
  GUILD_ID = 'guildId',
  INVITED = 'invited',
  AUDIT_LOG_CHANNEL_ID = 'auditLogChannelId',
  SERVER_OWNER_DISCORD_ID = 'serverOwnerDiscordId',
  PREMIUM_UNTIL = 'premiumUntil',
  NAME = 'name',
  AUTHORIZED_USERS = 'authorizedUsers',
  COINBASE_COMMERCE_API_KEY = 'coinbaseCommerceApiKey',
  COINBASE_COMMERCE_WEBHOOK_SECRET = 'coinbaseCommerceWebhookSecret',
  IP_QUALITY_SCORE_API_KEY = 'ipQualityScoreApiKey',
  CUSTOM_BOT_JWT_KEY = 'customBotJwtKey',
  CUSTOM_BOT_APPLICATION_ID = 'customBotApplicationId',
  CUSTOM_BOT_ACTIVE = 'customBotActive',
  TRANSFER_TOKEN = 'transferToken',
  CUSTOM_BOT_STATUS = 'customBotStatus',
  OWNER_ID = 'ownerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  OWNER = 'owner',
  COMMANDS = 'commands',
  FORMS = 'forms',
  TRACKED_MESSAGES = 'trackedMessages',
  MESSAGES = 'messages',
  INVITE_LINKS = 'inviteLinks',
  SUPPORT_TICKETS = 'supportTickets',
  SUPPORT_TICKET_SETTINGS = 'supportTicketSettings',
  THREAD_CHANNELS = 'threadChannels',
  POLLS = 'polls',
  GIVEAWAYS = 'giveaways',
  ACTIVE_FEATURES = 'activeFeatures',
  ACTIVE_AUDIT_LOG_FEATURES = 'activeAuditLogFeatures',
  GLOBAL_SETTINGS = 'globalSettings',
  REVIEW_SETTINGS = 'reviewSettings',
  INVITE_SETTINGS = 'inviteSettings',
  GUILD_USERS = 'guildUsers',
  STATUS = 'status',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerProperties } from './cowbot-server-models-database-models-discord-server.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServer() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.GUILD_ID]: 'GUILD_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.INVITED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.AUDIT_LOG_CHANNEL_ID]: 'AUDIT_LOG_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.SERVER_OWNER_DISCORD_ID]: 'SERVER_OWNER_DISCORD_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.PREMIUM_UNTIL]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.AUTHORIZED_USERS]: 'AUTHORIZED_USERS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.COINBASE_COMMERCE_API_KEY]: 'COINBASE_COMMERCE_API_KEY',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.COINBASE_COMMERCE_WEBHOOK_SECRET]: 'COINBASE_COMMERCE_WEBHOOK_SECRET',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.IP_QUALITY_SCORE_API_KEY]: 'IP_QUALITY_SCORE_API_KEY',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.CUSTOM_BOT_JWT_KEY]: 'CUSTOM_BOT_JWT_KEY',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.CUSTOM_BOT_APPLICATION_ID]: 'CUSTOM_BOT_APPLICATION_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.CUSTOM_BOT_ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.TRANSFER_TOKEN]: 'TRANSFER_T',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.CUSTOM_BOT_STATUS]: 'CUSTOM_BOT_STATUS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.OWNER_ID]: 'OWNER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.OWNER]: 'OWNER',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.COMMANDS]: 'COMMANDS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.FORMS]: 'FORMS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.TRACKED_MESSAGES]: 'TRACKED_MESSAGES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.MESSAGES]: 'MESSAGES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.INVITE_LINKS]: 'INVITE_LINKS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.SUPPORT_TICKETS]: 'SUPPORT_TICKETS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.SUPPORT_TICKET_SETTINGS]: 'SUPPORT_TICKET_SETTINGS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.THREAD_CHANNELS]: 'THREAD_CHANNELS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.POLLS]: 'POLLS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.GIVEAWAYS]: 'GIVEAWAYS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.ACTIVE_FEATURES]: 'ACTIVE_FEATURES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.ACTIVE_AUDIT_LOG_FEATURES]: 'ACTIVE_AUDIT_LOG_FEATURES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.GLOBAL_SETTINGS]: 'GLOBAL_SETTINGS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.REVIEW_SETTINGS]: 'REVIEW_SETTINGS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.INVITE_SETTINGS]: 'INVITE_SETTINGS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.GUILD_USERS]: 'GUILD_USERS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerProperties.STATUS]: 'STATUS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-global-settings.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IAuthorizedInviteSenderForm } from './authorized-invite-sender.form';
import { IAuthorizedInviteSenderRolesForm } from './authorized-invite-sender-roles.form';
import { IDiscordServerVerificationSettingsForm } from './discord-server-verification-settings.form';
import { IDiscordAutoRolesForm } from './discord-auto-roles.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsForm {
    authorizedInviteSenders: FormArray<FormGroup<IAuthorizedInviteSenderForm>>;
    authorizedInviteSenderRoles: FormArray<FormGroup<IAuthorizedInviteSenderRolesForm>>;
    verificationSettings: FormGroup<IDiscordServerVerificationSettingsForm>;
    autoRoles: FormArray<FormGroup<IDiscordAutoRolesForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-global-settings.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsForm } from './cowbot-server-models-database-models-discord-server-global-settings.form';
import { IAuthorizedInviteSenderForm } from './authorized-invite-sender.form';
import { IAuthorizedInviteSenderRolesForm } from './authorized-invite-sender-roles.form';
import { IDiscordServerVerificationSettingsForm } from './discord-server-verification-settings.form';
import { DiscordServerVerificationSettingsFormGroupFac } from './discord-server-verification-settings.form-group-fac';
import { IDiscordAutoRolesForm } from './discord-auto-roles.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsForm>({
    authorizedInviteSenders: new FormArray<FormGroup<IAuthorizedInviteSenderForm>>([]),
    authorizedInviteSenderRoles: new FormArray<FormGroup<IAuthorizedInviteSenderRolesForm>>([]),
    verificationSettings: new FormGroup<IDiscordServerVerificationSettingsForm>(DiscordServerVerificationSettingsFormGroupFac().controls),
    autoRoles: new FormArray<FormGroup<IDiscordAutoRolesForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-global-settings.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IAuthorizedInviteSender } from './authorized-invite-sender.model';
import { IAuthorizedInviteSenderRoles } from './authorized-invite-sender-roles.model';
import { IDiscordServerVerificationSettings } from './discord-server-verification-settings.model';
import { IDiscordAutoRoles } from './discord-auto-roles.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettings {
  authorizedInviteSenders?: Partial<IAuthorizedInviteSender[]>;
  authorizedInviteSenderRoles?: Partial<IAuthorizedInviteSenderRoles[]>;
  verificationSettings?: Partial<IDiscordServerVerificationSettings>;
  autoRoles?: Partial<IDiscordAutoRoles[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-global-settings.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties {
  AUTHORIZED_INVITE_SENDERS = 'authorizedInviteSenders',
  AUTHORIZED_INVITE_SENDER_ROLES = 'authorizedInviteSenderRoles',
  VERIFICATION_SETTINGS = 'verificationSettings',
  AUTO_ROLES = 'autoRoles',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-global-settings.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties } from './cowbot-server-models-database-models-discord-server-global-settings.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettings() {
    return {  
      [Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties.AUTHORIZED_INVITE_SENDERS]: 'AUTHORIZED_INVITE_SENDERS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties.AUTHORIZED_INVITE_SENDER_ROLES]: 'AUTHORIZED_INVITE_SENDER_ROLES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties.VERIFICATION_SETTINGS]: 'VERIFICATION_SETTINGS',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerGlobalSettingsProperties.AUTO_ROLES]: 'AUTO_ROLES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-role.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleForm {
    count: FormControl<number | null | undefined>;
    discordRoleId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-role.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleForm } from './cowbot-server-models-database-models-discord-server-invite-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleForm>({
    count: new FormControl<number | null | undefined>(null),
    discordRoleId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-role.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServerInviteRole {
  count?: number | null;
  discordRoleId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-role.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleProperties {
  COUNT = 'count',
  DISCORD_ROLE_ID = 'discordRoleId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-role.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleProperties } from './cowbot-server-models-database-models-discord-server-invite-role.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServerInviteRole() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleProperties.COUNT]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordServerInviteRoleProperties.DISCORD_ROLE_ID]: 'DISCORD_ROLE_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-settings.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordServerInviteRoleForm } from './discord-server-invite-role.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsForm {
    inviteRoles: FormArray<FormGroup<IDiscordServerInviteRoleForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-settings.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsForm } from './cowbot-server-models-database-models-discord-server-invite-settings.form';
import { IDiscordServerInviteRoleForm } from './discord-server-invite-role.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsForm>({
    inviteRoles: new FormArray<FormGroup<IDiscordServerInviteRoleForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-settings.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordServerInviteRole } from './discord-server-invite-role.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServerInviteSettings {
  inviteRoles?: Partial<IDiscordServerInviteRole[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-settings.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsProperties {
  INVITE_ROLES = 'inviteRoles',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-invite-settings.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsProperties } from './cowbot-server-models-database-models-discord-server-invite-settings.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServerInviteSettings() {
    return {  
      [Cowbot.Server.Models.DatabaseModels.DiscordServerInviteSettingsProperties.INVITE_ROLES]: 'INVITE_ROLES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-review-settings.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordReviewCategoryForm } from './discord-review-category.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsForm {
    reviewsChannelId: FormControl<string | null | undefined>;
    categories: FormArray<FormGroup<IDiscordReviewCategoryForm>>;
    reviewResponse: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-review-settings.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsForm } from './cowbot-server-models-database-models-discord-server-review-settings.form';
import { IDiscordReviewCategoryForm } from './discord-review-category.form';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsForm>({
    reviewsChannelId: new FormControl<string | null | undefined>(null),
    categories: new FormArray<FormGroup<IDiscordReviewCategoryForm>>([]),
    reviewResponse: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-review-settings.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordReviewCategory } from './discord-review-category.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServerReviewSettings {
  reviewsChannelId?: string | null;
  categories?: Partial<IDiscordReviewCategory[]>;
  reviewResponse?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-review-settings.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsProperties {
  REVIEWS_CHANNEL_ID = 'reviewsChannelId',
  CATEGORIES = 'categories',
  REVIEW_RESPONSE = 'reviewResponse',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-review-settings.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsProperties } from './cowbot-server-models-database-models-discord-server-review-settings.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServerReviewSettings() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsProperties.REVIEWS_CHANNEL_ID]: 'REVIEWS_CHANNEL_ID', 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsProperties.CATEGORIES]: 'CATEGORIES',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerReviewSettingsProperties.REVIEW_RESPONSE]: 'REVIEW_RESPONSE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-status.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.DiscordServerStatus {
  0 = 0,
  1 = 1,
  2 = 2,
  3 = 3,
}

export enum Cowbot.Server.Models.DatabaseModels.DiscordServerStatusNames {
  0 = '0',
  1 = '1',
  2 = '2',
  3 = '3',
}

export const cowbotServerModelsDatabaseModelsDiscordServerStatusValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-verification-settings.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsForm {
    verifiedRoleId: FormControl<string | null | undefined>;
    requireLogin: FormControl<boolean | null | undefined>;
    blockAlts: FormControl<boolean | null | undefined>;
    logChannel: FormControl<string | null | undefined>;
    verifyChannelId: FormControl<string | null | undefined>;
    sentVerificationMessage: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-verification-settings.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsForm } from './cowbot-server-models-database-models-discord-server-verification-settings.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsForm>({
    verifiedRoleId: new FormControl<string | null | undefined>(null),
    requireLogin: new FormControl<boolean | null | undefined>(null),
    blockAlts: new FormControl<boolean | null | undefined>(null),
    logChannel: new FormControl<string | null | undefined>(null),
    verifyChannelId: new FormControl<string | null | undefined>(null),
    sentVerificationMessage: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-verification-settings.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettings {
  verifiedRoleId?: string | null;
  requireLogin?: boolean | null;
  blockAlts?: boolean | null;
  logChannel?: string | null;
  verifyChannelId?: string | null;
  sentVerificationMessage?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-verification-settings.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties {
  VERIFIED_ROLE_ID = 'verifiedRoleId',
  REQUIRE_LOGIN = 'requireLogin',
  BLOCK_ALTS = 'blockAlts',
  LOG_CHANNEL = 'logChannel',
  VERIFY_CHANNEL_ID = 'verifyChannelId',
  SENT_VERIFICATION_MESSAGE = 'sentVerificationMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-server-verification-settings.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties } from './cowbot-server-models-database-models-discord-server-verification-settings.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettings() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.VERIFIED_ROLE_ID]: 'VERIFIED_ROLE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.REQUIRE_LOGIN]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.BLOCK_ALTS]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.LOG_CHANNEL]: 'LOG_CHANNEL',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.VERIFY_CHANNEL_ID]: 'VERIFY_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordServerVerificationSettingsProperties.SENT_VERIFICATION_MESSAGE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordChannelTranscriptForm } from './discord-channel-transcript.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordSupportTicketSettingsForm } from './discord-support-ticket-settings.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketForm {
    name: FormControl<string | null | undefined>;
    createdBy: FormControl<string | null | undefined>;
    discordUserId: FormControl<string | null | undefined>;
    category: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    closed: FormControl<boolean | null | undefined>;
    closedBy: FormControl<string | null | undefined>;
    closedByDiscordUserId: FormControl<string | null | undefined>;
    claimedByDiscordUserId: FormControl<string | null | undefined>;
    closeCancellationToken: FormControl<number | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    discordSupportTicketSettingsId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    transcript: FormGroup<IDiscordChannelTranscriptForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    settings: FormGroup<IDiscordSupportTicketSettingsForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketForm } from './cowbot-server-models-database-models-discord-support-ticket.form';
import { IDiscordChannelTranscriptForm } from './discord-channel-transcript.form';
import { DiscordChannelTranscriptFormGroupFac } from './discord-channel-transcript.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordSupportTicketSettingsForm } from './discord-support-ticket-settings.form';
import { DiscordSupportTicketSettingsFormGroupFac } from './discord-support-ticket-settings.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketForm>({
    name: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    createdBy: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    category: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    closed: new FormControl<boolean | null | undefined>(null),
    closedBy: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    closedByDiscordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    claimedByDiscordUserId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    closeCancellationToken: new FormControl<number | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordSupportTicketSettingsId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    transcript: new FormGroup<IDiscordChannelTranscriptForm>(DiscordChannelTranscriptFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    settings: new FormGroup<IDiscordSupportTicketSettingsForm>(DiscordSupportTicketSettingsFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordChannelTranscript } from './discord-channel-transcript.model';
import { IDiscordMessage } from './discord-message.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordSupportTicketSettings } from './discord-support-ticket-settings.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordSupportTicket {
  name?: string | null;
  createdBy?: string | null;
  discordUserId?: string | null;
  category?: string | null;
  discordChannelId?: string | null;
  closed?: boolean | null;
  closedBy?: string | null;
  closedByDiscordUserId?: string | null;
  claimedByDiscordUserId?: string | null;
  closeCancellationToken?: number | null;
  discordMessageId?: string | null;
  discordServerId?: string | null;
  discordSupportTicketSettingsId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  transcript?: Partial<IDiscordChannelTranscript>;
  discordMessage?: Partial<IDiscordMessage>;
  discordServer?: Partial<IDiscordServer>;
  settings?: Partial<IDiscordSupportTicketSettings>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties {
  NAME = 'name',
  CREATED_BY = 'createdBy',
  DISCORD_USER_ID = 'discordUserId',
  CATEGORY = 'category',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  CLOSED = 'closed',
  CLOSED_BY = 'closedBy',
  CLOSED_BY_DISCORD_USER_ID = 'closedByDiscordUserId',
  CLAIMED_BY_DISCORD_USER_ID = 'claimedByDiscordUserId',
  CLOSE_CANCELLATION_TOKEN = 'closeCancellationToken',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_SUPPORT_TICKET_SETTINGS_ID = 'discordSupportTicketSettingsId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  TRANSCRIPT = 'transcript',
  DISCORD_MESSAGE = 'discordMessage',
  DISCORD_SERVER = 'discordServer',
  SETTINGS = 'settings',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties } from './cowbot-server-models-database-models-discord-support-ticket.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordSupportTicket() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CREATED_BY]: 'CREATED_BY',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CATEGORY]: 'CATEGORY',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CLOSED]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CLOSED_BY]: 'CLOSED_BY',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CLOSED_BY_DISCORD_USER_ID]: 'CLOSED_BY_DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CLAIMED_BY_DISCORD_USER_ID]: 'CLAIMED_BY_DISCORD_USER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CLOSE_CANCELLATION_TOKEN]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_SUPPORT_TICKET_SETTINGS_ID]: 'DISCORD_SUPPORT_TICKET_SETTINGS_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.TRANSCRIPT]: 'TRANSCRIPT',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketProperties.SETTINGS]: 'SETTINGS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket-settings.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IMessageDataForm } from './message-data.form';
import { IDiscordServerForm } from './discord-server.form';
import { IDiscordSupportTicketForm } from './discord-support-ticket.form';
import { IDiscordFormForm } from './discord-form.form';
import { ISupportTicketSettingsTextOptionsForm } from './support-ticket-settings-text-options.form';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsForm {
    identifier: FormControl<string | null | undefined>;
    categoryId: FormControl<string | null | undefined>;
    logChannelId: FormControl<string | null | undefined>;
    assignedRoles: FormArray<FormControl<string>>;
    channelPrefix: FormControl<string | null | undefined>;
    closedCategoryId: FormControl<string | null | undefined>;
    sendTranscriptOnClose: FormControl<boolean | null | undefined>;
    maxOpenPerPerson: FormControl<number | null | undefined>;
    useAutoIncrement: FormControl<boolean | null | undefined>;
    hideName: FormControl<boolean | null | undefined>;
    allowClaiming: FormControl<boolean | null | undefined>;
    closeButtonText: FormControl<string | null | undefined>;
    autoCloseMinutes: FormControl<number | null | undefined>;
    publicTranscript: FormControl<boolean | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    supportTicketAudits: FormGroup<ISupportTicketAuditsForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    initialMessage: FormGroup<IMessageDataForm>;
    discordServer: FormGroup<IDiscordServerForm>;
    supportTickets: FormArray<FormGroup<IDiscordSupportTicketForm>>;
    discordForm: FormGroup<IDiscordFormForm>;
    textOptions: FormGroup<ISupportTicketSettingsTextOptionsForm>;
    supportTicketRoleOptions: FormArray<FormGroup<ISupportTicketRoleOptionsForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket-settings.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsForm } from './cowbot-server-models-database-models-discord-support-ticket-settings.form';
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { SupportTicketAuditsFormGroupFac } from './support-ticket-audits.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';
import { IDiscordSupportTicketForm } from './discord-support-ticket.form';
import { IDiscordFormForm } from './discord-form.form';
import { DiscordFormFormGroupFac } from './discord-form.form-group-fac';
import { ISupportTicketSettingsTextOptionsForm } from './support-ticket-settings-text-options.form';
import { SupportTicketSettingsTextOptionsFormGroupFac } from './support-ticket-settings-text-options.form-group-fac';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsForm>({
    identifier: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    categoryId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    logChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    assignedRoles: new FormArray<FormControl<string>>([], { validators:  }),
    channelPrefix: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(16) } ),
    closedCategoryId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    sendTranscriptOnClose: new FormControl<boolean | null | undefined>(null),
    maxOpenPerPerson: new FormControl<number | null | undefined>(null),
    useAutoIncrement: new FormControl<boolean | null | undefined>(null),
    hideName: new FormControl<boolean | null | undefined>(null),
    allowClaiming: new FormControl<boolean | null | undefined>(null),
    closeButtonText: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(20) } ),
    autoCloseMinutes: new FormControl<number | null | undefined>(null),
    publicTranscript: new FormControl<boolean | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    supportTicketAudits: new FormGroup<ISupportTicketAuditsForm>(SupportTicketAuditsFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    initialMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
    supportTickets: new FormArray<FormGroup<IDiscordSupportTicketForm>>([]),
    discordForm: new FormGroup<IDiscordFormForm>(DiscordFormFormGroupFac().controls),
    textOptions: new FormGroup<ISupportTicketSettingsTextOptionsForm>(SupportTicketSettingsTextOptionsFormGroupFac().controls),
    supportTicketRoleOptions: new FormArray<FormGroup<ISupportTicketRoleOptionsForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket-settings.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ISupportTicketAudits } from './support-ticket-audits.model';
import { IDiscordMessage } from './discord-message.model';
import { IMessageData } from './message-data.model';
import { IDiscordServer } from './discord-server.model';
import { IDiscordSupportTicket } from './discord-support-ticket.model';
import { IDiscordForm } from './discord-form.model';
import { ISupportTicketSettingsTextOptions } from './support-ticket-settings-text-options.model';
import { ISupportTicketRoleOptions } from './support-ticket-role-options.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettings {
  identifier?: string | null;
  categoryId?: string | null;
  logChannelId?: string | null;
  assignedRoles?: string[] | null;
  channelPrefix?: string | null;
  closedCategoryId?: string | null;
  sendTranscriptOnClose?: boolean | null;
  maxOpenPerPerson?: number | null;
  useAutoIncrement?: boolean | null;
  hideName?: boolean | null;
  allowClaiming?: boolean | null;
  closeButtonText?: string | null;
  autoCloseMinutes?: number | null;
  publicTranscript?: boolean | null;
  discordMessageId?: string | null;
  discordServerId?: string | null;
  discordFormId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  supportTicketAudits?: Partial<ISupportTicketAudits>;
  discordMessage?: Partial<IDiscordMessage>;
  initialMessage?: Partial<IMessageData>;
  discordServer?: Partial<IDiscordServer>;
  supportTickets?: Partial<IDiscordSupportTicket[]>;
  discordForm?: Partial<IDiscordForm>;
  textOptions?: Partial<ISupportTicketSettingsTextOptions>;
  supportTicketRoleOptions?: Partial<ISupportTicketRoleOptions[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket-settings.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties {
  IDENTIFIER = 'identifier',
  CATEGORY_ID = 'categoryId',
  LOG_CHANNEL_ID = 'logChannelId',
  ASSIGNED_ROLES = 'assignedRoles',
  CHANNEL_PREFIX = 'channelPrefix',
  CLOSED_CATEGORY_ID = 'closedCategoryId',
  SEND_TRANSCRIPT_ON_CLOSE = 'sendTranscriptOnClose',
  MAX_OPEN_PER_PERSON = 'maxOpenPerPerson',
  USE_AUTO_INCREMENT = 'useAutoIncrement',
  HIDE_NAME = 'hideName',
  ALLOW_CLAIMING = 'allowClaiming',
  CLOSE_BUTTON_TEXT = 'closeButtonText',
  AUTO_CLOSE_MINUTES = 'autoCloseMinutes',
  PUBLIC_TRANSCRIPT = 'publicTranscript',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_FORM_ID = 'discordFormId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  SUPPORT_TICKET_AUDITS = 'supportTicketAudits',
  DISCORD_MESSAGE = 'discordMessage',
  INITIAL_MESSAGE = 'initialMessage',
  DISCORD_SERVER = 'discordServer',
  SUPPORT_TICKETS = 'supportTickets',
  DISCORD_FORM = 'discordForm',
  TEXT_OPTIONS = 'textOptions',
  SUPPORT_TICKET_ROLE_OPTIONS = 'supportTicketRoleOptions',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-support-ticket-settings.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties } from './cowbot-server-models-database-models-discord-support-ticket-settings.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettings() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.IDENTIFIER]: 'IDENTIFIER',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.CATEGORY_ID]: 'CATEGORY_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.LOG_CHANNEL_ID]: 'LOG_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.ASSIGNED_ROLES]: 'ASSIGNED_ROLES',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.CHANNEL_PREFIX]: 'CHANNEL_PREFIX',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.CLOSED_CATEGORY_ID]: 'CLOSED_CATEGORY_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.SEND_TRANSCRIPT_ON_CLOSE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.MAX_OPEN_PER_PERSON]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.USE_AUTO_INCREMENT]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.HIDE_NAME]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.ALLOW_CLAIMING]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.CLOSE_BUTTON_TEXT]: 'CLOSE_BUTTON_TEXT',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.AUTO_CLOSE_MINUTES]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.PUBLIC_TRANSCRIPT]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.SUPPORT_TICKET_AUDITS]: 'SUPPORT_TICKET_AUDITS',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.INITIAL_MESSAGE]: 'INITIAL_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.SUPPORT_TICKETS]: 'SUPPORT_TICKETS',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.DISCORD_FORM]: 'DISCORD_FORM',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.TEXT_OPTIONS]: 'TEXT_OPTIONS',
      [Cowbot.Server.Models.DatabaseModels.DiscordSupportTicketSettingsProperties.SUPPORT_TICKET_ROLE_OPTIONS]: 'SUPPORT_TICKET_ROLE_OPTIONS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thread-channel.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordThreadChannelForm {
    discordChannelId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    initialMessage: FormGroup<IDiscordMessageForm>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thread-channel.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordThreadChannelForm } from './cowbot-server-models-database-models-discord-thread-channel.form';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordThreadChannelForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordThreadChannelForm>({
    discordChannelId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    initialMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thread-channel.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessage } from './discord-message.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordThreadChannel {
  discordChannelId?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  initialMessage?: Partial<IDiscordMessage>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thread-channel.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties {
  DISCORD_CHANNEL_ID = 'discordChannelId',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  INITIAL_MESSAGE = 'initialMessage',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thread-channel.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties } from './cowbot-server-models-database-models-discord-thread-channel.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordThreadChannel() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.INITIAL_MESSAGE]: 'INITIAL_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordThreadChannelProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thumbnail-image.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.DiscordThumbnailImageForm {
    url: FormControl<string | null | undefined>;
    height: FormControl<number | null | undefined>;
    width: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thumbnail-image.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordThumbnailImageForm } from './cowbot-server-models-database-models-discord-thumbnail-image.form';

export function Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordThumbnailImageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordThumbnailImageForm>({
    url: new FormControl<string | null | undefined>(null),
    height: new FormControl<number | null | undefined>(null),
    width: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thumbnail-image.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordThumbnailImage {
  url?: string | null;
  height?: number | null;
  width?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thumbnail-image.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageProperties {
  URL = 'url',
  HEIGHT = 'height',
  WIDTH = 'width',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-thumbnail-image.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageProperties } from './cowbot-server-models-database-models-discord-thumbnail-image.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordThumbnailImage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageProperties.URL]: 'URL',
      [Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageProperties.HEIGHT]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordThumbnailImageProperties.WIDTH]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-tracked-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageForm } from './discord-message.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.DiscordTrackedMessageForm {
    name: FormControl<string | null | undefined>;
    timeToResend: FormControl<number | null | undefined>;
    cancellationToken: FormControl<number | null | undefined>;
    lastSent: FormControl<Date | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-tracked-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.DiscordTrackedMessageForm } from './cowbot-server-models-database-models-discord-tracked-message.form';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordTrackedMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.DiscordTrackedMessageForm>({
    name: new FormControl<string | null | undefined>(null),
    timeToResend: new FormControl<number | null | undefined>(null),
    cancellationToken: new FormControl<number | null | undefined>(null),
    lastSent: new FormControl<Date | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-tracked-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessage } from './discord-message.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.DiscordTrackedMessage {
  name?: string | null;
  timeToResend?: number | null;
  cancellationToken?: number | null;
  lastSent?: Date | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordMessage?: Partial<IDiscordMessage>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-tracked-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties {
  NAME = 'name',
  TIME_TO_RESEND = 'timeToResend',
  CANCELLATION_TOKEN = 'cancellationToken',
  LAST_SENT = 'lastSent',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_MESSAGE = 'discordMessage',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-discord-tracked-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties } from './cowbot-server-models-database-models-discord-tracked-message.properties';

export function createTestCowbot.Server.Models.DatabaseModels.DiscordTrackedMessage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.TIME_TO_RESEND]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.CANCELLATION_TOKEN]: 0,
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.LAST_SENT]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DatabaseModels.DiscordTrackedMessageProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-ip-information.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.IpInformationForm {
    ip: FormControl<string | null | undefined>;
    proxy: FormControl<boolean | null | undefined>;
    isp: FormControl<string | null | undefined>;
    organization: FormControl<string | null | undefined>;
    asn: FormControl<number | null | undefined>;
    host: FormControl<string | null | undefined>;
    countryCode: FormControl<string | null | undefined>;
    city: FormControl<string | null | undefined>;
    region: FormControl<string | null | undefined>;
    isCrawler: FormControl<boolean | null | undefined>;
    connectionType: FormControl<string | null | undefined>;
    latitude: FormControl<number | null | undefined>;
    longitude: FormControl<number | null | undefined>;
    timeZone: FormControl<string | null | undefined>;
    vpn: FormControl<boolean | null | undefined>;
    tor: FormControl<boolean | null | undefined>;
    recentAbuse: FormControl<boolean | null | undefined>;
    botStatus: FormControl<boolean | null | undefined>;
    mobile: FormControl<boolean | null | undefined>;
    fraudScore: FormControl<number | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-ip-information.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.IpInformationForm } from './cowbot-server-models-database-models-ip-information.form';

export function Cowbot.Server.Models.DatabaseModels.IpInformationFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.IpInformationForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.IpInformationForm>({
    ip: new FormControl<string | null | undefined>(null),
    proxy: new FormControl<boolean | null | undefined>(null),
    isp: new FormControl<string | null | undefined>(null),
    organization: new FormControl<string | null | undefined>(null),
    asn: new FormControl<number | null | undefined>(null),
    host: new FormControl<string | null | undefined>(null),
    countryCode: new FormControl<string | null | undefined>(null),
    city: new FormControl<string | null | undefined>(null),
    region: new FormControl<string | null | undefined>(null),
    isCrawler: new FormControl<boolean | null | undefined>(null),
    connectionType: new FormControl<string | null | undefined>(null),
    latitude: new FormControl<number | null | undefined>(null),
    longitude: new FormControl<number | null | undefined>(null),
    timeZone: new FormControl<string | null | undefined>(null),
    vpn: new FormControl<boolean | null | undefined>(null),
    tor: new FormControl<boolean | null | undefined>(null),
    recentAbuse: new FormControl<boolean | null | undefined>(null),
    botStatus: new FormControl<boolean | null | undefined>(null),
    mobile: new FormControl<boolean | null | undefined>(null),
    fraudScore: new FormControl<number | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-ip-information.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.IpInformation {
  ip?: string | null;
  proxy?: boolean | null;
  isp?: string | null;
  organization?: string | null;
  asn?: number | null;
  host?: string | null;
  countryCode?: string | null;
  city?: string | null;
  region?: string | null;
  isCrawler?: boolean | null;
  connectionType?: string | null;
  latitude?: number | null;
  longitude?: number | null;
  timeZone?: string | null;
  vpn?: boolean | null;
  tor?: boolean | null;
  recentAbuse?: boolean | null;
  botStatus?: boolean | null;
  mobile?: boolean | null;
  fraudScore?: number | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-ip-information.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.IpInformationProperties {
  IP = 'ip',
  PROXY = 'proxy',
  ISP = 'isp',
  ORGANIZATION = 'organization',
  ASN = 'asn',
  HOST = 'host',
  COUNTRY_CODE = 'countryCode',
  CITY = 'city',
  REGION = 'region',
  IS_CRAWLER = 'isCrawler',
  CONNECTION_TYPE = 'connectionType',
  LATITUDE = 'latitude',
  LONGITUDE = 'longitude',
  TIME_ZONE = 'timeZone',
  VPN = 'vpn',
  TOR = 'tor',
  RECENT_ABUSE = 'recentAbuse',
  BOT_STATUS = 'botStatus',
  MOBILE = 'mobile',
  FRAUD_SCORE = 'fraudScore',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-ip-information.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.IpInformationProperties } from './cowbot-server-models-database-models-ip-information.properties';

export function createTestCowbot.Server.Models.DatabaseModels.IpInformation() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.IP]: 'IP',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.PROXY]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.ISP]: 'ISP',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.ORGANIZATION]: 'ORGANIZATION',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.ASN]: 0,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.HOST]: 'HOST',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.COUNTRY_CODE]: 'COUNTRY_CODE',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.CITY]: 'CITY',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.REGION]: 'REGION',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.IS_CRAWLER]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.CONNECTION_TYPE]: 'CONNECTION_TYPE',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.LATITUDE]: 0,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.LONGITUDE]: 0,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.TIME_ZONE]: 'TIME_ZONE',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.VPN]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.TOR]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.RECENT_ABUSE]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.BOT_STATUS]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.MOBILE]: false,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.FRAUD_SCORE]: 0,
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.IpInformationProperties.UPDATED_DATE]: new Date(), 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-category.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IKeyValueStorageForm } from './key-value-storage.form';
import { IDiscordServerForm } from './discord-server.form';

export interface ICowbot.Server.Models.DatabaseModels.KeyValueCategoryForm {
    categoryName: FormControl<string | null | undefined>;
    deliverOnFetch: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    storedValues: FormArray<FormGroup<IKeyValueStorageForm>>;
    discordServer: FormGroup<IDiscordServerForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-category.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.KeyValueCategoryForm } from './cowbot-server-models-database-models-key-value-category.form';
import { IKeyValueStorageForm } from './key-value-storage.form';
import { IDiscordServerForm } from './discord-server.form';
import { DiscordServerFormGroupFac } from './discord-server.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.KeyValueCategoryFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.KeyValueCategoryForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.KeyValueCategoryForm>({
    categoryName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    deliverOnFetch: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    storedValues: new FormArray<FormGroup<IKeyValueStorageForm>>([]),
    discordServer: new FormGroup<IDiscordServerForm>(DiscordServerFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-category.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IKeyValueStorage } from './key-value-storage.model';
import { IDiscordServer } from './discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.KeyValueCategory {
  categoryName?: string | null;
  deliverOnFetch?: boolean | null;
  discordServerId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  storedValues?: Partial<IKeyValueStorage[]>;
  discordServer?: Partial<IDiscordServer>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-category.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties {
  CATEGORY_NAME = 'categoryName',
  DELIVER_ON_FETCH = 'deliverOnFetch',
  DISCORD_SERVER_ID = 'discordServerId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  STORED_VALUES = 'storedValues',
  DISCORD_SERVER = 'discordServer',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-category.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties } from './cowbot-server-models-database-models-key-value-category.properties';

export function createTestCowbot.Server.Models.DatabaseModels.KeyValueCategory() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.CATEGORY_NAME]: 'CATEGORY_NAME',
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.DELIVER_ON_FETCH]: false,
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.STORED_VALUES]: 'STORED_VALUES',
      [Cowbot.Server.Models.DatabaseModels.KeyValueCategoryProperties.DISCORD_SERVER]: 'DISCORD_SERVER',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-storage.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.KeyValueStorageForm {
    value: FormControl<string | null | undefined>;
    key: FormControl<string | null | undefined>;
    used: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-storage.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.KeyValueStorageForm } from './cowbot-server-models-database-models-key-value-storage.form';

export function Cowbot.Server.Models.DatabaseModels.KeyValueStorageFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.KeyValueStorageForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.KeyValueStorageForm>({
    value: new FormControl<string | null | undefined>(null),
    key: new FormControl<string | null | undefined>(null),
    used: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-storage.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.KeyValueStorage {
  value?: string | null;
  key?: string | null;
  used?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-storage.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.KeyValueStorageProperties {
  VALUE = 'value',
  KEY = 'key',
  USED = 'used',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-key-value-storage.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.KeyValueStorageProperties } from './cowbot-server-models-database-models-key-value-storage.properties';

export function createTestCowbot.Server.Models.DatabaseModels.KeyValueStorage() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.KeyValueStorageProperties.VALUE]: 'VALUE',
      [Cowbot.Server.Models.DatabaseModels.KeyValueStorageProperties.KEY]: 'KEY',
      [Cowbot.Server.Models.DatabaseModels.KeyValueStorageProperties.USED]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-message-data.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageFlagsForm } from './discord-message-flags.form';
import { IDiscordMessageReferenceForm } from './discord-message-reference.form';
import { IDiscordEmbedForm } from './discord-embed.form';
import { IDiscordComponentWrapperForm } from './discord-component-wrapper.form';
import { IDiscordMessageAttachmentForm } from './discord-message-attachment.form';

export interface ICowbot.Server.Models.DatabaseModels.MessageDataForm {
    tts: FormControl<boolean | null | undefined>;
    content: FormControl<string | null | undefined>;
    flags: FormGroup<IDiscordMessageFlagsForm>;
    messageReference: FormGroup<IDiscordMessageReferenceForm>;
    embeds: FormArray<FormGroup<IDiscordEmbedForm>>;
    components: FormArray<FormGroup<IDiscordComponentWrapperForm>>;
    attachments: FormArray<FormGroup<IDiscordMessageAttachmentForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-message-data.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.MessageDataForm } from './cowbot-server-models-database-models-message-data.form';
import { IDiscordMessageFlagsForm } from './discord-message-flags.form';
import { DiscordMessageFlagsFormGroupFac } from './discord-message-flags.form-group-fac';
import { IDiscordMessageReferenceForm } from './discord-message-reference.form';
import { DiscordMessageReferenceFormGroupFac } from './discord-message-reference.form-group-fac';
import { IDiscordEmbedForm } from './discord-embed.form';
import { IDiscordComponentWrapperForm } from './discord-component-wrapper.form';
import { IDiscordMessageAttachmentForm } from './discord-message-attachment.form';

export function Cowbot.Server.Models.DatabaseModels.MessageDataFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.MessageDataForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.MessageDataForm>({
    tts: new FormControl<boolean | null | undefined>(null),
    content: new FormControl<string | null | undefined>(null),
    flags: new FormGroup<IDiscordMessageFlagsForm>(DiscordMessageFlagsFormGroupFac().controls),
    messageReference: new FormGroup<IDiscordMessageReferenceForm>(DiscordMessageReferenceFormGroupFac().controls),
    embeds: new FormArray<FormGroup<IDiscordEmbedForm>>([]),
    components: new FormArray<FormGroup<IDiscordComponentWrapperForm>>([]),
    attachments: new FormArray<FormGroup<IDiscordMessageAttachmentForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-message-data.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageFlags } from './discord-message-flags.model';
import { IDiscordMessageReference } from './discord-message-reference.model';
import { IDiscordEmbed } from './discord-embed.model';
import { IDiscordComponentWrapper } from './discord-component-wrapper.model';
import { IDiscordMessageAttachment } from './discord-message-attachment.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.MessageData {
  tts?: boolean | null;
  content?: string | null;
  flags?: Partial<IDiscordMessageFlags>;
  messageReference?: Partial<IDiscordMessageReference>;
  embeds?: Partial<IDiscordEmbed[]>;
  components?: Partial<IDiscordComponentWrapper[]>;
  attachments?: Partial<IDiscordMessageAttachment[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-message-data.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.MessageDataProperties {
  TTS = 'tts',
  CONTENT = 'content',
  FLAGS = 'flags',
  MESSAGE_REFERENCE = 'messageReference',
  EMBEDS = 'embeds',
  COMPONENTS = 'components',
  ATTACHMENTS = 'attachments',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-message-data.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.MessageDataProperties } from './cowbot-server-models-database-models-message-data.properties';

export function createTestCowbot.Server.Models.DatabaseModels.MessageData() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.TTS]: false,
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.CONTENT]: 'CONTENT', 
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.FLAGS]: 'FLAGS',
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.MESSAGE_REFERENCE]: 'MESSAGE_REFERENCE',
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.EMBEDS]: 'EMBEDS',
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.COMPONENTS]: 'COMPONENTS',
      [Cowbot.Server.Models.DatabaseModels.MessageDataProperties.ATTACHMENTS]: 'ATTACHMENTS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-rest-request-response-mapping.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.RestRequestResponseMappingForm {
    name: FormControl<string | null | undefined>;
    apiPath: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-rest-request-response-mapping.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.RestRequestResponseMappingForm } from './cowbot-server-models-database-models-rest-request-response-mapping.form';

export function Cowbot.Server.Models.DatabaseModels.RestRequestResponseMappingFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.RestRequestResponseMappingForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.RestRequestResponseMappingForm>({
    name: new FormControl<string | null | undefined>(null),
    apiPath: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-rest-request-response-mapping.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.RestRequestResponseMapping {
  name?: string | null;
  apiPath?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-rest-request-response-mapping.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.RestRequestResponseMappingProperties {
  NAME = 'name',
  API_PATH = 'apiPath',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-rest-request-response-mapping.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.RestRequestResponseMappingProperties } from './cowbot-server-models-database-models-rest-request-response-mapping.properties';

export function createTestCowbot.Server.Models.DatabaseModels.RestRequestResponseMapping() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.RestRequestResponseMappingProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DatabaseModels.RestRequestResponseMappingProperties.API_PATH]: 'API_PATH', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-audits.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DatabaseModels.SupportTicketAudits {
  1 = 1,
  2 = 2,
  4 = 4,
  8 = 8,
  16 = 16,
  32 = 32,
  64 = 64,
}

export enum Cowbot.Server.Models.DatabaseModels.SupportTicketAuditNames {
  1 = '1',
  2 = '2',
  4 = '4',
  8 = '8',
  16 = '16',
  32 = '32',
  64 = '64',
}

export const cowbotServerModelsDatabaseModelsSupportTicketAuditValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 4, name: '4', displayText: '4'},
  { key: 8, name: '8', displayText: '8'},
  { key: 16, name: '16', displayText: '16'},
  { key: 32, name: '32', displayText: '32'},
  { key: 64, name: '64', displayText: '64'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-role-options.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsForm {
    roleId: FormControl<string | null | undefined>;
    prefixOverride: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-role-options.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsForm } from './cowbot-server-models-database-models-support-ticket-role-options.form';

export function Cowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsForm>({
    roleId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(20) } ),
    prefixOverride: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(16) } ),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-role-options.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.SupportTicketRoleOptions {
  roleId?: string | null;
  prefixOverride?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-role-options.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsProperties {
  ROLE_ID = 'roleId',
  PREFIX_OVERRIDE = 'prefixOverride',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-role-options.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsProperties } from './cowbot-server-models-database-models-support-ticket-role-options.properties';

export function createTestCowbot.Server.Models.DatabaseModels.SupportTicketRoleOptions() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsProperties.ROLE_ID]: 'ROLE_ID',
      [Cowbot.Server.Models.DatabaseModels.SupportTicketRoleOptionsProperties.PREFIX_OVERRIDE]: 'PREFIX_OVERRIDE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-settings-text-options.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsForm {
    closedMessageText: FormControl<string | null | undefined>;
    formDataText: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-settings-text-options.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsForm } from './cowbot-server-models-database-models-support-ticket-settings-text-options.form';

export function Cowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsForm>({
    closedMessageText: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    formDataText: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-settings-text-options.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptions {
  closedMessageText?: string | null;
  formDataText?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-settings-text-options.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsProperties {
  CLOSED_MESSAGE_TEXT = 'closedMessageText',
  FORM_DATA_TEXT = 'formDataText',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-support-ticket-settings-text-options.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsProperties } from './cowbot-server-models-database-models-support-ticket-settings-text-options.properties';

export function createTestCowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptions() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsProperties.CLOSED_MESSAGE_TEXT]: 'CLOSED_MESSAGE_TEXT',
      [Cowbot.Server.Models.DatabaseModels.SupportTicketSettingsTextOptionsProperties.FORM_DATA_TEXT]: 'FORM_DATA_TEXT', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-user.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordServerForm } from './discord-server.form';
import { IBetsyPremiumRoleForm } from './betsy-premium-role.form';

export interface ICowbot.Server.Models.DatabaseModels.UserForm {
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    firstName: FormControl<string | null | undefined>;
    lastName: FormControl<string | null | undefined>;
    discordId: FormControl<string | null | undefined>;
    isDeleted: FormControl<boolean | null | undefined>;
    discordAccessToken: FormControl<string | null | undefined>;
    discordRefreshToken: FormControl<string | null | undefined>;
    discordAccessTokenExpirationDate: FormControl<Date | null | undefined>;
    id: FormControl<string | null | undefined>;
    userName: FormControl<string | null | undefined>;
    normalizedUserName: FormControl<string | null | undefined>;
    email: FormControl<string | null | undefined>;
    normalizedEmail: FormControl<string | null | undefined>;
    emailConfirmed: FormControl<boolean | null | undefined>;
    passwordHash: FormControl<string | null | undefined>;
    securityStamp: FormControl<string | null | undefined>;
    concurrencyStamp: FormControl<string | null | undefined>;
    phoneNumber: FormControl<string | null | undefined>;
    phoneNumberConfirmed: FormControl<boolean | null | undefined>;
    twoFactorEnabled: FormControl<boolean | null | undefined>;
    lockoutEnd: FormControl<Date | null | undefined>;
    lockoutEnabled: FormControl<boolean | null | undefined>;
    accessFailedCount: FormControl<number | null | undefined>;
    discordServers: FormArray<FormGroup<IDiscordServerForm>>;
    betsyPremiumRole: FormGroup<IBetsyPremiumRoleForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-user.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DatabaseModels.UserForm } from './cowbot-server-models-database-models-user.form';
import { IDiscordServerForm } from './discord-server.form';
import { IBetsyPremiumRoleForm } from './betsy-premium-role.form';
import { BetsyPremiumRoleFormGroupFac } from './betsy-premium-role.form-group-fac';

export function Cowbot.Server.Models.DatabaseModels.UserFormGroupFac(): FormGroup<ICowbot.Server.Models.DatabaseModels.UserForm> {
  return new FormGroup<ICowbot.Server.Models.DatabaseModels.UserForm>({
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    firstName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    lastName: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    discordId: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(50) } ),
    isDeleted: new FormControl<boolean | null | undefined>(null),
    discordAccessToken: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    discordRefreshToken: new FormControl<string | null | undefined>(null, { validators: Validators.maxLength(255) } ),
    discordAccessTokenExpirationDate: new FormControl<Date | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    userName: new FormControl<string | null | undefined>(null),
    normalizedUserName: new FormControl<string | null | undefined>(null),
    email: new FormControl<string | null | undefined>(null),
    normalizedEmail: new FormControl<string | null | undefined>(null),
    emailConfirmed: new FormControl<boolean | null | undefined>(null),
    passwordHash: new FormControl<string | null | undefined>(null),
    securityStamp: new FormControl<string | null | undefined>(null),
    concurrencyStamp: new FormControl<string | null | undefined>(null),
    phoneNumber: new FormControl<string | null | undefined>(null),
    phoneNumberConfirmed: new FormControl<boolean | null | undefined>(null),
    twoFactorEnabled: new FormControl<boolean | null | undefined>(null),
    lockoutEnd: new FormControl<Date | null | undefined>(null),
    lockoutEnabled: new FormControl<boolean | null | undefined>(null),
    accessFailedCount: new FormControl<number | null | undefined>(null),
    discordServers: new FormArray<FormGroup<IDiscordServerForm>>([]),
    betsyPremiumRole: new FormGroup<IBetsyPremiumRoleForm>(BetsyPremiumRoleFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-user.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordServer } from './discord-server.model';
import { IBetsyPremiumRole } from './betsy-premium-role.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DatabaseModels.User {
  createdDate?: Date | null;
  updatedDate?: Date | null;
  firstName?: string | null;
  lastName?: string | null;
  discordId?: string | null;
  isDeleted?: boolean | null;
  discordAccessToken?: string | null;
  discordRefreshToken?: string | null;
  discordAccessTokenExpirationDate?: Date | null;
  id?: string | null;
  userName?: string | null;
  normalizedUserName?: string | null;
  email?: string | null;
  normalizedEmail?: string | null;
  emailConfirmed?: boolean | null;
  passwordHash?: string | null;
  securityStamp?: string | null;
  concurrencyStamp?: string | null;
  phoneNumber?: string | null;
  phoneNumberConfirmed?: boolean | null;
  twoFactorEnabled?: boolean | null;
  lockoutEnd?: Date | null;
  lockoutEnabled?: boolean | null;
  accessFailedCount?: number | null;
  discordServers?: Partial<IDiscordServer[]>;
  betsyPremiumRole?: Partial<IBetsyPremiumRole>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-user.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DatabaseModels.UserProperties {
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  FIRST_NAME = 'firstName',
  LAST_NAME = 'lastName',
  DISCORD_ID = 'discordId',
  IS_DELETED = 'isDeleted',
  DISCORD_ACCESS_TOKEN = 'discordAccessToken',
  DISCORD_REFRESH_TOKEN = 'discordRefreshToken',
  DISCORD_ACCESS_TOKEN_EXPIRATION_DATE = 'discordAccessTokenExpirationDate',
  ID = 'id',
  USER_NAME = 'userName',
  NORMALIZED_USER_NAME = 'normalizedUserName',
  EMAIL = 'email',
  NORMALIZED_EMAIL = 'normalizedEmail',
  EMAIL_CONFIRMED = 'emailConfirmed',
  PASSWORD_HASH = 'passwordHash',
  SECURITY_STAMP = 'securityStamp',
  CONCURRENCY_STAMP = 'concurrencyStamp',
  PHONE_NUMBER = 'phoneNumber',
  PHONE_NUMBER_CONFIRMED = 'phoneNumberConfirmed',
  TWO_FACTOR_ENABLED = 'twoFactorEnabled',
  LOCKOUT_END = 'lockoutEnd',
  LOCKOUT_ENABLED = 'lockoutEnabled',
  ACCESS_FAILED_COUNT = 'accessFailedCount',
  DISCORD_SERVERS = 'discordServers',
  BETSY_PREMIUM_ROLE = 'betsyPremiumRole',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-database-models-user.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DatabaseModels.UserProperties } from './cowbot-server-models-database-models-user.properties';

export function createTestCowbot.Server.Models.DatabaseModels.User() {
    return { 
      [Cowbot.Server.Models.DatabaseModels.UserProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.UserProperties.UPDATED_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.UserProperties.FIRST_NAME]: 'FIRST_NAME',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.LAST_NAME]: 'LAST_NAME',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.DISCORD_ID]: 'DISCORD_ID',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.IS_DELETED]: false,
      [Cowbot.Server.Models.DatabaseModels.UserProperties.DISCORD_ACCESS_TOKEN]: 'DISCORD_ACCESS_TOKEN',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.DISCORD_REFRESH_TOKEN]: 'DISCORD_REFRESH_TOKEN',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.DISCORD_ACCESS_TOKEN_EXPIRATION_DATE]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.UserProperties.ID]: 'ID',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.USER_NAME]: 'USER_NAME',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.NORMALIZED_USER_NAME]: 'NORMALIZED_USER_NAME',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.EMAIL]: 'EMAIL',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.NORMALIZED_EMAIL]: 'NORMALIZED_EMAIL',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.EMAIL_CONFIRMED]: false,
      [Cowbot.Server.Models.DatabaseModels.UserProperties.PASSWORD_HASH]: 'PASSWORD_HASH',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.SECURITY_STAMP]: 'SECURITY_STAMP',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.CONCURRENCY_STAMP]: 'CONCURRENCY_STAMP',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.PHONE_NUMBER]: 'PHONE_NUMBER',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.PHONE_NUMBER_CONFIRMED]: false,
      [Cowbot.Server.Models.DatabaseModels.UserProperties.TWO_FACTOR_ENABLED]: false,
      [Cowbot.Server.Models.DatabaseModels.UserProperties.LOCKOUT_END]: new Date(),
      [Cowbot.Server.Models.DatabaseModels.UserProperties.LOCKOUT_ENABLED]: false,
      [Cowbot.Server.Models.DatabaseModels.UserProperties.ACCESS_FAILED_COUNT]: 0, 
      [Cowbot.Server.Models.DatabaseModels.UserProperties.DISCORD_SERVERS]: 'DISCORD_SERVERS',
      [Cowbot.Server.Models.DatabaseModels.UserProperties.BETSY_PREMIUM_ROLE]: 'BETSY_PREMIUM_ROLE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefForm {
    href: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefForm>({
    href: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHref {
  href?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefProperties {
  HREF = 'href',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHref() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsLinkHrefProperties.HREF]: 'HREF', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserForm {
    displayName: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    uniqueName: FormControl<string | null | undefined>;
    imageUrl: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserForm>({
    displayName: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    uniqueName: new FormControl<string | null | undefined>(null),
    imageUrl: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUser {
  displayName?: string | null;
  url?: string | null;
  id?: string | null;
  uniqueName?: string | null;
  imageUrl?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties {
  DISPLAY_NAME = 'displayName',
  URL = 'url',
  ID = 'id',
  UNIQUE_NAME = 'uniqueName',
  IMAGE_URL = 'imageUrl',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUser() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties.DISPLAY_NAME]: 'DISPLAY_NAME',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties.URL]: 'URL',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties.UNIQUE_NAME]: 'UNIQUE_NAME',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsUserProperties.IMAGE_URL]: 'IMAGE_URL', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IAzureDevopsWebhookMessageForm } from './azure-devops-webhook-message.form';
import { IAzureDevopsWebhookDetailedMessageForm } from './azure-devops-webhook-detailed-message.form';
import { IAzureDevopsWebhookResourceForm } from './azure-devops-webhook-resource.form';

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookForm {
    subscriptionId: FormControl<string | null | undefined>;
    notificationId: FormControl<number | null | undefined>;
    id: FormControl<string | null | undefined>;
    eventType: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    message: FormGroup<IAzureDevopsWebhookMessageForm>;
    detailedMessage: FormGroup<IAzureDevopsWebhookDetailedMessageForm>;
    resource: FormGroup<IAzureDevopsWebhookResourceForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form';
import { IAzureDevopsWebhookMessageForm } from './azure-devops-webhook-message.form';
import { AzureDevopsWebhookMessageFormGroupFac } from './azure-devops-webhook-message.form-group-fac';
import { IAzureDevopsWebhookDetailedMessageForm } from './azure-devops-webhook-detailed-message.form';
import { AzureDevopsWebhookDetailedMessageFormGroupFac } from './azure-devops-webhook-detailed-message.form-group-fac';
import { IAzureDevopsWebhookResourceForm } from './azure-devops-webhook-resource.form';
import { AzureDevopsWebhookResourceFormGroupFac } from './azure-devops-webhook-resource.form-group-fac';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookForm>({
    subscriptionId: new FormControl<string | null | undefined>(null),
    notificationId: new FormControl<number | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    eventType: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    message: new FormGroup<IAzureDevopsWebhookMessageForm>(AzureDevopsWebhookMessageFormGroupFac().controls),
    detailedMessage: new FormGroup<IAzureDevopsWebhookDetailedMessageForm>(AzureDevopsWebhookDetailedMessageFormGroupFac().controls),
    resource: new FormGroup<IAzureDevopsWebhookResourceForm>(AzureDevopsWebhookResourceFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IAzureDevopsWebhookMessage } from './azure-devops-webhook-message.model';
import { IAzureDevopsWebhookDetailedMessage } from './azure-devops-webhook-detailed-message.model';
import { IAzureDevopsWebhookResource } from './azure-devops-webhook-resource.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhook {
  subscriptionId?: string | null;
  notificationId?: number | null;
  id?: string | null;
  eventType?: string | null;
  createdDate?: Date | null;
  message?: Partial<IAzureDevopsWebhookMessage>;
  detailedMessage?: Partial<IAzureDevopsWebhookDetailedMessage>;
  resource?: Partial<IAzureDevopsWebhookResource>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties {
  SUBSCRIPTION_ID = 'subscriptionId',
  NOTIFICATION_ID = 'notificationId',
  ID = 'id',
  EVENT_TYPE = 'eventType',
  CREATED_DATE = 'createdDate',
  MESSAGE = 'message',
  DETAILED_MESSAGE = 'detailedMessage',
  RESOURCE = 'resource',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhook() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.SUBSCRIPTION_ID]: 'SUBSCRIPTION_ID',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.NOTIFICATION_ID]: 0,
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.EVENT_TYPE]: 'EVENT_TYPE',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.CREATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.MESSAGE]: 'MESSAGE',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.DETAILED_MESSAGE]: 'DETAILED_MESSAGE',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookProperties.RESOURCE]: 'RESOURCE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageForm {
    text: FormControl<string | null | undefined>;
    html: FormControl<string | null | undefined>;
    markdown: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageForm>({
    text: new FormControl<string | null | undefined>(null),
    html: new FormControl<string | null | undefined>(null),
    markdown: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessage {
  text?: string | null;
  html?: string | null;
  markdown?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageProperties {
  TEXT = 'text',
  HTML = 'html',
  MARKDOWN = 'markdown',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessage() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageProperties.TEXT]: 'TEXT',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageProperties.HTML]: 'HTML',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookDetailedMessageProperties.MARKDOWN]: 'MARKDOWN', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IAzureDevopsLinkHrefForm } from './azure-devops-link-href.form';

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksForm {
    web: FormGroup<IAzureDevopsLinkHrefForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form';
import { IAzureDevopsLinkHrefForm } from './azure-devops-link-href.form';
import { AzureDevopsLinkHrefFormGroupFac } from './azure-devops-link-href.form-group-fac';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksForm>({
    web: new FormGroup<IAzureDevopsLinkHrefForm>(AzureDevopsLinkHrefFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IAzureDevopsLinkHref } from './azure-devops-link-href.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinks {
  web?: Partial<IAzureDevopsLinkHref>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksProperties {
  WEB = 'web',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinks() {
    return {  
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookLinksProperties.WEB]: 'WEB',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageForm {
    text: FormControl<string | null | undefined>;
    html: FormControl<string | null | undefined>;
    markdown: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageForm>({
    text: new FormControl<string | null | undefined>(null),
    html: new FormControl<string | null | undefined>(null),
    markdown: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessage {
  text?: string | null;
  html?: string | null;
  markdown?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageProperties {
  TEXT = 'text',
  HTML = 'html',
  MARKDOWN = 'markdown',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessage() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageProperties.TEXT]: 'TEXT',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageProperties.HTML]: 'HTML',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookMessageProperties.MARKDOWN]: 'MARKDOWN', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IAzureDevopsUserForm } from './azure-devops-user.form';
import { IAzureDevopsWebhookLinksForm } from './azure-devops-webhook-links.form';
import { IAzureDevopsWebhookResourceDefinitionForm } from './azure-devops-webhook-resource-definition.form';

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceForm {
    pullRequestId: FormControl<number | null | undefined>;
    status: FormControl<string | null | undefined>;
    title: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
    createdBy: FormGroup<IAzureDevopsUserForm>;
    _links: FormGroup<IAzureDevopsWebhookLinksForm>;
    definition: FormGroup<IAzureDevopsWebhookResourceDefinitionForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form';
import { IAzureDevopsUserForm } from './azure-devops-user.form';
import { AzureDevopsUserFormGroupFac } from './azure-devops-user.form-group-fac';
import { IAzureDevopsWebhookLinksForm } from './azure-devops-webhook-links.form';
import { AzureDevopsWebhookLinksFormGroupFac } from './azure-devops-webhook-links.form-group-fac';
import { IAzureDevopsWebhookResourceDefinitionForm } from './azure-devops-webhook-resource-definition.form';
import { AzureDevopsWebhookResourceDefinitionFormGroupFac } from './azure-devops-webhook-resource-definition.form-group-fac';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceForm>({
    pullRequestId: new FormControl<number | null | undefined>(null),
    status: new FormControl<string | null | undefined>(null),
    title: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
    createdBy: new FormGroup<IAzureDevopsUserForm>(AzureDevopsUserFormGroupFac().controls),
    _links: new FormGroup<IAzureDevopsWebhookLinksForm>(AzureDevopsWebhookLinksFormGroupFac().controls),
    definition: new FormGroup<IAzureDevopsWebhookResourceDefinitionForm>(AzureDevopsWebhookResourceDefinitionFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IAzureDevopsUser } from './azure-devops-user.model';
import { IAzureDevopsWebhookLinks } from './azure-devops-webhook-links.model';
import { IAzureDevopsWebhookResourceDefinition } from './azure-devops-webhook-resource-definition.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResource {
  pullRequestId?: number | null;
  status?: string | null;
  title?: string | null;
  url?: string | null;
  createdBy?: Partial<IAzureDevopsUser>;
  _links?: Partial<IAzureDevopsWebhookLinks>;
  definition?: Partial<IAzureDevopsWebhookResourceDefinition>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties {
  PULL_REQUEST_ID = 'pullRequestId',
  STATUS = 'status',
  TITLE = 'title',
  URL = 'url',
  CREATED_BY = 'createdBy',
  LINKS = '_links',
  DEFINITION = 'definition',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResource() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.PULL_REQUEST_ID]: 0,
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.STATUS]: 'STATUS',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.URL]: 'URL', 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.CREATED_BY]: 'CREATED_BY',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.LINKS]: 'LINKS',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceProperties.DEFINITION]: 'DEFINITION',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionForm {
    name: FormControl<string | null | undefined>;
    url: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionForm } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form';

export function Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionForm>({
    name: new FormControl<string | null | undefined>(null),
    url: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinition {
  name?: string | null;
  url?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionProperties {
  NAME = 'name',
  URL = 'url',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionProperties } from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.properties';

export function createTestCowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinition() {
    return { 
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.AzureDevopsApi.Request.AzureDevopsWebhookResourceDefinitionProperties.URL]: 'URL', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordApplicationCommandOptionForm } from './discord-application-command-option.form';
import { IDiscordApplicationCommandTypeForm } from './discord-application-command-type.form';

export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandForm {
    id: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    defaultPermission: FormControl<boolean | null | undefined>;
    options: FormArray<FormGroup<IDiscordApplicationCommandOptionForm>>;
    type: FormGroup<IDiscordApplicationCommandTypeForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandForm } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form';
import { IDiscordApplicationCommandOptionForm } from './discord-application-command-option.form';
import { IDiscordApplicationCommandTypeForm } from './discord-application-command-type.form';
import { DiscordApplicationCommandTypeFormGroupFac } from './discord-application-command-type.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    defaultPermission: new FormControl<boolean | null | undefined>(null),
    options: new FormArray<FormGroup<IDiscordApplicationCommandOptionForm>>([]),
    type: new FormGroup<IDiscordApplicationCommandTypeForm>(DiscordApplicationCommandTypeFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordApplicationCommandOption } from './discord-application-command-option.model';
import { IDiscordApplicationCommandType } from './discord-application-command-type.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommand {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  defaultPermission?: boolean | null;
  options?: Partial<IDiscordApplicationCommandOption[]>;
  type?: Partial<IDiscordApplicationCommandType>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties {
  ID = 'id',
  NAME = 'name',
  DESCRIPTION = 'description',
  DEFAULT_PERMISSION = 'defaultPermission',
  OPTIONS = 'options',
  TYPE = 'type',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommand() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.DEFAULT_PERMISSION]: false, 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.OPTIONS]: 'OPTIONS',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandProperties.TYPE]: 'TYPE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordApplicationCommandOptionTypeForm } from './discord-application-command-option-type.form';
import { IDiscordApplicationCommandOptionChoiceForm } from './discord-application-command-option-choice.form';
import { IDiscordChannelTypeForm } from './discord-channel-type.form';

export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionForm {
    apiPath: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    required: FormControl<boolean | null | undefined>;
    autocomplete: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordApplicationCommandOptionTypeForm>;
    choices: FormArray<FormGroup<IDiscordApplicationCommandOptionChoiceForm>>;
    channelTypes: FormArray<FormGroup<IDiscordChannelTypeForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionForm } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form';
import { IDiscordApplicationCommandOptionTypeForm } from './discord-application-command-option-type.form';
import { DiscordApplicationCommandOptionTypeFormGroupFac } from './discord-application-command-option-type.form-group-fac';
import { IDiscordApplicationCommandOptionChoiceForm } from './discord-application-command-option-choice.form';
import { IDiscordChannelTypeForm } from './discord-channel-type.form';

export function Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionForm>({
    apiPath: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    required: new FormControl<boolean | null | undefined>(null),
    autocomplete: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordApplicationCommandOptionTypeForm>(DiscordApplicationCommandOptionTypeFormGroupFac().controls),
    choices: new FormArray<FormGroup<IDiscordApplicationCommandOptionChoiceForm>>([]),
    channelTypes: new FormArray<FormGroup<IDiscordChannelTypeForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordApplicationCommandOptionType } from './discord-application-command-option-type.model';
import { IDiscordApplicationCommandOptionChoice } from './discord-application-command-option-choice.model';
import { IDiscordChannelType } from './discord-channel-type.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOption {
  apiPath?: string | null;
  name?: string | null;
  description?: string | null;
  required?: boolean | null;
  autocomplete?: boolean | null;
  type?: Partial<IDiscordApplicationCommandOptionType>;
  choices?: Partial<IDiscordApplicationCommandOptionChoice[]>;
  channelTypes?: Partial<IDiscordChannelType[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties {
  API_PATH = 'apiPath',
  NAME = 'name',
  DESCRIPTION = 'description',
  REQUIRED = 'required',
  AUTOCOMPLETE = 'autocomplete',
  TYPE = 'type',
  CHOICES = 'choices',
  CHANNEL_TYPES = 'channelTypes',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOption() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.API_PATH]: 'API_PATH',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.REQUIRED]: false,
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.AUTOCOMPLETE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.CHOICES]: 'CHOICES',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionProperties.CHANNEL_TYPES]: 'CHANNEL_TYPES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceForm {
    name: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceForm } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form';

export function Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceForm>({
    name: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoice {
  name?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceProperties {
  NAME = 'name',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceProperties } from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoice() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.ApplicationCommands.DiscordApplicationCommandOptionChoiceProperties.NAME]: 'NAME', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseForm {
    accessToken: FormControl<string | null | undefined>;
    tokenType: FormControl<string | null | undefined>;
    expiresIn: FormControl<string | null | undefined>;
    refreshToken: FormControl<string | null | undefined>;
    scope: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseForm } from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form';

export function Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseForm>({
    accessToken: new FormControl<string | null | undefined>(null),
    tokenType: new FormControl<string | null | undefined>(null),
    expiresIn: new FormControl<string | null | undefined>(null),
    refreshToken: new FormControl<string | null | undefined>(null),
    scope: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponse {
  accessToken?: string | null;
  tokenType?: string | null;
  expiresIn?: string | null;
  refreshToken?: string | null;
  scope?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties {
  ACCESS_TOKEN = 'accessToken',
  TOKEN_TYPE = 'tokenType',
  EXPIRES_IN = 'expiresIn',
  REFRESH_TOKEN = 'refreshToken',
  SCOPE = 'scope',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties } from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties.ACCESS_TOKEN]: 'ACCESS_TOKEN',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties.TOKEN_TYPE]: 'TOKEN_TYPE',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties.EXPIRES_IN]: 'EXPIRES_IN',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties.REFRESH_TOKEN]: 'REFRESH_TOKEN',
      [Cowbot.Server.Models.DTOs.DiscordApi.Models.OAuth.AccessTokenResponseProperties.SCOPE]: 'SCOPE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { IBaseDiscordMessageForm } from './base-discord-message.form';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';

export interface ICowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionForm {
    private: FormControl<boolean | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordCommandActionTypeForm>;
    discordMessage: FormGroup<IBaseDiscordMessageForm>;
    restRequestMetadata: FormGroup<IDiscordCommandActionRequestMetadataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionForm } from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form';
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { DiscordCommandActionTypeFormGroupFac } from './discord-command-action-type.form-group-fac';
import { IBaseDiscordMessageForm } from './base-discord-message.form';
import { BaseDiscordMessageFormGroupFac } from './base-discord-message.form-group-fac';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';
import { DiscordCommandActionRequestMetadataFormGroupFac } from './discord-command-action-request-metadata.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionForm>({
    private: new FormControl<boolean | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordCommandActionTypeForm>(DiscordCommandActionTypeFormGroupFac().controls),
    discordMessage: new FormGroup<IBaseDiscordMessageForm>(BaseDiscordMessageFormGroupFac().controls),
    restRequestMetadata: new FormGroup<IDiscordCommandActionRequestMetadataForm>(DiscordCommandActionRequestMetadataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandActionType } from './discord-command-action-type.model';
import { IBaseDiscordMessage } from './base-discord-message.model';
import { IDiscordCommandActionRequestMetadata } from './discord-command-action-request-metadata.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandAction {
  private?: boolean | null;
  discordFormId?: string | null;
  type?: Partial<IDiscordCommandActionType>;
  discordMessage?: Partial<IBaseDiscordMessage>;
  restRequestMetadata?: Partial<IDiscordCommandActionRequestMetadata>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties {
  PRIVATE = 'private',
  DISCORD_FORM_ID = 'discordFormId',
  TYPE = 'type',
  DISCORD_MESSAGE = 'discordMessage',
  REST_REQUEST_METADATA = 'restRequestMetadata',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties } from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandAction() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID', 
      [Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordCommandAction.BaseDiscordCommandActionProperties.REST_REQUEST_METADATA]: 'REST_REQUEST_METADATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-base-discord-command.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandForm {
    id: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    discordApplicationCommandId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordCommandTypeForm>;
    responseMessage: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-base-discord-command.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandForm } from './cowbot-server-models-dt-os-discord-command-base-discord-command.form';
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { DiscordCommandTypeFormGroupFac } from './discord-command-type.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    discordApplicationCommandId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordCommandTypeForm>(DiscordCommandTypeFormGroupFac().controls),
    responseMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-base-discord-command.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandType } from './discord-command-type.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommand {
  id?: string | null;
  name?: string | null;
  description?: string | null;
  discordApplicationCommandId?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  type?: Partial<IDiscordCommandType>;
  responseMessage?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-base-discord-command.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties {
  ID = 'id',
  NAME = 'name',
  DESCRIPTION = 'description',
  DISCORD_APPLICATION_COMMAND_ID = 'discordApplicationCommandId',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  TYPE = 'type',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-base-discord-command.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties } from './cowbot-server-models-dt-os-discord-command-base-discord-command.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommand() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.DISCORD_APPLICATION_COMMAND_ID]: 'DISCORD_APPLICATION_COMMAND_ID',
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID', 
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordCommand.BaseDiscordCommandProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { IBaseDiscordCommandActionForm } from './base-discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestForm {
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    discordGuildId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordCommandTypeForm>;
    discordCommandActions: FormArray<FormGroup<IBaseDiscordCommandActionForm>>;
    commandInformation: FormGroup<IDiscordApplicationCommandForm>;
    responseMessage: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestForm } from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form';
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { DiscordCommandTypeFormGroupFac } from './discord-command-type.form-group-fac';
import { IBaseDiscordCommandActionForm } from './base-discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { DiscordApplicationCommandFormGroupFac } from './discord-application-command.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestForm>({
    name: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    discordGuildId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordCommandTypeForm>(DiscordCommandTypeFormGroupFac().controls),
    discordCommandActions: new FormArray<FormGroup<IBaseDiscordCommandActionForm>>([]),
    commandInformation: new FormGroup<IDiscordApplicationCommandForm>(DiscordApplicationCommandFormGroupFac().controls),
    responseMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandType } from './discord-command-type.model';
import { IBaseDiscordCommandAction } from './base-discord-command-action.model';
import { IDiscordApplicationCommand } from './discord-application-command.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequest {
  name?: string | null;
  description?: string | null;
  private?: boolean | null;
  discordGuildId?: string | null;
  active?: boolean | null;
  type?: Partial<IDiscordCommandType>;
  discordCommandActions?: Partial<IBaseDiscordCommandAction[]>;
  commandInformation?: Partial<IDiscordApplicationCommand>;
  responseMessage?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties {
  NAME = 'name',
  DESCRIPTION = 'description',
  PRIVATE = 'private',
  DISCORD_GUILD_ID = 'discordGuildId',
  ACTIVE = 'active',
  TYPE = 'type',
  DISCORD_COMMAND_ACTIONS = 'discordCommandActions',
  COMMAND_INFORMATION = 'commandInformation',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties } from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.DISCORD_GUILD_ID]: 'DISCORD_GUILD_ID',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.ACTIVE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.DISCORD_COMMAND_ACTIONS]: 'DISCORD_COMMAND_ACTIONS',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.COMMAND_INFORMATION]: 'COMMAND_INFORMATION',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.CreateDiscordCommandRequestProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestForm {
    active: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestForm } from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form';

export function Cowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestForm>({
    active: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequest {
  active?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestProperties {
  ACTIVE = 'active',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestProperties } from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.ToggleDiscordCommandActiveRequestProperties.ACTIVE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { IDiscordCommandActionForm } from './discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestForm {
    id: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    description: FormControl<string | null | undefined>;
    discordGuildId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordCommandTypeForm>;
    discordCommandActions: FormArray<FormGroup<IDiscordCommandActionForm>>;
    commandInformation: FormGroup<IDiscordApplicationCommandForm>;
    responseMessage: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestForm } from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form';
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { DiscordCommandTypeFormGroupFac } from './discord-command-type.form-group-fac';
import { IDiscordCommandActionForm } from './discord-command-action.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { DiscordApplicationCommandFormGroupFac } from './discord-application-command.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    discordGuildId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordCommandTypeForm>(DiscordCommandTypeFormGroupFac().controls),
    discordCommandActions: new FormArray<FormGroup<IDiscordCommandActionForm>>([]),
    commandInformation: new FormGroup<IDiscordApplicationCommandForm>(DiscordApplicationCommandFormGroupFac().controls),
    responseMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandType } from './discord-command-type.model';
import { IDiscordCommandAction } from './discord-command-action.model';
import { IDiscordApplicationCommand } from './discord-application-command.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequest {
  id?: string | null;
  name?: string | null;
  private?: boolean | null;
  description?: string | null;
  discordGuildId?: string | null;
  active?: boolean | null;
  type?: Partial<IDiscordCommandType>;
  discordCommandActions?: Partial<IDiscordCommandAction[]>;
  commandInformation?: Partial<IDiscordApplicationCommand>;
  responseMessage?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties {
  ID = 'id',
  NAME = 'name',
  PRIVATE = 'private',
  DESCRIPTION = 'description',
  DISCORD_GUILD_ID = 'discordGuildId',
  ACTIVE = 'active',
  TYPE = 'type',
  DISCORD_COMMAND_ACTIONS = 'discordCommandActions',
  COMMAND_INFORMATION = 'commandInformation',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties } from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.DISCORD_GUILD_ID]: 'DISCORD_GUILD_ID',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.ACTIVE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.DISCORD_COMMAND_ACTIONS]: 'DISCORD_COMMAND_ACTIONS',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.COMMAND_INFORMATION]: 'COMMAND_INFORMATION',
      [Cowbot.Server.Models.DTOs.DiscordCommand.Request.UpdateDiscordCommandRequestProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-base-discord-form.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormForm {
    id: FormControl<string | null | undefined>;
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-base-discord-form.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormForm } from './cowbot-server-models-dt-os-discord-form-base-discord-form.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormForm>({
    id: new FormControl<string | null | undefined>(null),
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-base-discord-form.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordForm.BaseDiscordForm {
  id?: string | null;
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  formData?: Partial<IDiscordFormData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-base-discord-form.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties {
  ID = 'id',
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  FORM_DATA = 'formData',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-base-discord-form.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties } from './cowbot-server-models-dt-os-discord-form-base-discord-form.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordForm.BaseDiscordForm() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.PRIVATE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordForm.BaseDiscordFormProperties.FORM_DATA]: 'FORM_DATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestForm {
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestForm } from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestForm>({
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequest {
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  formData?: Partial<IDiscordFormData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties {
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  FORM_DATA = 'formData',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties } from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.CreateDiscordFormRequestProperties.FORM_DATA]: 'FORM_DATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestForm {
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestForm } from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestForm>({
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequest {
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  formData?: Partial<IDiscordFormData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties {
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  FORM_DATA = 'formData',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties } from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordForm.Request.UpdateDiscordFormRequestProperties.FORM_DATA]: 'FORM_DATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';
import { IDiscordFormSubmissionForm } from './discord-form-submission.form';

export interface ICowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseForm {
    id: FormControl<string | null | undefined>;
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
    submissions: FormArray<FormGroup<IDiscordFormSubmissionForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseForm } from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';
import { IDiscordFormSubmissionForm } from './discord-form-submission.form';

export function Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseForm>({
    id: new FormControl<string | null | undefined>(null),
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
    submissions: new FormArray<FormGroup<IDiscordFormSubmissionForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';
import { IDiscordFormSubmission } from './discord-form-submission.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponse {
  id?: string | null;
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  formData?: Partial<IDiscordFormData>;
  submissions?: Partial<IDiscordFormSubmission[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties {
  ID = 'id',
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  FORM_DATA = 'formData',
  SUBMISSIONS = 'submissions',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties } from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.PRIVATE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.FORM_DATA]: 'FORM_DATA',
      [Cowbot.Server.Models.DTOs.DiscordForm.Response.DiscordFormWithSubmissionResponseProperties.SUBMISSIONS]: 'SUBMISSIONS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IEmailQualityResponseForm } from './email-quality-response.form';
import { IIpInformationForm } from './ip-information.form';

export interface ICowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseForm {
    discordUserId: FormControl<string | null | undefined>;
    lastKnownName: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    emailInformation: FormGroup<IEmailQualityResponseForm>;
    ips: FormArray<FormGroup<IIpInformationForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseForm } from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form';
import { IEmailQualityResponseForm } from './email-quality-response.form';
import { EmailQualityResponseFormGroupFac } from './email-quality-response.form-group-fac';
import { IIpInformationForm } from './ip-information.form';

export function Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseForm>({
    discordUserId: new FormControl<string | null | undefined>(null),
    lastKnownName: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    emailInformation: new FormGroup<IEmailQualityResponseForm>(EmailQualityResponseFormGroupFac().controls),
    ips: new FormArray<FormGroup<IIpInformationForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IEmailQualityResponse } from './email-quality-response.model';
import { IIpInformation } from './ip-information.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponse {
  discordUserId?: string | null;
  lastKnownName?: string | null;
  createdDate?: Date | null;
  emailInformation?: Partial<IEmailQualityResponse>;
  ips?: Partial<IIpInformation[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties {
  DISCORD_USER_ID = 'discordUserId',
  LAST_KNOWN_NAME = 'lastKnownName',
  CREATED_DATE = 'createdDate',
  EMAIL_INFORMATION = 'emailInformation',
  IPS = 'ips',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties } from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties.DISCORD_USER_ID]: 'DISCORD_USER_ID',
      [Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties.LAST_KNOWN_NAME]: 'LAST_KNOWN_NAME',
      [Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties.CREATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties.EMAIL_INFORMATION]: 'EMAIL_INFORMATION',
      [Cowbot.Server.Models.DTOs.DiscordGuildUser.Response.DiscordGuildUserResponseProperties.IPS]: 'IPS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-base-discord-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageForm {
    id: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordMessageTypeForm>;
    message: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-base-discord-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageForm } from './cowbot-server-models-dt-os-discord-message-base-discord-message.form';
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { DiscordMessageTypeFormGroupFac } from './discord-message-type.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    discordCategoryId: new FormControl<string | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordMessageTypeForm>(DiscordMessageTypeFormGroupFac().controls),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-base-discord-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageType } from './discord-message-type.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessage {
  id?: string | null;
  name?: string | null;
  discordMessageId?: string | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  discordServerId?: string | null;
  active?: boolean | null;
  type?: Partial<IDiscordMessageType>;
  message?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-base-discord-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties {
  ID = 'id',
  NAME = 'name',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  DISCORD_SERVER_ID = 'discordServerId',
  ACTIVE = 'active',
  TYPE = 'type',
  MESSAGE = 'message',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-base-discord-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties } from './cowbot-server-models-dt-os-discord-message-base-discord-message.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessage() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.ACTIVE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordMessage.BaseDiscordMessageProperties.MESSAGE]: 'MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestForm {
    name: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordMessageTypeForm>;
    message: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestForm } from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form';
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { DiscordMessageTypeFormGroupFac } from './discord-message-type.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestForm>({
    name: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    discordCategoryId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordMessageTypeForm>(DiscordMessageTypeFormGroupFac().controls),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageType } from './discord-message-type.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequest {
  name?: string | null;
  discordMessageId?: string | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  active?: boolean | null;
  discordServerId?: string | null;
  type?: Partial<IDiscordMessageType>;
  message?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties {
  NAME = 'name',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  ACTIVE = 'active',
  DISCORD_SERVER_ID = 'discordServerId',
  TYPE = 'type',
  MESSAGE = 'message',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties } from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.ACTIVE]: false,
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID', 
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.CreateDiscordMessageRequestProperties.MESSAGE]: 'MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestForm {
    sendTime: FormControl<Date | null | undefined>;
    message: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestForm } from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestForm>({
    sendTime: new FormControl<Date | null | undefined>(null),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequest {
  sendTime?: Date | null;
  message?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestProperties {
  SEND_TIME = 'sendTime',
  MESSAGE = 'message',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestProperties } from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestProperties.SEND_TIME]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.SendDiscordMessageRequestProperties.MESSAGE]: 'MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestForm {
    active: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestForm } from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form';

export function Cowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestForm>({
    active: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequest {
  active?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestProperties {
  ACTIVE = 'active',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestProperties } from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordMessage.Request.ToggleDiscordMessageActiveRequestProperties.ACTIVE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-exchange-code-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestForm {
    code: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-exchange-code-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestForm } from './cowbot-server-models-dt-os-discord-request-exchange-code-request.form';

export function Cowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestForm>({
    code: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-exchange-code-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequest {
  code?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-exchange-code-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestProperties {
  CODE = 'code',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-exchange-code-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestProperties } from './cowbot-server-models-dt-os-discord-request-exchange-code-request.properties';

export function createTestCowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.Discord.Request.ExchangeCodeRequestProperties.CODE]: 'CODE', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-refresh-token-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestForm {
    refreshToken: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-refresh-token-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestForm } from './cowbot-server-models-dt-os-discord-request-refresh-token-request.form';

export function Cowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestForm>({
    refreshToken: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-refresh-token-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequest {
  refreshToken?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-refresh-token-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestProperties {
  REFRESH_TOKEN = 'refreshToken',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-request-refresh-token-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestProperties } from './cowbot-server-models-dt-os-discord-request-refresh-token-request.properties';

export function createTestCowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.Discord.Request.RefreshTokenRequestProperties.REFRESH_TOKEN]: 'REFRESH_TOKEN', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-response-discord-ping-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseForm {
    type: FormControl<number | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-response-discord-ping-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseForm } from './cowbot-server-models-dt-os-discord-response-discord-ping-response.form';

export function Cowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseForm>({
    type: new FormControl<number | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-response-discord-ping-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponse {
  type?: number | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-response-discord-ping-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseProperties {
  TYPE = 'type',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-response-discord-ping-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseProperties } from './cowbot-server-models-dt-os-discord-response-discord-ping-response.properties';

export function createTestCowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.Discord.Response.DiscordPingResponseProperties.TYPE]: 0, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-base-discord-server.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordRoleForm } from './discord-role.form';
import { IBaseDiscordCommandForm } from './base-discord-command.form';
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { IAuditLogFeatureForm } from './audit-log-feature.form';
import { IDiscordServerGlobalSettingsForm } from './discord-server-global-settings.form';
import { IDiscordServerReviewSettingsForm } from './discord-server-review-settings.form';
import { IDiscordServerInviteSettingsForm } from './discord-server-invite-settings.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerForm {
    invited: FormControl<boolean | null | undefined>;
    guildId: FormControl<string | null | undefined>;
    auditLogChannelId: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    ownerId: FormControl<string | null | undefined>;
    authorizedUsers: FormArray<FormControl<string>>;
    coinbaseCommerceApiKey: FormControl<string | null | undefined>;
    ipQualityScoreApiKey: FormControl<string | null | undefined>;
    verifiedRoleId: FormControl<string | null | undefined>;
    customBotJwtKey: FormControl<string | null | undefined>;
    customBotApplicationId: FormControl<string | null | undefined>;
    customBotActive: FormControl<boolean | null | undefined>;
    customBotStatus: FormControl<string | null | undefined>;
    authorizedRoles: FormArray<FormGroup<IDiscordRoleForm>>;
    commands: FormArray<FormGroup<IBaseDiscordCommandForm>>;
    activeFeatures: FormGroup<IBetsyBotFeatureForm>;
    activeAuditLogFeatures: FormGroup<IAuditLogFeatureForm>;
    globalSettings: FormGroup<IDiscordServerGlobalSettingsForm>;
    reviewSettings: FormGroup<IDiscordServerReviewSettingsForm>;
    inviteSettings: FormGroup<IDiscordServerInviteSettingsForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-base-discord-server.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerForm } from './cowbot-server-models-dt-os-discord-server-base-discord-server.form';
import { IDiscordRoleForm } from './discord-role.form';
import { IBaseDiscordCommandForm } from './base-discord-command.form';
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { BetsyBotFeatureFormGroupFac } from './betsy-bot-feature.form-group-fac';
import { IAuditLogFeatureForm } from './audit-log-feature.form';
import { AuditLogFeatureFormGroupFac } from './audit-log-feature.form-group-fac';
import { IDiscordServerGlobalSettingsForm } from './discord-server-global-settings.form';
import { DiscordServerGlobalSettingsFormGroupFac } from './discord-server-global-settings.form-group-fac';
import { IDiscordServerReviewSettingsForm } from './discord-server-review-settings.form';
import { DiscordServerReviewSettingsFormGroupFac } from './discord-server-review-settings.form-group-fac';
import { IDiscordServerInviteSettingsForm } from './discord-server-invite-settings.form';
import { DiscordServerInviteSettingsFormGroupFac } from './discord-server-invite-settings.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerForm>({
    invited: new FormControl<boolean | null | undefined>(null),
    guildId: new FormControl<string | null | undefined>(null),
    auditLogChannelId: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    ownerId: new FormControl<string | null | undefined>(null),
    authorizedUsers: new FormArray<FormControl<string>>([]),
    coinbaseCommerceApiKey: new FormControl<string | null | undefined>(null),
    ipQualityScoreApiKey: new FormControl<string | null | undefined>(null),
    verifiedRoleId: new FormControl<string | null | undefined>(null),
    customBotJwtKey: new FormControl<string | null | undefined>(null),
    customBotApplicationId: new FormControl<string | null | undefined>(null),
    customBotActive: new FormControl<boolean | null | undefined>(null),
    customBotStatus: new FormControl<string | null | undefined>(null),
    authorizedRoles: new FormArray<FormGroup<IDiscordRoleForm>>([]),
    commands: new FormArray<FormGroup<IBaseDiscordCommandForm>>([]),
    activeFeatures: new FormGroup<IBetsyBotFeatureForm>(BetsyBotFeatureFormGroupFac().controls),
    activeAuditLogFeatures: new FormGroup<IAuditLogFeatureForm>(AuditLogFeatureFormGroupFac().controls),
    globalSettings: new FormGroup<IDiscordServerGlobalSettingsForm>(DiscordServerGlobalSettingsFormGroupFac().controls),
    reviewSettings: new FormGroup<IDiscordServerReviewSettingsForm>(DiscordServerReviewSettingsFormGroupFac().controls),
    inviteSettings: new FormGroup<IDiscordServerInviteSettingsForm>(DiscordServerInviteSettingsFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-base-discord-server.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordRole } from './discord-role.model';
import { IBaseDiscordCommand } from './base-discord-command.model';
import { IBetsyBotFeature } from './betsy-bot-feature.model';
import { IAuditLogFeature } from './audit-log-feature.model';
import { IDiscordServerGlobalSettings } from './discord-server-global-settings.model';
import { IDiscordServerReviewSettings } from './discord-server-review-settings.model';
import { IDiscordServerInviteSettings } from './discord-server-invite-settings.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServer {
  invited?: boolean | null;
  guildId?: string | null;
  auditLogChannelId?: string | null;
  name?: string | null;
  ownerId?: string | null;
  authorizedUsers?: string[] | null;
  coinbaseCommerceApiKey?: string | null;
  ipQualityScoreApiKey?: string | null;
  verifiedRoleId?: string | null;
  customBotJwtKey?: string | null;
  customBotApplicationId?: string | null;
  customBotActive?: boolean | null;
  customBotStatus?: string | null;
  authorizedRoles?: Partial<IDiscordRole[]>;
  commands?: Partial<IBaseDiscordCommand[]>;
  activeFeatures?: Partial<IBetsyBotFeature>;
  activeAuditLogFeatures?: Partial<IAuditLogFeature>;
  globalSettings?: Partial<IDiscordServerGlobalSettings>;
  reviewSettings?: Partial<IDiscordServerReviewSettings>;
  inviteSettings?: Partial<IDiscordServerInviteSettings>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-base-discord-server.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties {
  INVITED = 'invited',
  GUILD_ID = 'guildId',
  AUDIT_LOG_CHANNEL_ID = 'auditLogChannelId',
  NAME = 'name',
  OWNER_ID = 'ownerId',
  AUTHORIZED_USERS = 'authorizedUsers',
  COINBASE_COMMERCE_API_KEY = 'coinbaseCommerceApiKey',
  IP_QUALITY_SCORE_API_KEY = 'ipQualityScoreApiKey',
  VERIFIED_ROLE_ID = 'verifiedRoleId',
  CUSTOM_BOT_JWT_KEY = 'customBotJwtKey',
  CUSTOM_BOT_APPLICATION_ID = 'customBotApplicationId',
  CUSTOM_BOT_ACTIVE = 'customBotActive',
  CUSTOM_BOT_STATUS = 'customBotStatus',
  AUTHORIZED_ROLES = 'authorizedRoles',
  COMMANDS = 'commands',
  ACTIVE_FEATURES = 'activeFeatures',
  ACTIVE_AUDIT_LOG_FEATURES = 'activeAuditLogFeatures',
  GLOBAL_SETTINGS = 'globalSettings',
  REVIEW_SETTINGS = 'reviewSettings',
  INVITE_SETTINGS = 'inviteSettings',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-base-discord-server.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties } from './cowbot-server-models-dt-os-discord-server-base-discord-server.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServer() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.INVITED]: false,
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.GUILD_ID]: 'GUILD_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.AUDIT_LOG_CHANNEL_ID]: 'AUDIT_LOG_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.OWNER_ID]: 'OWNER_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.AUTHORIZED_USERS]: 'AUTHORIZED_USERS',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.COINBASE_COMMERCE_API_KEY]: 'COINBASE_COMMERCE_API_KEY',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.IP_QUALITY_SCORE_API_KEY]: 'IP_QUALITY_SCORE_API_KEY',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.VERIFIED_ROLE_ID]: 'VERIFIED_ROLE_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.CUSTOM_BOT_JWT_KEY]: 'CUSTOM_BOT_JWT_KEY',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.CUSTOM_BOT_APPLICATION_ID]: 'CUSTOM_BOT_APPLICATION_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.CUSTOM_BOT_ACTIVE]: false,
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.CUSTOM_BOT_STATUS]: 'CUSTOM_BOT_STATUS', 
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.AUTHORIZED_ROLES]: 'AUTHORIZED_ROLES',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.COMMANDS]: 'COMMANDS',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.ACTIVE_FEATURES]: 'ACTIVE_FEATURES',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.ACTIVE_AUDIT_LOG_FEATURES]: 'ACTIVE_AUDIT_LOG_FEATURES',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.GLOBAL_SETTINGS]: 'GLOBAL_SETTINGS',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.REVIEW_SETTINGS]: 'REVIEW_SETTINGS',
      [Cowbot.Server.Models.DTOs.DiscordServer.BaseDiscordServerProperties.INVITE_SETTINGS]: 'INVITE_SETTINGS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestForm {
    guildId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestForm } from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form';

export function Cowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestForm>({
    guildId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequest {
  guildId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestProperties {
  GUILD_ID = 'guildId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestProperties } from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.CreateDiscordServerRequestProperties.GUILD_ID]: 'GUILD_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestForm {
    twitchLogin: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    type: FormControl<string | null | undefined>;
    message: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestForm } from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestForm>({
    twitchLogin: new FormControl<string | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    type: new FormControl<string | null | undefined>(null),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequest {
  twitchLogin?: string | null;
  discordChannelId?: string | null;
  type?: string | null;
  message?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties {
  TWITCH_LOGIN = 'twitchLogin',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  TYPE = 'type',
  MESSAGE = 'message',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties } from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties.TWITCH_LOGIN]: 'TWITCH_LOGIN',
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties.TYPE]: 'TYPE', 
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.SetupTwitchRequestProperties.MESSAGE]: 'MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestForm {
    active: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestForm } from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form';

export function Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestForm>({
    active: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequest {
  active?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestProperties {
  ACTIVE = 'active',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestProperties } from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleCustomBotActiveRequestProperties.ACTIVE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { IAuditLogFeatureForm } from './audit-log-feature.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestForm {
    activeFeatures: FormGroup<IBetsyBotFeatureForm>;
    activeAuditLogFeatures: FormGroup<IAuditLogFeatureForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestForm } from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form';
import { IBetsyBotFeatureForm } from './betsy-bot-feature.form';
import { BetsyBotFeatureFormGroupFac } from './betsy-bot-feature.form-group-fac';
import { IAuditLogFeatureForm } from './audit-log-feature.form';
import { AuditLogFeatureFormGroupFac } from './audit-log-feature.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestForm>({
    activeFeatures: new FormGroup<IBetsyBotFeatureForm>(BetsyBotFeatureFormGroupFac().controls),
    activeAuditLogFeatures: new FormGroup<IAuditLogFeatureForm>(AuditLogFeatureFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IBetsyBotFeature } from './betsy-bot-feature.model';
import { IAuditLogFeature } from './audit-log-feature.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequest {
  activeFeatures?: Partial<IBetsyBotFeature>;
  activeAuditLogFeatures?: Partial<IAuditLogFeature>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestProperties {
  ACTIVE_FEATURES = 'activeFeatures',
  ACTIVE_AUDIT_LOG_FEATURES = 'activeAuditLogFeatures',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestProperties } from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequest() {
    return {  
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestProperties.ACTIVE_FEATURES]: 'ACTIVE_FEATURES',
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.ToggleDiscordServerFeatureRequestProperties.ACTIVE_AUDIT_LOG_FEATURES]: 'ACTIVE_AUDIT_LOG_FEATURES',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestForm {
    auditLogChannelId: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestForm } from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form';

export function Cowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestForm>({
    auditLogChannelId: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequest {
  auditLogChannelId?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestProperties {
  AUDIT_LOG_CHANNEL_ID = 'auditLogChannelId',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestProperties } from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Request.UpdateDiscordServerAuditLogChannelRequestProperties.AUDIT_LOG_CHANNEL_ID]: 'AUDIT_LOG_CHANNEL_ID', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonForm {
    private: FormControl<boolean | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordCommandActionTypeForm>;
    discordMessage: FormGroup<IMessageTemplateImportJsonForm>;
    restRequestMetadata: FormGroup<IDiscordCommandActionRequestMetadataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonForm } from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form';
import { IDiscordCommandActionTypeForm } from './discord-command-action-type.form';
import { DiscordCommandActionTypeFormGroupFac } from './discord-command-action-type.form-group-fac';
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';
import { MessageTemplateImportJsonFormGroupFac } from './message-template-import-json.form-group-fac';
import { IDiscordCommandActionRequestMetadataForm } from './discord-command-action-request-metadata.form';
import { DiscordCommandActionRequestMetadataFormGroupFac } from './discord-command-action-request-metadata.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonForm>({
    private: new FormControl<boolean | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    discordCategoryId: new FormControl<string | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordCommandActionTypeForm>(DiscordCommandActionTypeFormGroupFac().controls),
    discordMessage: new FormGroup<IMessageTemplateImportJsonForm>(MessageTemplateImportJsonFormGroupFac().controls),
    restRequestMetadata: new FormGroup<IDiscordCommandActionRequestMetadataForm>(DiscordCommandActionRequestMetadataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandActionType } from './discord-command-action-type.model';
import { IMessageTemplateImportJson } from './message-template-import-json.model';
import { IDiscordCommandActionRequestMetadata } from './discord-command-action-request-metadata.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJson {
  private?: boolean | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  discordFormId?: string | null;
  type?: Partial<IDiscordCommandActionType>;
  discordMessage?: Partial<IMessageTemplateImportJson>;
  restRequestMetadata?: Partial<IDiscordCommandActionRequestMetadata>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties {
  PRIVATE = 'private',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  DISCORD_FORM_ID = 'discordFormId',
  TYPE = 'type',
  DISCORD_MESSAGE = 'discordMessage',
  REST_REQUEST_METADATA = 'restRequestMetadata',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties } from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJson() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID', 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandActionImportJsonProperties.REST_REQUEST_METADATA]: 'REST_REQUEST_METADATA',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { IDiscordCommandActionImportJsonForm } from './discord-command-action-import-json.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonForm {
    name: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    discordApplicationCommandId: FormControl<string | null | undefined>;
    type: FormGroup<IDiscordCommandTypeForm>;
    discordCommandActions: FormArray<FormGroup<IDiscordCommandActionImportJsonForm>>;
    commandInformation: FormGroup<IDiscordApplicationCommandForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonForm } from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form';
import { IDiscordCommandTypeForm } from './discord-command-type.form';
import { DiscordCommandTypeFormGroupFac } from './discord-command-type.form-group-fac';
import { IDiscordCommandActionImportJsonForm } from './discord-command-action-import-json.form';
import { IDiscordApplicationCommandForm } from './discord-application-command.form';
import { DiscordApplicationCommandFormGroupFac } from './discord-application-command.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonForm>({
    name: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    discordApplicationCommandId: new FormControl<string | null | undefined>(null),
    type: new FormGroup<IDiscordCommandTypeForm>(DiscordCommandTypeFormGroupFac().controls),
    discordCommandActions: new FormArray<FormGroup<IDiscordCommandActionImportJsonForm>>([]),
    commandInformation: new FormGroup<IDiscordApplicationCommandForm>(DiscordApplicationCommandFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordCommandType } from './discord-command-type.model';
import { IDiscordCommandActionImportJson } from './discord-command-action-import-json.model';
import { IDiscordApplicationCommand } from './discord-application-command.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJson {
  name?: string | null;
  description?: string | null;
  private?: boolean | null;
  discordApplicationCommandId?: string | null;
  type?: Partial<IDiscordCommandType>;
  discordCommandActions?: Partial<IDiscordCommandActionImportJson[]>;
  commandInformation?: Partial<IDiscordApplicationCommand>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties {
  NAME = 'name',
  DESCRIPTION = 'description',
  PRIVATE = 'private',
  DISCORD_APPLICATION_COMMAND_ID = 'discordApplicationCommandId',
  TYPE = 'type',
  DISCORD_COMMAND_ACTIONS = 'discordCommandActions',
  COMMAND_INFORMATION = 'commandInformation',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties } from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJson() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.PRIVATE]: false,
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.DISCORD_APPLICATION_COMMAND_ID]: 'DISCORD_APPLICATION_COMMAND_ID', 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.DISCORD_COMMAND_ACTIONS]: 'DISCORD_COMMAND_ACTIONS',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordCommandImportJsonProperties.COMMAND_INFORMATION]: 'COMMAND_INFORMATION',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordFormDataForm } from './discord-form-data.form';
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonForm {
    title: FormControl<string | null | undefined>;
    description: FormControl<string | null | undefined>;
    customId: FormControl<string | null | undefined>;
    private: FormControl<boolean | null | undefined>;
    formData: FormGroup<IDiscordFormDataForm>;
    responseMessage: FormGroup<IMessageTemplateImportJsonForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonForm } from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form';
import { IDiscordFormDataForm } from './discord-form-data.form';
import { DiscordFormDataFormGroupFac } from './discord-form-data.form-group-fac';
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';
import { MessageTemplateImportJsonFormGroupFac } from './message-template-import-json.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonForm>({
    title: new FormControl<string | null | undefined>(null),
    description: new FormControl<string | null | undefined>(null),
    customId: new FormControl<string | null | undefined>(null),
    private: new FormControl<boolean | null | undefined>(null),
    formData: new FormGroup<IDiscordFormDataForm>(DiscordFormDataFormGroupFac().controls),
    responseMessage: new FormGroup<IMessageTemplateImportJsonForm>(MessageTemplateImportJsonFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordFormData } from './discord-form-data.model';
import { IMessageTemplateImportJson } from './message-template-import-json.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJson {
  title?: string | null;
  description?: string | null;
  customId?: string | null;
  private?: boolean | null;
  formData?: Partial<IDiscordFormData>;
  responseMessage?: Partial<IMessageTemplateImportJson>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties {
  TITLE = 'title',
  DESCRIPTION = 'description',
  CUSTOM_ID = 'customId',
  PRIVATE = 'private',
  FORM_DATA = 'formData',
  RESPONSE_MESSAGE = 'responseMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties } from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJson() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.TITLE]: 'TITLE',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.DESCRIPTION]: 'DESCRIPTION',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.CUSTOM_ID]: 'CUSTOM_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.PRIVATE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.FORM_DATA]: 'FORM_DATA',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.DiscordFormImportJsonProperties.RESPONSE_MESSAGE]: 'RESPONSE_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';
import { IDiscordFormImportJsonForm } from './discord-form-import-json.form';
import { IDiscordCommandImportJsonForm } from './discord-command-import-json.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseForm {
    messageTemplates: FormArray<FormGroup<IMessageTemplateImportJsonForm>>;
    forms: FormArray<FormGroup<IDiscordFormImportJsonForm>>;
    commands: FormArray<FormGroup<IDiscordCommandImportJsonForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseForm } from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form';
import { IMessageTemplateImportJsonForm } from './message-template-import-json.form';
import { IDiscordFormImportJsonForm } from './discord-form-import-json.form';
import { IDiscordCommandImportJsonForm } from './discord-command-import-json.form';

export function Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseForm>({
    messageTemplates: new FormArray<FormGroup<IMessageTemplateImportJsonForm>>([]),
    forms: new FormArray<FormGroup<IDiscordFormImportJsonForm>>([]),
    commands: new FormArray<FormGroup<IDiscordCommandImportJsonForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IMessageTemplateImportJson } from './message-template-import-json.model';
import { IDiscordFormImportJson } from './discord-form-import-json.model';
import { IDiscordCommandImportJson } from './discord-command-import-json.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponse {
  messageTemplates?: Partial<IMessageTemplateImportJson[]>;
  forms?: Partial<IDiscordFormImportJson[]>;
  commands?: Partial<IDiscordCommandImportJson[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseProperties {
  MESSAGE_TEMPLATES = 'messageTemplates',
  FORMS = 'forms',
  COMMANDS = 'commands',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseProperties } from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponse() {
    return {  
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseProperties.MESSAGE_TEMPLATES]: 'MESSAGE_TEMPLATES',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseProperties.FORMS]: 'FORMS',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.GenerateImportJsonResponseProperties.COMMANDS]: 'COMMANDS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { IMessageDataForm } from './message-data.form';

export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonForm {
    name: FormControl<string | null | undefined>;
    discordChannelId: FormControl<string | null | undefined>;
    discordCategoryId: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
    type: FormGroup<IDiscordMessageTypeForm>;
    message: FormGroup<IMessageDataForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonForm } from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form';
import { IDiscordMessageTypeForm } from './discord-message-type.form';
import { DiscordMessageTypeFormGroupFac } from './discord-message-type.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonForm>({
    name: new FormControl<string | null | undefined>(null),
    discordChannelId: new FormControl<string | null | undefined>(null),
    discordCategoryId: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
    type: new FormGroup<IDiscordMessageTypeForm>(DiscordMessageTypeFormGroupFac().controls),
    message: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-message-template-import-json.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IDiscordMessageType } from './discord-message-type.model';
import { IMessageData } from './message-data.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJson {
  name?: string | null;
  discordChannelId?: string | null;
  discordCategoryId?: string | null;
  active?: boolean | null;
  type?: Partial<IDiscordMessageType>;
  message?: Partial<IMessageData>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-message-template-import-json.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties {
  NAME = 'name',
  DISCORD_CHANNEL_ID = 'discordChannelId',
  DISCORD_CATEGORY_ID = 'discordCategoryId',
  ACTIVE = 'active',
  TYPE = 'type',
  MESSAGE = 'message',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-server-response-message-template-import-json.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties } from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJson() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.DISCORD_CHANNEL_ID]: 'DISCORD_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.DISCORD_CATEGORY_ID]: 'DISCORD_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.ACTIVE]: false, 
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.TYPE]: 'TYPE',
      [Cowbot.Server.Models.DTOs.DiscordServer.Response.MessageTemplateImportJsonProperties.MESSAGE]: 'MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { ICreateDiscordMessageRequestForm } from './create-discord-message-request.form';
import { IMessageDataForm } from './message-data.form';
import { ISupportTicketSettingsTextOptionsForm } from './support-ticket-settings-text-options.form';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestForm {
    identifier: FormControl<string | null | undefined>;
    categoryId: FormControl<string | null | undefined>;
    logChannelId: FormControl<string | null | undefined>;
    assignedRoles: FormArray<FormControl<string>>;
    channelPrefix: FormControl<string | null | undefined>;
    closedCategoryId: FormControl<string | null | undefined>;
    sendTranscriptOnClose: FormControl<boolean | null | undefined>;
    maxOpenPerPerson: FormControl<number | null | undefined>;
    useAutoIncrement: FormControl<boolean | null | undefined>;
    autoCloseMinutes: FormControl<number | null | undefined>;
    hideName: FormControl<boolean | null | undefined>;
    allowClaiming: FormControl<boolean | null | undefined>;
    closeButtonText: FormControl<string | null | undefined>;
    publicTranscript: FormControl<boolean | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    supportTicketAudits: FormGroup<ISupportTicketAuditsForm>;
    discordMessage: FormGroup<ICreateDiscordMessageRequestForm>;
    initialMessage: FormGroup<IMessageDataForm>;
    textOptions: FormGroup<ISupportTicketSettingsTextOptionsForm>;
    supportTicketRoleOptions: FormArray<FormGroup<ISupportTicketRoleOptionsForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestForm } from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form';
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { SupportTicketAuditsFormGroupFac } from './support-ticket-audits.form-group-fac';
import { ICreateDiscordMessageRequestForm } from './create-discord-message-request.form';
import { CreateDiscordMessageRequestFormGroupFac } from './create-discord-message-request.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';
import { ISupportTicketSettingsTextOptionsForm } from './support-ticket-settings-text-options.form';
import { SupportTicketSettingsTextOptionsFormGroupFac } from './support-ticket-settings-text-options.form-group-fac';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export function Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestForm>({
    identifier: new FormControl<string | null | undefined>(null),
    categoryId: new FormControl<string | null | undefined>(null),
    logChannelId: new FormControl<string | null | undefined>(null),
    assignedRoles: new FormArray<FormControl<string>>([]),
    channelPrefix: new FormControl<string | null | undefined>(null),
    closedCategoryId: new FormControl<string | null | undefined>(null),
    sendTranscriptOnClose: new FormControl<boolean | null | undefined>(null),
    maxOpenPerPerson: new FormControl<number | null | undefined>(null),
    useAutoIncrement: new FormControl<boolean | null | undefined>(null),
    autoCloseMinutes: new FormControl<number | null | undefined>(null),
    hideName: new FormControl<boolean | null | undefined>(null),
    allowClaiming: new FormControl<boolean | null | undefined>(null),
    closeButtonText: new FormControl<string | null | undefined>(null),
    publicTranscript: new FormControl<boolean | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    supportTicketAudits: new FormGroup<ISupportTicketAuditsForm>(SupportTicketAuditsFormGroupFac().controls),
    discordMessage: new FormGroup<ICreateDiscordMessageRequestForm>(CreateDiscordMessageRequestFormGroupFac().controls),
    initialMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
    textOptions: new FormGroup<ISupportTicketSettingsTextOptionsForm>(SupportTicketSettingsTextOptionsFormGroupFac().controls),
    supportTicketRoleOptions: new FormArray<FormGroup<ISupportTicketRoleOptionsForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ISupportTicketAudits } from './support-ticket-audits.model';
import { ICreateDiscordMessageRequest } from './create-discord-message-request.model';
import { IMessageData } from './message-data.model';
import { ISupportTicketSettingsTextOptions } from './support-ticket-settings-text-options.model';
import { ISupportTicketRoleOptions } from './support-ticket-role-options.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequest {
  identifier?: string | null;
  categoryId?: string | null;
  logChannelId?: string | null;
  assignedRoles?: string[] | null;
  channelPrefix?: string | null;
  closedCategoryId?: string | null;
  sendTranscriptOnClose?: boolean | null;
  maxOpenPerPerson?: number | null;
  useAutoIncrement?: boolean | null;
  autoCloseMinutes?: number | null;
  hideName?: boolean | null;
  allowClaiming?: boolean | null;
  closeButtonText?: string | null;
  publicTranscript?: boolean | null;
  discordFormId?: string | null;
  supportTicketAudits?: Partial<ISupportTicketAudits>;
  discordMessage?: Partial<ICreateDiscordMessageRequest>;
  initialMessage?: Partial<IMessageData>;
  textOptions?: Partial<ISupportTicketSettingsTextOptions>;
  supportTicketRoleOptions?: Partial<ISupportTicketRoleOptions[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties {
  IDENTIFIER = 'identifier',
  CATEGORY_ID = 'categoryId',
  LOG_CHANNEL_ID = 'logChannelId',
  ASSIGNED_ROLES = 'assignedRoles',
  CHANNEL_PREFIX = 'channelPrefix',
  CLOSED_CATEGORY_ID = 'closedCategoryId',
  SEND_TRANSCRIPT_ON_CLOSE = 'sendTranscriptOnClose',
  MAX_OPEN_PER_PERSON = 'maxOpenPerPerson',
  USE_AUTO_INCREMENT = 'useAutoIncrement',
  AUTO_CLOSE_MINUTES = 'autoCloseMinutes',
  HIDE_NAME = 'hideName',
  ALLOW_CLAIMING = 'allowClaiming',
  CLOSE_BUTTON_TEXT = 'closeButtonText',
  PUBLIC_TRANSCRIPT = 'publicTranscript',
  DISCORD_FORM_ID = 'discordFormId',
  SUPPORT_TICKET_AUDITS = 'supportTicketAudits',
  DISCORD_MESSAGE = 'discordMessage',
  INITIAL_MESSAGE = 'initialMessage',
  TEXT_OPTIONS = 'textOptions',
  SUPPORT_TICKET_ROLE_OPTIONS = 'supportTicketRoleOptions',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties } from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.IDENTIFIER]: 'IDENTIFIER',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.CATEGORY_ID]: 'CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.LOG_CHANNEL_ID]: 'LOG_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.ASSIGNED_ROLES]: 'ASSIGNED_ROLES',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.CHANNEL_PREFIX]: 'CHANNEL_PREFIX',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.CLOSED_CATEGORY_ID]: 'CLOSED_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.SEND_TRANSCRIPT_ON_CLOSE]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.MAX_OPEN_PER_PERSON]: 0,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.USE_AUTO_INCREMENT]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.AUTO_CLOSE_MINUTES]: 0,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.HIDE_NAME]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.ALLOW_CLAIMING]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.CLOSE_BUTTON_TEXT]: 'CLOSE_BUTTON_TEXT',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.PUBLIC_TRANSCRIPT]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID', 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.SUPPORT_TICKET_AUDITS]: 'SUPPORT_TICKET_AUDITS',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.INITIAL_MESSAGE]: 'INITIAL_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.TEXT_OPTIONS]: 'TEXT_OPTIONS',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Request.CreateDiscordSupportSettingsRequestProperties.SUPPORT_TICKET_ROLE_OPTIONS]: 'SUPPORT_TICKET_ROLE_OPTIONS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { IDiscordMessageForm } from './discord-message.form';
import { IMessageDataForm } from './message-data.form';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseForm {
    identifier: FormControl<string | null | undefined>;
    categoryId: FormControl<string | null | undefined>;
    logChannelId: FormControl<string | null | undefined>;
    assignedRoles: FormArray<FormControl<string>>;
    channelPrefix: FormControl<string | null | undefined>;
    closedCategoryId: FormControl<string | null | undefined>;
    sendTranscriptOnClose: FormControl<boolean | null | undefined>;
    maxOpenPerPerson: FormControl<number | null | undefined>;
    useAutoIncrement: FormControl<boolean | null | undefined>;
    hideName: FormControl<boolean | null | undefined>;
    allowClaiming: FormControl<boolean | null | undefined>;
    closeButtonText: FormControl<string | null | undefined>;
    closeCancellationToken: FormControl<number | null | undefined>;
    autoCloseMinutes: FormControl<number | null | undefined>;
    publicTranscript: FormControl<boolean | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    discordServerId: FormControl<string | null | undefined>;
    discordFormId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    supportTicketAudits: FormGroup<ISupportTicketAuditsForm>;
    discordMessage: FormGroup<IDiscordMessageForm>;
    initialMessage: FormGroup<IMessageDataForm>;
    supportTicketRoleOptions: FormArray<FormGroup<ISupportTicketRoleOptionsForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseForm } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form';
import { ISupportTicketAuditsForm } from './support-ticket-audits.form';
import { SupportTicketAuditsFormGroupFac } from './support-ticket-audits.form-group-fac';
import { IDiscordMessageForm } from './discord-message.form';
import { DiscordMessageFormGroupFac } from './discord-message.form-group-fac';
import { IMessageDataForm } from './message-data.form';
import { MessageDataFormGroupFac } from './message-data.form-group-fac';
import { ISupportTicketRoleOptionsForm } from './support-ticket-role-options.form';

export function Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseForm>({
    identifier: new FormControl<string | null | undefined>(null),
    categoryId: new FormControl<string | null | undefined>(null),
    logChannelId: new FormControl<string | null | undefined>(null),
    assignedRoles: new FormArray<FormControl<string>>([]),
    channelPrefix: new FormControl<string | null | undefined>(null),
    closedCategoryId: new FormControl<string | null | undefined>(null),
    sendTranscriptOnClose: new FormControl<boolean | null | undefined>(null),
    maxOpenPerPerson: new FormControl<number | null | undefined>(null),
    useAutoIncrement: new FormControl<boolean | null | undefined>(null),
    hideName: new FormControl<boolean | null | undefined>(null),
    allowClaiming: new FormControl<boolean | null | undefined>(null),
    closeButtonText: new FormControl<string | null | undefined>(null),
    closeCancellationToken: new FormControl<number | null | undefined>(null),
    autoCloseMinutes: new FormControl<number | null | undefined>(null),
    publicTranscript: new FormControl<boolean | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    discordServerId: new FormControl<string | null | undefined>(null),
    discordFormId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    supportTicketAudits: new FormGroup<ISupportTicketAuditsForm>(SupportTicketAuditsFormGroupFac().controls),
    discordMessage: new FormGroup<IDiscordMessageForm>(DiscordMessageFormGroupFac().controls),
    initialMessage: new FormGroup<IMessageDataForm>(MessageDataFormGroupFac().controls),
    supportTicketRoleOptions: new FormArray<FormGroup<ISupportTicketRoleOptionsForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ISupportTicketAudits } from './support-ticket-audits.model';
import { IDiscordMessage } from './discord-message.model';
import { IMessageData } from './message-data.model';
import { ISupportTicketRoleOptions } from './support-ticket-role-options.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponse {
  identifier?: string | null;
  categoryId?: string | null;
  logChannelId?: string | null;
  assignedRoles?: string[] | null;
  channelPrefix?: string | null;
  closedCategoryId?: string | null;
  sendTranscriptOnClose?: boolean | null;
  maxOpenPerPerson?: number | null;
  useAutoIncrement?: boolean | null;
  hideName?: boolean | null;
  allowClaiming?: boolean | null;
  closeButtonText?: string | null;
  closeCancellationToken?: number | null;
  autoCloseMinutes?: number | null;
  publicTranscript?: boolean | null;
  discordMessageId?: string | null;
  discordServerId?: string | null;
  discordFormId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  supportTicketAudits?: Partial<ISupportTicketAudits>;
  discordMessage?: Partial<IDiscordMessage>;
  initialMessage?: Partial<IMessageData>;
  supportTicketRoleOptions?: Partial<ISupportTicketRoleOptions[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties {
  IDENTIFIER = 'identifier',
  CATEGORY_ID = 'categoryId',
  LOG_CHANNEL_ID = 'logChannelId',
  ASSIGNED_ROLES = 'assignedRoles',
  CHANNEL_PREFIX = 'channelPrefix',
  CLOSED_CATEGORY_ID = 'closedCategoryId',
  SEND_TRANSCRIPT_ON_CLOSE = 'sendTranscriptOnClose',
  MAX_OPEN_PER_PERSON = 'maxOpenPerPerson',
  USE_AUTO_INCREMENT = 'useAutoIncrement',
  HIDE_NAME = 'hideName',
  ALLOW_CLAIMING = 'allowClaiming',
  CLOSE_BUTTON_TEXT = 'closeButtonText',
  CLOSE_CANCELLATION_TOKEN = 'closeCancellationToken',
  AUTO_CLOSE_MINUTES = 'autoCloseMinutes',
  PUBLIC_TRANSCRIPT = 'publicTranscript',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  DISCORD_SERVER_ID = 'discordServerId',
  DISCORD_FORM_ID = 'discordFormId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  SUPPORT_TICKET_AUDITS = 'supportTicketAudits',
  DISCORD_MESSAGE = 'discordMessage',
  INITIAL_MESSAGE = 'initialMessage',
  SUPPORT_TICKET_ROLE_OPTIONS = 'supportTicketRoleOptions',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.IDENTIFIER]: 'IDENTIFIER',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CATEGORY_ID]: 'CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.LOG_CHANNEL_ID]: 'LOG_CHANNEL_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.ASSIGNED_ROLES]: 'ASSIGNED_ROLES',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CHANNEL_PREFIX]: 'CHANNEL_PREFIX',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CLOSED_CATEGORY_ID]: 'CLOSED_CATEGORY_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.SEND_TRANSCRIPT_ON_CLOSE]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.MAX_OPEN_PER_PERSON]: 0,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.USE_AUTO_INCREMENT]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.HIDE_NAME]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.ALLOW_CLAIMING]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CLOSE_BUTTON_TEXT]: 'CLOSE_BUTTON_TEXT',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CLOSE_CANCELLATION_TOKEN]: 0,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.AUTO_CLOSE_MINUTES]: 0,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.PUBLIC_TRANSCRIPT]: false,
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.DISCORD_SERVER_ID]: 'DISCORD_SERVER_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.DISCORD_FORM_ID]: 'DISCORD_FORM_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.SUPPORT_TICKET_AUDITS]: 'SUPPORT_TICKET_AUDITS',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.INITIAL_MESSAGE]: 'INITIAL_MESSAGE',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.BaseDiscordSupportSettingsResponseProperties.SUPPORT_TICKET_ROLE_OPTIONS]: 'SUPPORT_TICKET_ROLE_OPTIONS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageForm {
    id: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageForm } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form';

export function Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageForm>({
    id: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessage {
  id?: string | null;
  active?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageProperties {
  ID = 'id',
  ACTIVE = 'active',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageProperties } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessage() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsMessageProperties.ACTIVE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IListDiscordSupportSettingsMessageForm } from './list-discord-support-settings-message.form';

export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseForm {
    identifier: FormControl<string | null | undefined>;
    discordMessageId: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    createdDate: FormControl<Date | null | undefined>;
    updatedDate: FormControl<Date | null | undefined>;
    discordMessage: FormGroup<IListDiscordSupportSettingsMessageForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseForm } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form';
import { IListDiscordSupportSettingsMessageForm } from './list-discord-support-settings-message.form';
import { ListDiscordSupportSettingsMessageFormGroupFac } from './list-discord-support-settings-message.form-group-fac';

export function Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseForm>({
    identifier: new FormControl<string | null | undefined>(null),
    discordMessageId: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    createdDate: new FormControl<Date | null | undefined>(null),
    updatedDate: new FormControl<Date | null | undefined>(null),
    discordMessage: new FormGroup<IListDiscordSupportSettingsMessageForm>(ListDiscordSupportSettingsMessageFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IListDiscordSupportSettingsMessage } from './list-discord-support-settings-message.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponse {
  identifier?: string | null;
  discordMessageId?: string | null;
  id?: string | null;
  createdDate?: Date | null;
  updatedDate?: Date | null;
  discordMessage?: Partial<IListDiscordSupportSettingsMessage>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties {
  IDENTIFIER = 'identifier',
  DISCORD_MESSAGE_ID = 'discordMessageId',
  ID = 'id',
  CREATED_DATE = 'createdDate',
  UPDATED_DATE = 'updatedDate',
  DISCORD_MESSAGE = 'discordMessage',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties } from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.IDENTIFIER]: 'IDENTIFIER',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.DISCORD_MESSAGE_ID]: 'DISCORD_MESSAGE_ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.CREATED_DATE]: new Date(),
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.UPDATED_DATE]: new Date(), 
      [Cowbot.Server.Models.DTOs.DiscordSupportTicketSettings.Response.ListDiscordSupportSettingsResponseProperties.DISCORD_MESSAGE]: 'DISCORD_MESSAGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseForm {
    id: FormControl<string | null | undefined>;
    name: FormControl<string | null | undefined>;
    active: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseForm } from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form';

export function Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseForm>({
    id: new FormControl<string | null | undefined>(null),
    name: new FormControl<string | null | undefined>(null),
    active: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponse {
  id?: string | null;
  name?: string | null;
  active?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseProperties {
  ID = 'id',
  NAME = 'name',
  ACTIVE = 'active',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseProperties } from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.properties';

export function createTestCowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseProperties.NAME]: 'NAME',
      [Cowbot.Server.Models.DTOs.DiscordTrackedMessage.Response.TrackedMessageListResponseProperties.ACTIVE]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-error-reason.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Error.ErrorReason {
  0 = 0,
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
}

export enum Cowbot.Server.Models.DTOs.Error.ErrorReasonNames {
  0 = '0',
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
}

export const cowbotServerModelsDtOsErrorErrorReasonValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-response-error-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IErrorReasonForm } from './error-reason.form';

export interface ICowbot.Server.Models.DTOs.Error.Response.ErrorResponseForm {
    message: FormControl<string | null | undefined>;
    details: FormControl<string | null | undefined>;
    validationErrors: FormControl<object | null | undefined>;
    reason: FormGroup<IErrorReasonForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-response-error-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.Error.Response.ErrorResponseForm } from './cowbot-server-models-dt-os-error-response-error-response.form';
import { IErrorReasonForm } from './error-reason.form';
import { ErrorReasonFormGroupFac } from './error-reason.form-group-fac';

export function Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.Error.Response.ErrorResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.Error.Response.ErrorResponseForm>({
    message: new FormControl<string | null | undefined>(null),
    details: new FormControl<string | null | undefined>(null),
    validationErrors: new FormControl<object | null | undefined>(null),
    reason: new FormGroup<IErrorReasonForm>(ErrorReasonFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-response-error-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IErrorReason } from './error-reason.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.Error.Response.ErrorResponse {
  message?: string | null;
  details?: string | null;
  validationErrors?: object | null;
  reason?: Partial<IErrorReason>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-response-error-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties {
  MESSAGE = 'message',
  DETAILS = 'details',
  VALIDATION_ERRORS = 'validationErrors',
  REASON = 'reason',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-error-response-error-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties } from './cowbot-server-models-dt-os-error-response-error-response.properties';

export function createTestCowbot.Server.Models.DTOs.Error.Response.ErrorResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties.MESSAGE]: 'MESSAGE',
      [Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties.DETAILS]: 'DETAILS',
      [Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties.VALIDATION_ERRORS]: 'VALIDATION_ERRORS', 
      [Cowbot.Server.Models.DTOs.Error.Response.ErrorResponseProperties.REASON]: 'REASON',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-betsy-bot-feature.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.BetsyBotFeature {
  1 = 1,
  2 = 2,
  4 = 4,
  8 = 8,
  16 = 16,
  32 = 32,
  64 = 64,
  128 = 128,
  256 = 256,
  512 = 512,
  1024 = 1024,
  2048 = 2048,
}

export enum Cowbot.Server.Models.DTOs.Shared.BetsyBotFeatureNames {
  1 = '1',
  2 = '2',
  4 = '4',
  8 = '8',
  16 = '16',
  32 = '32',
  64 = '64',
  128 = '128',
  256 = '256',
  512 = '512',
  1024 = '1024',
  2048 = '2048',
}

export const cowbotServerModelsDtOsSharedBetsyBotFeatureValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 4, name: '4', displayText: '4'},
  { key: 8, name: '8', displayText: '8'},
  { key: 16, name: '16', displayText: '16'},
  { key: 32, name: '32', displayText: '32'},
  { key: 64, name: '64', displayText: '64'},
  { key: 128, name: '128', displayText: '128'},
  { key: 256, name: '256', displayText: '256'},
  { key: 512, name: '512', displayText: '512'},
  { key: 1024, name: '1024', displayText: '1024'},
  { key: 2048, name: '2048', displayText: '2048'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-application-command-option-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordApplicationCommandOptionType {
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
  6 = 6,
  7 = 7,
  8 = 8,
  9 = 9,
  10 = 10,
  11 = 11,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordApplicationCommandOptionTypeNames {
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
  5 = '5',
  6 = '6',
  7 = '7',
  8 = '8',
  9 = '9',
  10 = '10',
  11 = '11',
}

export const cowbotServerModelsDtOsSharedDiscordApplicationCommandOptionTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
  { key: 5, name: '5', displayText: '5'},
  { key: 6, name: '6', displayText: '6'},
  { key: 7, name: '7', displayText: '7'},
  { key: 8, name: '8', displayText: '8'},
  { key: 9, name: '9', displayText: '9'},
  { key: 10, name: '10', displayText: '10'},
  { key: 11, name: '11', displayText: '11'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-application-command-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordApplicationCommandType {
  1 = 1,
  2 = 2,
  3 = 3,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordApplicationCommandTypeNames {
  1 = '1',
  2 = '2',
  3 = '3',
}

export const cowbotServerModelsDtOsSharedDiscordApplicationCommandTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-auto-responder-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordAutoResponderType {
  0 = 0,
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordAutoResponderTypeNames {
  0 = '0',
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDtOsSharedDiscordAutoResponderTypeValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-autorole-container-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordAutoroleContainerType {
  0 = 0,
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordAutoroleContainerTypeNames {
  0 = '0',
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDtOsSharedDiscordAutoroleContainerTypeValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-channel-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordChannelType {
  0 = 0,
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
  6 = 6,
  10 = 10,
  11 = 11,
  12 = 12,
  13 = 13,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordChannelTypeNames {
  0 = '0',
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
  5 = '5',
  6 = '6',
  10 = '10',
  11 = '11',
  12 = '12',
  13 = '13',
}

export const cowbotServerModelsDtOsSharedDiscordChannelTypeValues = [
  { key: 0, name: '0', displayText: '0'},
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
  { key: 5, name: '5', displayText: '5'},
  { key: 6, name: '6', displayText: '6'},
  { key: 10, name: '10', displayText: '10'},
  { key: 11, name: '11', displayText: '11'},
  { key: 12, name: '12', displayText: '12'},
  { key: 13, name: '13', displayText: '13'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-command-action-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordCommandActionType {
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
  5 = 5,
  6 = 6,
  7 = 7,
  8 = 8,
  9 = 9,
  10 = 10,
  11 = 11,
  12 = 12,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordCommandActionTypeNames {
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
  5 = '5',
  6 = '6',
  7 = '7',
  8 = '8',
  9 = '9',
  10 = '10',
  11 = '11',
  12 = '12',
}

export const cowbotServerModelsDtOsSharedDiscordCommandActionTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
  { key: 5, name: '5', displayText: '5'},
  { key: 6, name: '6', displayText: '6'},
  { key: 7, name: '7', displayText: '7'},
  { key: 8, name: '8', displayText: '8'},
  { key: 9, name: '9', displayText: '9'},
  { key: 10, name: '10', displayText: '10'},
  { key: 11, name: '11', displayText: '11'},
  { key: 12, name: '12', displayText: '12'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-command-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordCommandType {
  1 = 1,
  2 = 2,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordCommandTypeNames {
  1 = '1',
  2 = '2',
}

export const cowbotServerModelsDtOsSharedDiscordCommandTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-shared-discord-message-type.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum Cowbot.Server.Models.DTOs.Shared.DiscordMessageType {
  1 = 1,
  2 = 2,
  3 = 3,
  4 = 4,
}

export enum Cowbot.Server.Models.DTOs.Shared.DiscordMessageTypeNames {
  1 = '1',
  2 = '2',
  3 = '3',
  4 = '4',
}

export const cowbotServerModelsDtOsSharedDiscordMessageTypeValues = [
  { key: 1, name: '1', displayText: '1'},
  { key: 2, name: '2', displayText: '2'},
  { key: 3, name: '3', displayText: '3'},
  { key: 4, name: '4', displayText: '4'},
];
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-register-user-dto.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.User.Request.RegisterUserDtoForm {
    email: FormControl<string | null | undefined>;
    password: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-register-user-dto.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.User.Request.RegisterUserDtoForm } from './cowbot-server-models-dt-os-user-request-register-user-dto.form';

export function Cowbot.Server.Models.DTOs.User.Request.RegisterUserDtoFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.User.Request.RegisterUserDtoForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.User.Request.RegisterUserDtoForm>({
    email: new FormControl<string | null | undefined>(null),
    password: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-register-user-dto.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.User.Request.RegisterUserDto {
  email?: string | null;
  password?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-register-user-dto.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.User.Request.RegisterUserDtoProperties {
  EMAIL = 'email',
  PASSWORD = 'password',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-register-user-dto.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.User.Request.RegisterUserDtoProperties } from './cowbot-server-models-dt-os-user-request-register-user-dto.properties';

export function createTestCowbot.Server.Models.DTOs.User.Request.RegisterUserDto() {
    return { 
      [Cowbot.Server.Models.DTOs.User.Request.RegisterUserDtoProperties.EMAIL]: 'EMAIL',
      [Cowbot.Server.Models.DTOs.User.Request.RegisterUserDtoProperties.PASSWORD]: 'PASSWORD', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-update-password-request.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestForm {
    currentPassword: FormControl<string | null | undefined>;
    newPassword: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-update-password-request.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestForm } from './cowbot-server-models-dt-os-user-request-update-password-request.form';

export function Cowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestForm>({
    currentPassword: new FormControl<string | null | undefined>(null),
    newPassword: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-update-password-request.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequest {
  currentPassword?: string | null;
  newPassword?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-update-password-request.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestProperties {
  CURRENT_PASSWORD = 'currentPassword',
  NEW_PASSWORD = 'newPassword',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-request-update-password-request.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestProperties } from './cowbot-server-models-dt-os-user-request-update-password-request.properties';

export function createTestCowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequest() {
    return { 
      [Cowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestProperties.CURRENT_PASSWORD]: 'CURRENT_PASSWORD',
      [Cowbot.Server.Models.DTOs.User.Request.UpdatePasswordRequestProperties.NEW_PASSWORD]: 'NEW_PASSWORD', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-login-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.DTOs.User.Response.LoginResponseForm {
    token: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    expiresAt: FormControl<number | null | undefined>;
    resetPassword: FormControl<boolean | null | undefined>;
    tokenRequired: FormControl<boolean | null | undefined>;
    alreadyRegistered: FormControl<boolean | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-login-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.User.Response.LoginResponseForm } from './cowbot-server-models-dt-os-user-response-login-response.form';

export function Cowbot.Server.Models.DTOs.User.Response.LoginResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.User.Response.LoginResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.User.Response.LoginResponseForm>({
    token: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    expiresAt: new FormControl<number | null | undefined>(null),
    resetPassword: new FormControl<boolean | null | undefined>(null),
    tokenRequired: new FormControl<boolean | null | undefined>(null),
    alreadyRegistered: new FormControl<boolean | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-login-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.User.Response.LoginResponse {
  token?: string | null;
  id?: string | null;
  expiresAt?: number | null;
  resetPassword?: boolean | null;
  tokenRequired?: boolean | null;
  alreadyRegistered?: boolean | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-login-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties {
  TOKEN = 'token',
  ID = 'id',
  EXPIRES_AT = 'expiresAt',
  RESET_PASSWORD = 'resetPassword',
  TOKEN_REQUIRED = 'tokenRequired',
  ALREADY_REGISTERED = 'alreadyRegistered',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-login-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties } from './cowbot-server-models-dt-os-user-response-login-response.properties';

export function createTestCowbot.Server.Models.DTOs.User.Response.LoginResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.TOKEN]: 'TOKEN',
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.EXPIRES_AT]: 0,
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.RESET_PASSWORD]: false,
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.TOKEN_REQUIRED]: false,
      [Cowbot.Server.Models.DTOs.User.Response.LoginResponseProperties.ALREADY_REGISTERED]: false, 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-profile-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IBaseDiscordServerForm } from './base-discord-server.form';

export interface ICowbot.Server.Models.DTOs.User.Response.ProfileResponseForm {
    token: FormControl<string | null | undefined>;
    id: FormControl<string | null | undefined>;
    discordId: FormControl<string | null | undefined>;
    firstName: FormControl<string | null | undefined>;
    lastName: FormControl<string | null | undefined>;
    avatar: FormControl<string | null | undefined>;
    activeServers: FormArray<FormGroup<IBaseDiscordServerForm>>;
    adminedServers: FormArray<FormGroup<IBaseDiscordServerForm>>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-profile-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.DTOs.User.Response.ProfileResponseForm } from './cowbot-server-models-dt-os-user-response-profile-response.form';
import { IBaseDiscordServerForm } from './base-discord-server.form';

export function Cowbot.Server.Models.DTOs.User.Response.ProfileResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.DTOs.User.Response.ProfileResponseForm> {
  return new FormGroup<ICowbot.Server.Models.DTOs.User.Response.ProfileResponseForm>({
    token: new FormControl<string | null | undefined>(null),
    id: new FormControl<string | null | undefined>(null),
    discordId: new FormControl<string | null | undefined>(null),
    firstName: new FormControl<string | null | undefined>(null),
    lastName: new FormControl<string | null | undefined>(null),
    avatar: new FormControl<string | null | undefined>(null),
    activeServers: new FormArray<FormGroup<IBaseDiscordServerForm>>([]),
    adminedServers: new FormArray<FormGroup<IBaseDiscordServerForm>>([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-profile-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IBaseDiscordServer } from './base-discord-server.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.DTOs.User.Response.ProfileResponse {
  token?: string | null;
  id?: string | null;
  discordId?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  avatar?: string | null;
  activeServers?: Partial<IBaseDiscordServer[]>;
  adminedServers?: Partial<IBaseDiscordServer[]>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-profile-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties {
  TOKEN = 'token',
  ID = 'id',
  DISCORD_ID = 'discordId',
  FIRST_NAME = 'firstName',
  LAST_NAME = 'lastName',
  AVATAR = 'avatar',
  ACTIVE_SERVERS = 'activeServers',
  ADMINED_SERVERS = 'adminedServers',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-dt-os-user-response-profile-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties } from './cowbot-server-models-dt-os-user-response-profile-response.properties';

export function createTestCowbot.Server.Models.DTOs.User.Response.ProfileResponse() {
    return { 
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.TOKEN]: 'TOKEN',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.ID]: 'ID',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.DISCORD_ID]: 'DISCORD_ID',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.FIRST_NAME]: 'FIRST_NAME',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.LAST_NAME]: 'LAST_NAME',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.AVATAR]: 'AVATAR', 
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.ACTIVE_SERVERS]: 'ACTIVE_SERVERS',
      [Cowbot.Server.Models.DTOs.User.Response.ProfileResponseProperties.ADMINED_SERVERS]: 'ADMINED_SERVERS',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-email-quality-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IIpQualityDateResponseForm } from './ip-quality-date-response.form';

export interface ICowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseForm {
    valid: FormControl<boolean | null | undefined>;
    disposable: FormControl<boolean | null | undefined>;
    firstName: FormControl<string | null | undefined>;
    generic: FormControl<boolean | null | undefined>;
    common: FormControl<boolean | null | undefined>;
    honeypot: FormControl<boolean | null | undefined>;
    frequentComplainer: FormControl<boolean | null | undefined>;
    suspect: FormControl<boolean | null | undefined>;
    timedOut: FormControl<boolean | null | undefined>;
    recentAbuse: FormControl<boolean | null | undefined>;
    fraudScore: FormControl<number | null | undefined>;
    suggestedDomain: FormControl<string | null | undefined>;
    spamTrapScore: FormControl<string | null | undefined>;
    catchAll: FormControl<boolean | null | undefined>;
    leaked: FormControl<boolean | null | undefined>;
    firstSeenISO: FormControl<string | null | undefined>;
    domainAgeISO: FormControl<string | null | undefined>;
    smtpScore: FormControl<number | null | undefined>;
    overallScore: FormControl<number | null | undefined>;
    firstSeen: FormGroup<IIpQualityDateResponseForm>;
    domainAge: FormGroup<IIpQualityDateResponseForm>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-email-quality-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseForm } from './cowbot-server-models-ip-quality-score-models-email-quality-response.form';
import { IIpQualityDateResponseForm } from './ip-quality-date-response.form';
import { IpQualityDateResponseFormGroupFac } from './ip-quality-date-response.form-group-fac';

export function Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseForm> {
  return new FormGroup<ICowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseForm>({
    valid: new FormControl<boolean | null | undefined>(null),
    disposable: new FormControl<boolean | null | undefined>(null),
    firstName: new FormControl<string | null | undefined>(null),
    generic: new FormControl<boolean | null | undefined>(null),
    common: new FormControl<boolean | null | undefined>(null),
    honeypot: new FormControl<boolean | null | undefined>(null),
    frequentComplainer: new FormControl<boolean | null | undefined>(null),
    suspect: new FormControl<boolean | null | undefined>(null),
    timedOut: new FormControl<boolean | null | undefined>(null),
    recentAbuse: new FormControl<boolean | null | undefined>(null),
    fraudScore: new FormControl<number | null | undefined>(null),
    suggestedDomain: new FormControl<string | null | undefined>(null),
    spamTrapScore: new FormControl<string | null | undefined>(null),
    catchAll: new FormControl<boolean | null | undefined>(null),
    leaked: new FormControl<boolean | null | undefined>(null),
    firstSeenISO: new FormControl<string | null | undefined>(null),
    domainAgeISO: new FormControl<string | null | undefined>(null),
    smtpScore: new FormControl<number | null | undefined>(null),
    overallScore: new FormControl<number | null | undefined>(null),
    firstSeen: new FormGroup<IIpQualityDateResponseForm>(IpQualityDateResponseFormGroupFac().controls),
    domainAge: new FormGroup<IIpQualityDateResponseForm>(IpQualityDateResponseFormGroupFac().controls),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-email-quality-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IIpQualityDateResponse } from './ip-quality-date-response.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.IpQualityScoreModels.EmailQualityResponse {
  valid?: boolean | null;
  disposable?: boolean | null;
  firstName?: string | null;
  generic?: boolean | null;
  common?: boolean | null;
  honeypot?: boolean | null;
  frequentComplainer?: boolean | null;
  suspect?: boolean | null;
  timedOut?: boolean | null;
  recentAbuse?: boolean | null;
  fraudScore?: number | null;
  suggestedDomain?: string | null;
  spamTrapScore?: string | null;
  catchAll?: boolean | null;
  leaked?: boolean | null;
  firstSeenISO?: string | null;
  domainAgeISO?: string | null;
  smtpScore?: number | null;
  overallScore?: number | null;
  firstSeen?: Partial<IIpQualityDateResponse>;
  domainAge?: Partial<IIpQualityDateResponse>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-email-quality-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties {
  VALID = 'valid',
  DISPOSABLE = 'disposable',
  FIRST_NAME = 'firstName',
  GENERIC = 'generic',
  COMMON = 'common',
  HONEYPOT = 'honeypot',
  FREQUENT_COMPLAINER = 'frequentComplainer',
  SUSPECT = 'suspect',
  TIMED_OUT = 'timedOut',
  RECENT_ABUSE = 'recentAbuse',
  FRAUD_SCORE = 'fraudScore',
  SUGGESTED_DOMAIN = 'suggestedDomain',
  SPAM_TRAP_SCORE = 'spamTrapScore',
  CATCH_ALL = 'catchAll',
  LEAKED = 'leaked',
  FIRST_SEEN_ISO = 'firstSeenISO',
  DOMAIN_AGE_ISO = 'domainAgeISO',
  SMTP_SCORE = 'smtpScore',
  OVERALL_SCORE = 'overallScore',
  FIRST_SEEN = 'firstSeen',
  DOMAIN_AGE = 'domainAge',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-email-quality-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties } from './cowbot-server-models-ip-quality-score-models-email-quality-response.properties';

export function createTestCowbot.Server.Models.IpQualityScoreModels.EmailQualityResponse() {
    return { 
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.VALID]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.DISPOSABLE]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.FIRST_NAME]: 'FIRST_NAME',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.GENERIC]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.COMMON]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.HONEYPOT]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.FREQUENT_COMPLAINER]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.SUSPECT]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.TIMED_OUT]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.RECENT_ABUSE]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.FRAUD_SCORE]: 0,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.SUGGESTED_DOMAIN]: 'SUGGESTED_DOMAIN',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.SPAM_TRAP_SCORE]: 'SPAM_TRAP_SCORE',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.CATCH_ALL]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.LEAKED]: false,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.FIRST_SEEN_ISO]: 'FIRST_SEEN_ISO',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.DOMAIN_AGE_ISO]: 'DOMAIN_AGE_ISO',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.SMTP_SCORE]: 0,
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.OVERALL_SCORE]: 0, 
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.FIRST_SEEN]: 'FIRST_SEEN',
      [Cowbot.Server.Models.IpQualityScoreModels.EmailQualityResponseProperties.DOMAIN_AGE]: 'DOMAIN_AGE',
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface ICowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseForm {
    human: FormControl<string | null | undefined>;
    timestamp: FormControl<number | null | undefined>;
    iso: FormControl<string | null | undefined>;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form-group-fac.ts 1`] = `
"/* eslint-disable no-useless-escape */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseForm } from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form';

export function Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseFormGroupFac(): FormGroup<ICowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseForm> {
  return new FormGroup<ICowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseForm>({
    human: new FormControl<string | null | undefined>(null),
    timestamp: new FormControl<number | null | undefined>(null),
    iso: new FormControl<string | null | undefined>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-ip-quality-date-response.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponse {
  human?: string | null;
  timestamp?: number | null;
  iso?: string | null;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-ip-quality-date-response.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseProperties {
  HUMAN = 'human',
  TIMESTAMP = 'timestamp',
  ISO = 'iso',
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: cowbot-server-models-ip-quality-score-models-ip-quality-date-response.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseProperties } from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.properties';

export function createTestCowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponse() {
    return { 
      [Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseProperties.HUMAN]: 'HUMAN',
      [Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseProperties.TIMESTAMP]: 0,
      [Cowbot.Server.Models.IpQualityScoreModels.IpQualityDateResponseProperties.ISO]: 'ISO', 
    };
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: endpoints.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #endpoints-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Endpoints {
  authentication = '/',
  discordCommand = '/Discord/ApplicationCommand',
  discordCommandTest = '/Discord/ApplicationCommand/Test',
  discordCommand2 = '/Discord/ApplicationCommand/{id}',
  discord = '/Discord/OAuth/ExchangeCode',
  discordRefreshToken = '/Discord/OAuth/RefreshToken',
  discordAutoResponder = '/DiscordAutoResponder',
  discordAutoResponder2 = '/DiscordAutoResponder/{id}',
  discordAutoResponderToggleActive = '/DiscordAutoResponder/{id}/ToggleActive',
  discordAutoroleContainer = '/DiscordAutoroleContainer',
  discordAutoroleContainer2 = '/DiscordAutoroleContainer/{id}',
  discordAutoroleContainerToggleActive = '/DiscordAutoroleContainer/{id}/ToggleActive',
  discordChannelBackup = '/DiscordChannelBackup',
  discordChannelBackup2 = '/DiscordChannelBackup/{id}',
  discordChannelCleaner = '/DiscordChannelCleaner',
  discordChannelCleanerClean = '/DiscordChannelCleaner/Clean',
  discordChannelCleaner2 = '/DiscordChannelCleaner/{id}',
  discordChannelCleanerClean = '/DiscordChannelCleaner/{id}/Clean',
  discordForm = '/DiscordForm/Guild/{guildId}/Forms',
  discordForm2 = '/DiscordForm/Guild/{guildId}/Forms/{formId}',
  discordGiveaway = '/DiscordGiveaway',
  discordGiveaway2 = '/DiscordGiveaway/{id}',
  discordGiveawayToggleActive = '/DiscordGiveaway/{id}/ToggleActive',
  discordGuild = '/DiscordGuild',
  discordGuildPopulateNames = '/DiscordGuild/PopulateNames',
  discordGuild2 = '/DiscordGuild/{guildId}',
  discordGuildActivateCustomBot = '/DiscordGuild/{guildId}/ActivateCustomBot',
  discordGuildApiKeys = '/DiscordGuild/{guildId}/ApiKeys',
  discordGuildAuditLogs = '/DiscordGuild/{guildId}/AuditLogs',
  discordGuildAuthorizedUsers = '/DiscordGuild/{guildId}/AuthorizedUsers',
  discordGuildAutoResponders = '/DiscordGuild/{guildId}/AutoResponders',
  discordGuildAutoRoleContainers = '/DiscordGuild/{guildId}/AutoRoleContainers',
  discordGuildAutoRoles = '/DiscordGuild/{guildId}/AutoRoles',
  discordGuildSendMessage = '/DiscordGuild/{guildId}/Channel/{channelId}/SendMessage',
  discordGuildChannels = '/DiscordGuild/{guildId}/Channels',
  discordGuildCommands = '/DiscordGuild/{guildId}/Commands',
  discordGuildDiscordChannelBackups = '/DiscordGuild/{guildId}/DiscordChannelBackups',
  discordGuildDiscordChannelCleaners = '/DiscordGuild/{guildId}/DiscordChannelCleaners',
  discordGuildToggleActive = '/DiscordGuild/{guildId}/DiscordCommand/{commandId}/ToggleActive',
  discordGuild2 = '/DiscordGuild/{guildId}/DiscordMessages/{discordMessageId}',
  discordGuildDiscordPolls = '/DiscordGuild/{guildId}/DiscordPolls',
  discordGuildDiscordReviews = '/DiscordGuild/{guildId}/DiscordReviews',
  discordGuildDiscordThreadChannels = '/DiscordGuild/{guildId}/DiscordThreadChannels',
  discordGuildGiveaways = '/DiscordGuild/{guildId}/Giveaways',
  discordGuildGlobalSettings = '/DiscordGuild/{guildId}/GlobalSettings',
  discordGuildGuildUserInvites = '/DiscordGuild/{guildId}/GuildUserInvites',
  discordGuildImportTemplate = '/DiscordGuild/{guildId}/ImportTemplate',
  discordGuildInvites = '/DiscordGuild/{guildId}/Invites',
  discordGuildInviteSettings = '/DiscordGuild/{guildId}/InviteSettings',
  discordGuildKeyValueCategories = '/DiscordGuild/{guildId}/KeyValueCategories',
  discordGuildRequiresLogin = '/DiscordGuild/{guildId}/RequiresLogin',
  discordGuildMessages = '/DiscordGuild/{guildId}/Resources/Messages',
  discordGuildReviewSettings = '/DiscordGuild/{guildId}/ReviewSettings',
  discordGuildSetAuditLogChannel = '/DiscordGuild/{guildId}/SetAuditLogChannel',
  discordGuildSetFeatures = '/DiscordGuild/{guildId}/SetFeatures',
  discordGuildSetup = '/DiscordGuild/{guildId}/Setup',
  discordGuildSupportMessages = '/DiscordGuild/{guildId}/SupportMessages',
  discordGuildSupportTicketPanels = '/DiscordGuild/{guildId}/SupportTicketPanels',
  discordGuildSupportTickets = '/DiscordGuild/{guildId}/SupportTickets',
  discordGuildSubmissions = '/DiscordGuild/{guildId}/SupportTickets/{settingsId}/Submissions',
  discordGuild2 = '/DiscordGuild/{guildId}/SupportTickets/{settingsId}/Submissions/{supportTicketId}',
  discordGuildTrackedMessages = '/DiscordGuild/{guildId}/TrackedMessages',
  discordGuild2 = '/DiscordGuild/{guildId}/TrackedMessages/{messageId}',
  discordGuildTwitchEventSubscriptions = '/DiscordGuild/{guildId}/TwitchEventSubscriptions',
  discordGuild2 = '/DiscordGuild/{guildId}/TwitchEventSubscriptions/{id}',
  discordGuildUsers = '/DiscordGuild/{guildId}/Users',
  discordGuild2 = '/DiscordGuild/{guildId}/Verify/{userId}',
  discordGuildWelcomeMessages = '/DiscordGuild/{guildId}/WelcomeMessages',
  discordGuild2 = '/DiscordGuild/{newGuildId}/TransferFrom/{oldGuildId}',
  discordMessage = '/DiscordMessage',
  discordMessage2 = '/DiscordMessage/{id}',
  discordMessageToggleActive = '/DiscordMessage/{id}/ToggleActive',
  discordPoll = '/DiscordPoll',
  discordPoll2 = '/DiscordPoll/{id}',
  discordPollToggleActive = '/DiscordPoll/{id}/ToggleActive',
  discordSupportTicket = '/DiscordSupportTicket/{id}',
  discordSupportTicketClose = '/DiscordSupportTicket/{id}/Close',
  discordSupportTicketPublic = '/DiscordSupportTicket/{id}/Public',
  discordSupportTicketSettings = '/DiscordSupportTicketSettings/{id}',
  discordThreadChannel = '/DiscordThreadChannel',
  discordThreadChannel2 = '/DiscordThreadChannel/{id}',
  discordThreadChannelToggleActive = '/DiscordThreadChannel/{id}/ToggleActive',
  discordTrackedMessage = '/DiscordTrackedMessage/{id}',
  discordTrackedMessageActive = '/DiscordTrackedMessage/{id}/Active',
  keyValueCategory = '/KeyValueCategory',
  keyValueCategory2 = '/KeyValueCategory/{id}',
  authenticationLogout = '/Logout',
  authenticationRefreshToken = '/RefreshToken',
  twitchEventSubscription = '/TwitchEventSubscription',
  user = '/User',
  userDiscordUser = '/User/DiscordUser',
  userGuilds = '/User/Guilds',
  userProfile = '/User/Profile',
  userUpdatePassword = '/User/UpdatePassword',
  userVerify = '/User/Verify',
  webhook = '/Webhook/AzureDevops',
  webhookDiscordInteraction = '/Webhook/DiscordInteraction',
  webhookHandleCoinbaseWebhook = '/Webhook/HandleCoinbaseWebhook',
  webhookTwitchLiveNotification = '/Webhook/TwitchLiveNotification',
}
export interface IEndpoints {
  readonly authentication: string;
  readonly discordCommand: string;
  readonly discordCommandTest: string;
  readonly discordCommand2: string;
  readonly discord: string;
  readonly discordRefreshToken: string;
  readonly discordAutoResponder: string;
  readonly discordAutoResponder2: string;
  readonly discordAutoResponderToggleActive: string;
  readonly discordAutoroleContainer: string;
  readonly discordAutoroleContainer2: string;
  readonly discordAutoroleContainerToggleActive: string;
  readonly discordChannelBackup: string;
  readonly discordChannelBackup2: string;
  readonly discordChannelCleaner: string;
  readonly discordChannelCleanerClean: string;
  readonly discordChannelCleaner2: string;
  readonly discordChannelCleanerClean: string;
  readonly discordForm: string;
  readonly discordForm2: string;
  readonly discordGiveaway: string;
  readonly discordGiveaway2: string;
  readonly discordGiveawayToggleActive: string;
  readonly discordGuild: string;
  readonly discordGuildPopulateNames: string;
  readonly discordGuild2: string;
  readonly discordGuildActivateCustomBot: string;
  readonly discordGuildApiKeys: string;
  readonly discordGuildAuditLogs: string;
  readonly discordGuildAuthorizedUsers: string;
  readonly discordGuildAutoResponders: string;
  readonly discordGuildAutoRoleContainers: string;
  readonly discordGuildAutoRoles: string;
  readonly discordGuildSendMessage: string;
  readonly discordGuildChannels: string;
  readonly discordGuildCommands: string;
  readonly discordGuildDiscordChannelBackups: string;
  readonly discordGuildDiscordChannelCleaners: string;
  readonly discordGuildToggleActive: string;
  readonly discordGuild2: string;
  readonly discordGuildDiscordPolls: string;
  readonly discordGuildDiscordReviews: string;
  readonly discordGuildDiscordThreadChannels: string;
  readonly discordGuildGiveaways: string;
  readonly discordGuildGlobalSettings: string;
  readonly discordGuildGuildUserInvites: string;
  readonly discordGuildImportTemplate: string;
  readonly discordGuildInvites: string;
  readonly discordGuildInviteSettings: string;
  readonly discordGuildKeyValueCategories: string;
  readonly discordGuildRequiresLogin: string;
  readonly discordGuildMessages: string;
  readonly discordGuildReviewSettings: string;
  readonly discordGuildSetAuditLogChannel: string;
  readonly discordGuildSetFeatures: string;
  readonly discordGuildSetup: string;
  readonly discordGuildSupportMessages: string;
  readonly discordGuildSupportTicketPanels: string;
  readonly discordGuildSupportTickets: string;
  readonly discordGuildSubmissions: string;
  readonly discordGuild2: string;
  readonly discordGuildTrackedMessages: string;
  readonly discordGuild2: string;
  readonly discordGuildTwitchEventSubscriptions: string;
  readonly discordGuild2: string;
  readonly discordGuildUsers: string;
  readonly discordGuild2: string;
  readonly discordGuildWelcomeMessages: string;
  readonly discordGuild2: string;
  readonly discordMessage: string;
  readonly discordMessage2: string;
  readonly discordMessageToggleActive: string;
  readonly discordPoll: string;
  readonly discordPoll2: string;
  readonly discordPollToggleActive: string;
  readonly discordSupportTicket: string;
  readonly discordSupportTicketClose: string;
  readonly discordSupportTicketPublic: string;
  readonly discordSupportTicketSettings: string;
  readonly discordThreadChannel: string;
  readonly discordThreadChannel2: string;
  readonly discordThreadChannelToggleActive: string;
  readonly discordTrackedMessage: string;
  readonly discordTrackedMessageActive: string;
  readonly keyValueCategory: string;
  readonly keyValueCategory2: string;
  readonly authenticationLogout: string;
  readonly authenticationRefreshToken: string;
  readonly twitchEventSubscription: string;
  readonly user: string;
  readonly userDiscordUser: string;
  readonly userGuilds: string;
  readonly userProfile: string;
  readonly userUpdatePassword: string;
  readonly userVerify: string;
  readonly webhook: string;
  readonly webhookDiscordInteraction: string;
  readonly webhookHandleCoinbaseWebhook: string;
  readonly webhookTwitchLiveNotification: string;
}
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: index.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #index.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export * from './cowbot-server-api-controllers-test-object.form-group-fac';
export * from './cowbot-server-api-controllers-test-object.form';
export * from './cowbot-server-api-controllers-test-object.model';
export * from './cowbot-server-api-controllers-test-object.properties';
export * from './cowbot-server-api-controllers-test-object.test-obj-fac';
export * from './cowbot-server-models-database-models-audit-log-action.enum';
export * from './cowbot-server-models-database-models-audit-log-feature.enum';
export * from './cowbot-server-models-database-models-audit-log.form-group-fac';
export * from './cowbot-server-models-database-models-audit-log.form';
export * from './cowbot-server-models-database-models-audit-log.model';
export * from './cowbot-server-models-database-models-audit-log.properties';
export * from './cowbot-server-models-database-models-audit-log.test-obj-fac';
export * from './cowbot-server-models-database-models-authorized-invite-sender-roles.form-group-fac';
export * from './cowbot-server-models-database-models-authorized-invite-sender-roles.form';
export * from './cowbot-server-models-database-models-authorized-invite-sender-roles.model';
export * from './cowbot-server-models-database-models-authorized-invite-sender-roles.properties';
export * from './cowbot-server-models-database-models-authorized-invite-sender-roles.test-obj-fac';
export * from './cowbot-server-models-database-models-authorized-invite-sender.form-group-fac';
export * from './cowbot-server-models-database-models-authorized-invite-sender.form';
export * from './cowbot-server-models-database-models-authorized-invite-sender.model';
export * from './cowbot-server-models-database-models-authorized-invite-sender.properties';
export * from './cowbot-server-models-database-models-authorized-invite-sender.test-obj-fac';
export * from './cowbot-server-models-database-models-backup-topics.enum';
export * from './cowbot-server-models-database-models-betsy-premium-role.enum';
export * from './cowbot-server-models-database-models-discord-author.form-group-fac';
export * from './cowbot-server-models-database-models-discord-author.form';
export * from './cowbot-server-models-database-models-discord-author.model';
export * from './cowbot-server-models-database-models-discord-author.properties';
export * from './cowbot-server-models-database-models-discord-author.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-auto-responder-phrase.form-group-fac';
export * from './cowbot-server-models-database-models-discord-auto-responder-phrase.form';
export * from './cowbot-server-models-database-models-discord-auto-responder-phrase.model';
export * from './cowbot-server-models-database-models-discord-auto-responder-phrase.properties';
export * from './cowbot-server-models-database-models-discord-auto-responder-phrase.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-auto-responder.form-group-fac';
export * from './cowbot-server-models-database-models-discord-auto-responder.form';
export * from './cowbot-server-models-database-models-discord-auto-responder.model';
export * from './cowbot-server-models-database-models-discord-auto-responder.properties';
export * from './cowbot-server-models-database-models-discord-auto-responder.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-auto-roles.form-group-fac';
export * from './cowbot-server-models-database-models-discord-auto-roles.form';
export * from './cowbot-server-models-database-models-discord-auto-roles.model';
export * from './cowbot-server-models-database-models-discord-auto-roles.properties';
export * from './cowbot-server-models-database-models-discord-auto-roles.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-button-style.enum';
export * from './cowbot-server-models-database-models-discord-channel-backup.form-group-fac';
export * from './cowbot-server-models-database-models-discord-channel-backup.form';
export * from './cowbot-server-models-database-models-discord-channel-backup.model';
export * from './cowbot-server-models-database-models-discord-channel-backup.properties';
export * from './cowbot-server-models-database-models-discord-channel-backup.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-channel-cleaner.form-group-fac';
export * from './cowbot-server-models-database-models-discord-channel-cleaner.form';
export * from './cowbot-server-models-database-models-discord-channel-cleaner.model';
export * from './cowbot-server-models-database-models-discord-channel-cleaner.properties';
export * from './cowbot-server-models-database-models-discord-channel-cleaner.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-channel-message.form-group-fac';
export * from './cowbot-server-models-database-models-discord-channel-message.form';
export * from './cowbot-server-models-database-models-discord-channel-message.model';
export * from './cowbot-server-models-database-models-discord-channel-message.properties';
export * from './cowbot-server-models-database-models-discord-channel-message.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-channel-transcript.form-group-fac';
export * from './cowbot-server-models-database-models-discord-channel-transcript.form';
export * from './cowbot-server-models-database-models-discord-channel-transcript.model';
export * from './cowbot-server-models-database-models-discord-channel-transcript.properties';
export * from './cowbot-server-models-database-models-discord-channel-transcript.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-command-action-default-request-data.form-group-fac';
export * from './cowbot-server-models-database-models-discord-command-action-default-request-data.form';
export * from './cowbot-server-models-database-models-discord-command-action-default-request-data.model';
export * from './cowbot-server-models-database-models-discord-command-action-default-request-data.properties';
export * from './cowbot-server-models-database-models-discord-command-action-default-request-data.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-command-action-request-header.form-group-fac';
export * from './cowbot-server-models-database-models-discord-command-action-request-header.form';
export * from './cowbot-server-models-database-models-discord-command-action-request-header.model';
export * from './cowbot-server-models-database-models-discord-command-action-request-header.properties';
export * from './cowbot-server-models-database-models-discord-command-action-request-header.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-command-action-request-metadata.form-group-fac';
export * from './cowbot-server-models-database-models-discord-command-action-request-metadata.form';
export * from './cowbot-server-models-database-models-discord-command-action-request-metadata.model';
export * from './cowbot-server-models-database-models-discord-command-action-request-metadata.properties';
export * from './cowbot-server-models-database-models-discord-command-action-request-metadata.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-command-action.form-group-fac';
export * from './cowbot-server-models-database-models-discord-command-action.form';
export * from './cowbot-server-models-database-models-discord-command-action.model';
export * from './cowbot-server-models-database-models-discord-command-action.properties';
export * from './cowbot-server-models-database-models-discord-command-action.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-command.form-group-fac';
export * from './cowbot-server-models-database-models-discord-command.form';
export * from './cowbot-server-models-database-models-discord-command.model';
export * from './cowbot-server-models-database-models-discord-command.properties';
export * from './cowbot-server-models-database-models-discord-command.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-component-type.enum';
export * from './cowbot-server-models-database-models-discord-component-wrapper.form-group-fac';
export * from './cowbot-server-models-database-models-discord-component-wrapper.form';
export * from './cowbot-server-models-database-models-discord-component-wrapper.model';
export * from './cowbot-server-models-database-models-discord-component-wrapper.properties';
export * from './cowbot-server-models-database-models-discord-component-wrapper.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-component.form-group-fac';
export * from './cowbot-server-models-database-models-discord-component.form';
export * from './cowbot-server-models-database-models-discord-component.model';
export * from './cowbot-server-models-database-models-discord-component.properties';
export * from './cowbot-server-models-database-models-discord-component.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-embed-field.form-group-fac';
export * from './cowbot-server-models-database-models-discord-embed-field.form';
export * from './cowbot-server-models-database-models-discord-embed-field.model';
export * from './cowbot-server-models-database-models-discord-embed-field.properties';
export * from './cowbot-server-models-database-models-discord-embed-field.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-embed-footer.form-group-fac';
export * from './cowbot-server-models-database-models-discord-embed-footer.form';
export * from './cowbot-server-models-database-models-discord-embed-footer.model';
export * from './cowbot-server-models-database-models-discord-embed-footer.properties';
export * from './cowbot-server-models-database-models-discord-embed-footer.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-embed-image.form-group-fac';
export * from './cowbot-server-models-database-models-discord-embed-image.form';
export * from './cowbot-server-models-database-models-discord-embed-image.model';
export * from './cowbot-server-models-database-models-discord-embed-image.properties';
export * from './cowbot-server-models-database-models-discord-embed-image.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-embed-video.form-group-fac';
export * from './cowbot-server-models-database-models-discord-embed-video.form';
export * from './cowbot-server-models-database-models-discord-embed-video.model';
export * from './cowbot-server-models-database-models-discord-embed-video.properties';
export * from './cowbot-server-models-database-models-discord-embed-video.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-embed.form-group-fac';
export * from './cowbot-server-models-database-models-discord-embed.form';
export * from './cowbot-server-models-database-models-discord-embed.model';
export * from './cowbot-server-models-database-models-discord-embed.properties';
export * from './cowbot-server-models-database-models-discord-embed.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-emoji.form-group-fac';
export * from './cowbot-server-models-database-models-discord-emoji.form';
export * from './cowbot-server-models-database-models-discord-emoji.model';
export * from './cowbot-server-models-database-models-discord-emoji.properties';
export * from './cowbot-server-models-database-models-discord-emoji.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-form-data.form-group-fac';
export * from './cowbot-server-models-database-models-discord-form-data.form';
export * from './cowbot-server-models-database-models-discord-form-data.model';
export * from './cowbot-server-models-database-models-discord-form-data.properties';
export * from './cowbot-server-models-database-models-discord-form-data.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-form-field-answer.form-group-fac';
export * from './cowbot-server-models-database-models-discord-form-field-answer.form';
export * from './cowbot-server-models-database-models-discord-form-field-answer.model';
export * from './cowbot-server-models-database-models-discord-form-field-answer.properties';
export * from './cowbot-server-models-database-models-discord-form-field-answer.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-form-field-answers.form-group-fac';
export * from './cowbot-server-models-database-models-discord-form-field-answers.form';
export * from './cowbot-server-models-database-models-discord-form-field-answers.model';
export * from './cowbot-server-models-database-models-discord-form-field-answers.properties';
export * from './cowbot-server-models-database-models-discord-form-field-answers.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-form-submission.form-group-fac';
export * from './cowbot-server-models-database-models-discord-form-submission.form';
export * from './cowbot-server-models-database-models-discord-form-submission.model';
export * from './cowbot-server-models-database-models-discord-form-submission.properties';
export * from './cowbot-server-models-database-models-discord-form-submission.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-form.form-group-fac';
export * from './cowbot-server-models-database-models-discord-form.form';
export * from './cowbot-server-models-database-models-discord-form.model';
export * from './cowbot-server-models-database-models-discord-form.properties';
export * from './cowbot-server-models-database-models-discord-form.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-giveaway-participant.form-group-fac';
export * from './cowbot-server-models-database-models-discord-giveaway-participant.form';
export * from './cowbot-server-models-database-models-discord-giveaway-participant.model';
export * from './cowbot-server-models-database-models-discord-giveaway-participant.properties';
export * from './cowbot-server-models-database-models-discord-giveaway-participant.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-giveaway-role.form-group-fac';
export * from './cowbot-server-models-database-models-discord-giveaway-role.form';
export * from './cowbot-server-models-database-models-discord-giveaway-role.model';
export * from './cowbot-server-models-database-models-discord-giveaway-role.properties';
export * from './cowbot-server-models-database-models-discord-giveaway-role.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-giveaway.form-group-fac';
export * from './cowbot-server-models-database-models-discord-giveaway.form';
export * from './cowbot-server-models-database-models-discord-giveaway.model';
export * from './cowbot-server-models-database-models-discord-giveaway.properties';
export * from './cowbot-server-models-database-models-discord-giveaway.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-guild-user-invite.form-group-fac';
export * from './cowbot-server-models-database-models-discord-guild-user-invite.form';
export * from './cowbot-server-models-database-models-discord-guild-user-invite.model';
export * from './cowbot-server-models-database-models-discord-guild-user-invite.properties';
export * from './cowbot-server-models-database-models-discord-guild-user-invite.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-guild-user.form-group-fac';
export * from './cowbot-server-models-database-models-discord-guild-user.form';
export * from './cowbot-server-models-database-models-discord-guild-user.model';
export * from './cowbot-server-models-database-models-discord-guild-user.properties';
export * from './cowbot-server-models-database-models-discord-guild-user.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-invite-link.form-group-fac';
export * from './cowbot-server-models-database-models-discord-invite-link.form';
export * from './cowbot-server-models-database-models-discord-invite-link.model';
export * from './cowbot-server-models-database-models-discord-invite-link.properties';
export * from './cowbot-server-models-database-models-discord-invite-link.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-menu-option.form-group-fac';
export * from './cowbot-server-models-database-models-discord-menu-option.form';
export * from './cowbot-server-models-database-models-discord-menu-option.model';
export * from './cowbot-server-models-database-models-discord-menu-option.properties';
export * from './cowbot-server-models-database-models-discord-menu-option.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-message-attachment.form-group-fac';
export * from './cowbot-server-models-database-models-discord-message-attachment.form';
export * from './cowbot-server-models-database-models-discord-message-attachment.model';
export * from './cowbot-server-models-database-models-discord-message-attachment.properties';
export * from './cowbot-server-models-database-models-discord-message-attachment.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-message-flags.enum';
export * from './cowbot-server-models-database-models-discord-message-reference.form-group-fac';
export * from './cowbot-server-models-database-models-discord-message-reference.form';
export * from './cowbot-server-models-database-models-discord-message-reference.model';
export * from './cowbot-server-models-database-models-discord-message-reference.properties';
export * from './cowbot-server-models-database-models-discord-message-reference.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-message.form-group-fac';
export * from './cowbot-server-models-database-models-discord-message.form';
export * from './cowbot-server-models-database-models-discord-message.model';
export * from './cowbot-server-models-database-models-discord-message.properties';
export * from './cowbot-server-models-database-models-discord-message.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-poll-participant.form-group-fac';
export * from './cowbot-server-models-database-models-discord-poll-participant.form';
export * from './cowbot-server-models-database-models-discord-poll-participant.model';
export * from './cowbot-server-models-database-models-discord-poll-participant.properties';
export * from './cowbot-server-models-database-models-discord-poll-participant.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-poll.form-group-fac';
export * from './cowbot-server-models-database-models-discord-poll.form';
export * from './cowbot-server-models-database-models-discord-poll.model';
export * from './cowbot-server-models-database-models-discord-poll.properties';
export * from './cowbot-server-models-database-models-discord-poll.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-review-category.form-group-fac';
export * from './cowbot-server-models-database-models-discord-review-category.form';
export * from './cowbot-server-models-database-models-discord-review-category.model';
export * from './cowbot-server-models-database-models-discord-review-category.properties';
export * from './cowbot-server-models-database-models-discord-review-category.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-review-type.enum';
export * from './cowbot-server-models-database-models-discord-review.form-group-fac';
export * from './cowbot-server-models-database-models-discord-review.form';
export * from './cowbot-server-models-database-models-discord-review.model';
export * from './cowbot-server-models-database-models-discord-review.properties';
export * from './cowbot-server-models-database-models-discord-review.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-role-selector.form-group-fac';
export * from './cowbot-server-models-database-models-discord-role-selector.form';
export * from './cowbot-server-models-database-models-discord-role-selector.model';
export * from './cowbot-server-models-database-models-discord-role-selector.properties';
export * from './cowbot-server-models-database-models-discord-role-selector.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-role.form-group-fac';
export * from './cowbot-server-models-database-models-discord-role.form';
export * from './cowbot-server-models-database-models-discord-role.model';
export * from './cowbot-server-models-database-models-discord-role.properties';
export * from './cowbot-server-models-database-models-discord-role.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server-global-settings.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server-global-settings.form';
export * from './cowbot-server-models-database-models-discord-server-global-settings.model';
export * from './cowbot-server-models-database-models-discord-server-global-settings.properties';
export * from './cowbot-server-models-database-models-discord-server-global-settings.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server-invite-role.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server-invite-role.form';
export * from './cowbot-server-models-database-models-discord-server-invite-role.model';
export * from './cowbot-server-models-database-models-discord-server-invite-role.properties';
export * from './cowbot-server-models-database-models-discord-server-invite-role.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server-invite-settings.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server-invite-settings.form';
export * from './cowbot-server-models-database-models-discord-server-invite-settings.model';
export * from './cowbot-server-models-database-models-discord-server-invite-settings.properties';
export * from './cowbot-server-models-database-models-discord-server-invite-settings.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server-review-settings.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server-review-settings.form';
export * from './cowbot-server-models-database-models-discord-server-review-settings.model';
export * from './cowbot-server-models-database-models-discord-server-review-settings.properties';
export * from './cowbot-server-models-database-models-discord-server-review-settings.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server-status.enum';
export * from './cowbot-server-models-database-models-discord-server-verification-settings.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server-verification-settings.form';
export * from './cowbot-server-models-database-models-discord-server-verification-settings.model';
export * from './cowbot-server-models-database-models-discord-server-verification-settings.properties';
export * from './cowbot-server-models-database-models-discord-server-verification-settings.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-server.form-group-fac';
export * from './cowbot-server-models-database-models-discord-server.form';
export * from './cowbot-server-models-database-models-discord-server.model';
export * from './cowbot-server-models-database-models-discord-server.properties';
export * from './cowbot-server-models-database-models-discord-server.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-support-ticket-settings.form-group-fac';
export * from './cowbot-server-models-database-models-discord-support-ticket-settings.form';
export * from './cowbot-server-models-database-models-discord-support-ticket-settings.model';
export * from './cowbot-server-models-database-models-discord-support-ticket-settings.properties';
export * from './cowbot-server-models-database-models-discord-support-ticket-settings.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-support-ticket.form-group-fac';
export * from './cowbot-server-models-database-models-discord-support-ticket.form';
export * from './cowbot-server-models-database-models-discord-support-ticket.model';
export * from './cowbot-server-models-database-models-discord-support-ticket.properties';
export * from './cowbot-server-models-database-models-discord-support-ticket.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-thread-channel.form-group-fac';
export * from './cowbot-server-models-database-models-discord-thread-channel.form';
export * from './cowbot-server-models-database-models-discord-thread-channel.model';
export * from './cowbot-server-models-database-models-discord-thread-channel.properties';
export * from './cowbot-server-models-database-models-discord-thread-channel.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-thumbnail-image.form-group-fac';
export * from './cowbot-server-models-database-models-discord-thumbnail-image.form';
export * from './cowbot-server-models-database-models-discord-thumbnail-image.model';
export * from './cowbot-server-models-database-models-discord-thumbnail-image.properties';
export * from './cowbot-server-models-database-models-discord-thumbnail-image.test-obj-fac';
export * from './cowbot-server-models-database-models-discord-tracked-message.form-group-fac';
export * from './cowbot-server-models-database-models-discord-tracked-message.form';
export * from './cowbot-server-models-database-models-discord-tracked-message.model';
export * from './cowbot-server-models-database-models-discord-tracked-message.properties';
export * from './cowbot-server-models-database-models-discord-tracked-message.test-obj-fac';
export * from './cowbot-server-models-database-models-ip-information.form-group-fac';
export * from './cowbot-server-models-database-models-ip-information.form';
export * from './cowbot-server-models-database-models-ip-information.model';
export * from './cowbot-server-models-database-models-ip-information.properties';
export * from './cowbot-server-models-database-models-ip-information.test-obj-fac';
export * from './cowbot-server-models-database-models-key-value-category.form-group-fac';
export * from './cowbot-server-models-database-models-key-value-category.form';
export * from './cowbot-server-models-database-models-key-value-category.model';
export * from './cowbot-server-models-database-models-key-value-category.properties';
export * from './cowbot-server-models-database-models-key-value-category.test-obj-fac';
export * from './cowbot-server-models-database-models-key-value-storage.form-group-fac';
export * from './cowbot-server-models-database-models-key-value-storage.form';
export * from './cowbot-server-models-database-models-key-value-storage.model';
export * from './cowbot-server-models-database-models-key-value-storage.properties';
export * from './cowbot-server-models-database-models-key-value-storage.test-obj-fac';
export * from './cowbot-server-models-database-models-message-data.form-group-fac';
export * from './cowbot-server-models-database-models-message-data.form';
export * from './cowbot-server-models-database-models-message-data.model';
export * from './cowbot-server-models-database-models-message-data.properties';
export * from './cowbot-server-models-database-models-message-data.test-obj-fac';
export * from './cowbot-server-models-database-models-rest-request-response-mapping.form-group-fac';
export * from './cowbot-server-models-database-models-rest-request-response-mapping.form';
export * from './cowbot-server-models-database-models-rest-request-response-mapping.model';
export * from './cowbot-server-models-database-models-rest-request-response-mapping.properties';
export * from './cowbot-server-models-database-models-rest-request-response-mapping.test-obj-fac';
export * from './cowbot-server-models-database-models-support-ticket-audits.enum';
export * from './cowbot-server-models-database-models-support-ticket-role-options.form-group-fac';
export * from './cowbot-server-models-database-models-support-ticket-role-options.form';
export * from './cowbot-server-models-database-models-support-ticket-role-options.model';
export * from './cowbot-server-models-database-models-support-ticket-role-options.properties';
export * from './cowbot-server-models-database-models-support-ticket-role-options.test-obj-fac';
export * from './cowbot-server-models-database-models-support-ticket-settings-text-options.form-group-fac';
export * from './cowbot-server-models-database-models-support-ticket-settings-text-options.form';
export * from './cowbot-server-models-database-models-support-ticket-settings-text-options.model';
export * from './cowbot-server-models-database-models-support-ticket-settings-text-options.properties';
export * from './cowbot-server-models-database-models-support-ticket-settings-text-options.test-obj-fac';
export * from './cowbot-server-models-database-models-user.form-group-fac';
export * from './cowbot-server-models-database-models-user.form';
export * from './cowbot-server-models-database-models-user.model';
export * from './cowbot-server-models-database-models-user.properties';
export * from './cowbot-server-models-database-models-user.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-link-href.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-user.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-detailed-message.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-links.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-message.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource-definition.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook-resource.test-obj-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form-group-fac';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.form';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.model';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.properties';
export * from './cowbot-server-models-dt-os-azure-devops-api-request-azure-devops-webhook.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.form';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.model';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.properties';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option-choice.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.form';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.model';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.properties';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command-option.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.form';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.model';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.properties';
export * from './cowbot-server-models-dt-os-discord-api-models-application-commands-discord-application-command.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.form';
export * from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.model';
export * from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.properties';
export * from './cowbot-server-models-dt-os-discord-api-models-o-auth-access-token-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.form';
export * from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.model';
export * from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.properties';
export * from './cowbot-server-models-dt-os-discord-command-action-base-discord-command-action.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-command-base-discord-command.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-command-base-discord-command.form';
export * from './cowbot-server-models-dt-os-discord-command-base-discord-command.model';
export * from './cowbot-server-models-dt-os-discord-command-base-discord-command.properties';
export * from './cowbot-server-models-dt-os-discord-command-base-discord-command.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.form';
export * from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.model';
export * from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.properties';
export * from './cowbot-server-models-dt-os-discord-command-request-create-discord-command-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.form';
export * from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.model';
export * from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.properties';
export * from './cowbot-server-models-dt-os-discord-command-request-toggle-discord-command-active-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.form';
export * from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.model';
export * from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.properties';
export * from './cowbot-server-models-dt-os-discord-command-request-update-discord-command-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-form-base-discord-form.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-form-base-discord-form.form';
export * from './cowbot-server-models-dt-os-discord-form-base-discord-form.model';
export * from './cowbot-server-models-dt-os-discord-form-base-discord-form.properties';
export * from './cowbot-server-models-dt-os-discord-form-base-discord-form.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.form';
export * from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.model';
export * from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.properties';
export * from './cowbot-server-models-dt-os-discord-form-request-create-discord-form-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.form';
export * from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.model';
export * from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.properties';
export * from './cowbot-server-models-dt-os-discord-form-request-update-discord-form-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.form';
export * from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.model';
export * from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.properties';
export * from './cowbot-server-models-dt-os-discord-form-response-discord-form-with-submission-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.form';
export * from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.model';
export * from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.properties';
export * from './cowbot-server-models-dt-os-discord-guild-user-response-discord-guild-user-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-message-base-discord-message.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-message-base-discord-message.form';
export * from './cowbot-server-models-dt-os-discord-message-base-discord-message.model';
export * from './cowbot-server-models-dt-os-discord-message-base-discord-message.properties';
export * from './cowbot-server-models-dt-os-discord-message-base-discord-message.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.form';
export * from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.model';
export * from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.properties';
export * from './cowbot-server-models-dt-os-discord-message-request-create-discord-message-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.form';
export * from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.model';
export * from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.properties';
export * from './cowbot-server-models-dt-os-discord-message-request-send-discord-message-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.form';
export * from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.model';
export * from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.properties';
export * from './cowbot-server-models-dt-os-discord-message-request-toggle-discord-message-active-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-request-exchange-code-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-request-exchange-code-request.form';
export * from './cowbot-server-models-dt-os-discord-request-exchange-code-request.model';
export * from './cowbot-server-models-dt-os-discord-request-exchange-code-request.properties';
export * from './cowbot-server-models-dt-os-discord-request-exchange-code-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-request-refresh-token-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-request-refresh-token-request.form';
export * from './cowbot-server-models-dt-os-discord-request-refresh-token-request.model';
export * from './cowbot-server-models-dt-os-discord-request-refresh-token-request.properties';
export * from './cowbot-server-models-dt-os-discord-request-refresh-token-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-response-discord-ping-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-response-discord-ping-response.form';
export * from './cowbot-server-models-dt-os-discord-response-discord-ping-response.model';
export * from './cowbot-server-models-dt-os-discord-response-discord-ping-response.properties';
export * from './cowbot-server-models-dt-os-discord-response-discord-ping-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-base-discord-server.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-base-discord-server.form';
export * from './cowbot-server-models-dt-os-discord-server-base-discord-server.model';
export * from './cowbot-server-models-dt-os-discord-server-base-discord-server.properties';
export * from './cowbot-server-models-dt-os-discord-server-base-discord-server.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.form';
export * from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.model';
export * from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.properties';
export * from './cowbot-server-models-dt-os-discord-server-request-create-discord-server-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.form';
export * from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.model';
export * from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.properties';
export * from './cowbot-server-models-dt-os-discord-server-request-setup-twitch-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.form';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.model';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.properties';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-custom-bot-active-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.form';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.model';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.properties';
export * from './cowbot-server-models-dt-os-discord-server-request-toggle-discord-server-feature-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.form';
export * from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.model';
export * from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.properties';
export * from './cowbot-server-models-dt-os-discord-server-request-update-discord-server-audit-log-channel-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.form';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.model';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.properties';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-action-import-json.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.form';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.model';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.properties';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-command-import-json.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.form';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.model';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.properties';
export * from './cowbot-server-models-dt-os-discord-server-response-discord-form-import-json.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.form';
export * from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.model';
export * from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.properties';
export * from './cowbot-server-models-dt-os-discord-server-response-generate-import-json-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.form';
export * from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.model';
export * from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.properties';
export * from './cowbot-server-models-dt-os-discord-server-response-message-template-import-json.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.form';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.model';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.properties';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-request-create-discord-support-settings-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.form';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.model';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.properties';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-base-discord-support-settings-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.form';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.model';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.properties';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-message.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.form';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.model';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.properties';
export * from './cowbot-server-models-dt-os-discord-support-ticket-settings-response-list-discord-support-settings-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form-group-fac';
export * from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.form';
export * from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.model';
export * from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.properties';
export * from './cowbot-server-models-dt-os-discord-tracked-message-response-tracked-message-list-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-error-error-reason.enum';
export * from './cowbot-server-models-dt-os-error-response-error-response.form-group-fac';
export * from './cowbot-server-models-dt-os-error-response-error-response.form';
export * from './cowbot-server-models-dt-os-error-response-error-response.model';
export * from './cowbot-server-models-dt-os-error-response-error-response.properties';
export * from './cowbot-server-models-dt-os-error-response-error-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-shared-betsy-bot-feature.enum';
export * from './cowbot-server-models-dt-os-shared-discord-application-command-option-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-application-command-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-auto-responder-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-autorole-container-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-channel-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-command-action-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-command-type.enum';
export * from './cowbot-server-models-dt-os-shared-discord-message-type.enum';
export * from './cowbot-server-models-dt-os-user-request-register-user-dto.form-group-fac';
export * from './cowbot-server-models-dt-os-user-request-register-user-dto.form';
export * from './cowbot-server-models-dt-os-user-request-register-user-dto.model';
export * from './cowbot-server-models-dt-os-user-request-register-user-dto.properties';
export * from './cowbot-server-models-dt-os-user-request-register-user-dto.test-obj-fac';
export * from './cowbot-server-models-dt-os-user-request-update-password-request.form-group-fac';
export * from './cowbot-server-models-dt-os-user-request-update-password-request.form';
export * from './cowbot-server-models-dt-os-user-request-update-password-request.model';
export * from './cowbot-server-models-dt-os-user-request-update-password-request.properties';
export * from './cowbot-server-models-dt-os-user-request-update-password-request.test-obj-fac';
export * from './cowbot-server-models-dt-os-user-response-login-response.form-group-fac';
export * from './cowbot-server-models-dt-os-user-response-login-response.form';
export * from './cowbot-server-models-dt-os-user-response-login-response.model';
export * from './cowbot-server-models-dt-os-user-response-login-response.properties';
export * from './cowbot-server-models-dt-os-user-response-login-response.test-obj-fac';
export * from './cowbot-server-models-dt-os-user-response-profile-response.form-group-fac';
export * from './cowbot-server-models-dt-os-user-response-profile-response.form';
export * from './cowbot-server-models-dt-os-user-response-profile-response.model';
export * from './cowbot-server-models-dt-os-user-response-profile-response.properties';
export * from './cowbot-server-models-dt-os-user-response-profile-response.test-obj-fac';
export * from './cowbot-server-models-ip-quality-score-models-email-quality-response.form-group-fac';
export * from './cowbot-server-models-ip-quality-score-models-email-quality-response.form';
export * from './cowbot-server-models-ip-quality-score-models-email-quality-response.model';
export * from './cowbot-server-models-ip-quality-score-models-email-quality-response.properties';
export * from './cowbot-server-models-ip-quality-score-models-email-quality-response.test-obj-fac';
export * from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form-group-fac';
export * from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.form';
export * from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.model';
export * from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.properties';
export * from './cowbot-server-models-ip-quality-score-models-ip-quality-date-response.test-obj-fac';
export * from './system-io-file.model';
"
`;

exports[`Url Based - Full Integration Tests Sample BetsyBot Service should generate files: system-io-file.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ISystem.IO.File {
}
"
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files 1`] = `
Array [
  "customer-address.form-group-fac.ts",
  "customer-address.model.ts",
  "customer-address.properties.ts",
  "customer.form-group-fac.ts",
  "customer.model.ts",
  "customer.properties.ts",
  "endpoints.ts",
  "index.ts",
  "order-address.form-group-fac.ts",
  "order-address.model.ts",
  "order-address.properties.ts",
  "order-line-item.form-group-fac.ts",
  "order-line-item.model.ts",
  "order-line-item.properties.ts",
  "order-status-types.enum.ts",
  "order.form-group-fac.ts",
  "order.model.ts",
  "order.properties.ts",
  "product-category.form-group-fac.ts",
  "product-category.model.ts",
  "product-category.properties.ts",
  "product-model.form-group-fac.ts",
  "product-model.model.ts",
  "product-model.properties.ts",
  "product.form-group-fac.ts",
  "product.model.ts",
  "product.properties.ts",
  "sales-agent.form-group-fac.ts",
  "sales-agent.model.ts",
  "sales-agent.properties.ts",
  "shipping-types.enum.ts",
]
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ISalesAgent } from './sales-agent.model'; //NOSONAR
import { ICustomerAddress } from './customer-address.model'; //NOSONAR
import { IOrder } from './order.model'; //NOSONAR

export function CustomerFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    num: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(10), Validators.maxLength(15)]), nonNullable: true }),
    name: new FormControl<string | null>(null, { validators: Validators.maxLength(512) } ),
    companyName: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(128)]), nonNullable: true }),
    salesAgentId: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    emailAddress: new FormControl<string | null>(null, { validators: Validators.maxLength(250) } ),
    phone: new FormControl<string | null>(null, { validators: Validators.maxLength(25) } ),
    salesAgent: new FormControl<ISalesAgent | null>(null),
    customerAddresses: new FormArray([]),
    orders: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ISalesAgent } from './sales-agent.model';
import { ICustomerAddress } from './customer-address.model';
import { IOrder } from './order.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICustomer {
  id?: string;
  num?: string;
  name?: string;
  companyName?: string;
  salesAgentId?: number;
  emailAddress?: string;
  phone?: string;
  salesAgent?: ISalesAgent;
  customerAddresses?: ICustomerAddress[];
  orders?: IOrder[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum CustomerProperties {
  ID = 'id',
  NUM = 'num',
  NAME = 'name',
  COMPANY_NAME = 'companyName',
  SALES_AGENT_ID = 'salesAgentId',
  EMAIL_ADDRESS = 'emailAddress',
  PHONE = 'phone',
  SALES_AGENT = 'salesAgent',
  CUSTOMER_ADDRESSES = 'customerAddresses',
  ORDERS = 'orders',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer-address.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICustomer } from './customer.model'; //NOSONAR

export function CustomerAddressFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    customerId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    addressType: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    line1: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(60)]), nonNullable: true }),
    line2: new FormControl<string | null>(null, { validators: Validators.maxLength(60) } ),
    city: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(30)]), nonNullable: true }),
    stateProvince: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    countryRegion: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    postalCode: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(15)]), nonNullable: true }),
    customer: new FormControl<ICustomer | null>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer-address.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ICustomer } from './customer.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ICustomerAddress {
  id?: string;
  customerId?: string;
  addressType?: string;
  line1?: string;
  line2?: string;
  city?: string;
  stateProvince?: string;
  countryRegion?: string;
  postalCode?: string;
  customer?: ICustomer;
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: customer-address.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum CustomerAddressProperties {
  ID = 'id',
  CUSTOMER_ID = 'customerId',
  ADDRESS_TYPE = 'addressType',
  LINE_1 = 'line1',
  LINE_2 = 'line2',
  CITY = 'city',
  STATE_PROVINCE = 'stateProvince',
  COUNTRY_REGION = 'countryRegion',
  POSTAL_CODE = 'postalCode',
  CUSTOMER = 'customer',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: endpoints.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #endpoints-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Endpoints {
  customerAddresses = '/odata/v1/CustomerAddresses',
  customers = '/odata/v1/Customers',
  orderLineItems = '/odata/v1/OrderLineItems',
  orders = '/odata/v1/Orders',
  productCategories = '/odata/v1/ProductCategories',
  productModels = '/odata/v1/ProductModels',
  products = '/odata/v1/Products',
  salesAgents = '/odata/v1/SalesAgents',
}
export interface IEndpoints {
  readonly customerAddresses: string;
  readonly customers: string;
  readonly orderLineItems: string;
  readonly orders: string;
  readonly productCategories: string;
  readonly productModels: string;
  readonly products: string;
  readonly salesAgents: string;
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: index.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #generate-barrel-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export * from './customer-address.form-group-fac';
export * from './customer-address.model';
export * from './customer-address.properties';
export * from './customer.form-group-fac';
export * from './customer.model';
export * from './customer.properties';
export * from './order-address.form-group-fac';
export * from './order-address.model';
export * from './order-address.properties';
export * from './order-line-item.form-group-fac';
export * from './order-line-item.model';
export * from './order-line-item.properties';
export * from './order-status-types.enum';
export * from './order.form-group-fac';
export * from './order.model';
export * from './order.properties';
export * from './product-category.form-group-fac';
export * from './product-category.model';
export * from './product-category.properties';
export * from './product-model.form-group-fac';
export * from './product-model.model';
export * from './product-model.properties';
export * from './product.form-group-fac';
export * from './product.model';
export * from './product.properties';
export * from './sales-agent.form-group-fac';
export * from './sales-agent.model';
export * from './sales-agent.properties';
export * from './shipping-types.enum';
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { OrderStatusTypes } from './order-status-types.enum'; //NOSONAR
import { ShippingTypes } from './shipping-types.enum'; //NOSONAR
import { ICustomer } from './customer.model'; //NOSONAR
import { IOrderAddress } from './order-address.model'; //NOSONAR
import { IOrderLineItem } from './order-line-item.model'; //NOSONAR

export function OrderFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    orderId: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    revisionNum: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    date: new FormControl<Date>(new Date(), { validators: Validators.required, nonNullable: true } ),
    dueDate: new FormControl<Date>(new Date(), { validators: Validators.required, nonNullable: true } ),
    shipDate: new FormControl<Date | null>(null),
    isOnlineOrder: new FormControl<boolean>(false, { validators: Validators.required, nonNullable: true } ),
    num: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(25)]), nonNullable: true }),
    purchaseOrderNum: new FormControl<string | null>(null, { validators: Validators.maxLength(25) } ),
    customerId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    shipToAddressId: new FormControl<string | null>(null),
    billToAddressId: new FormControl<string | null>(null),
    creditCardApprovalCode: new FormControl<string | null>(null, { validators: Validators.maxLength(15) } ),
    subTotal: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    taxAmt: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    freight: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    totalDue: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    comment: new FormControl<string | null>(null, { validators: Validators.maxLength(500) } ),
    statusType: new FormControl<OrderStatusTypes>('', { validators: Validators.required, nonNullable: true } ),
    shippingType: new FormControl<ShippingTypes>('', { validators: Validators.required, nonNullable: true } ),
    customer: new FormControl<ICustomer | null>(null),
    shipToAddress: new FormControl<IOrderAddress | null>(null),
    billToAddress: new FormControl<IOrderAddress | null>(null),
    orderLineItems: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { OrderStatusTypes } from './order-status-types.enum';
import { ShippingTypes } from './shipping-types.enum';
import { ICustomer } from './customer.model';
import { IOrderAddress } from './order-address.model';
import { IOrderLineItem } from './order-line-item.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IOrder {
  id?: string;
  orderId?: number;
  revisionNum?: number;
  date?: Date;
  dueDate?: Date;
  shipDate?: Date;
  isOnlineOrder?: boolean;
  num?: string;
  purchaseOrderNum?: string;
  customerId?: string;
  shipToAddressId?: string;
  billToAddressId?: string;
  creditCardApprovalCode?: string;
  subTotal?: number;
  taxAmt?: number;
  freight?: number;
  totalDue?: number;
  comment?: string;
  statusType?: OrderStatusTypes;
  shippingType?: ShippingTypes;
  customer?: ICustomer;
  shipToAddress?: IOrderAddress;
  billToAddress?: IOrderAddress;
  orderLineItems?: IOrderLineItem[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum OrderProperties {
  ID = 'id',
  ORDER_ID = 'orderId',
  REVISION_NUM = 'revisionNum',
  DATE = 'date',
  DUE_DATE = 'dueDate',
  SHIP_DATE = 'shipDate',
  IS_ONLINE_ORDER = 'isOnlineOrder',
  NUM = 'num',
  PURCHASE_ORDER_NUM = 'purchaseOrderNum',
  CUSTOMER_ID = 'customerId',
  SHIP_TO_ADDRESS_ID = 'shipToAddressId',
  BILL_TO_ADDRESS_ID = 'billToAddressId',
  CREDIT_CARD_APPROVAL_CODE = 'creditCardApprovalCode',
  SUB_TOTAL = 'subTotal',
  TAX_AMT = 'taxAmt',
  FREIGHT = 'freight',
  TOTAL_DUE = 'totalDue',
  COMMENT = 'comment',
  STATUS_TYPE = 'statusType',
  SHIPPING_TYPE = 'shippingType',
  CUSTOMER = 'customer',
  SHIP_TO_ADDRESS = 'shipToAddress',
  BILL_TO_ADDRESS = 'billToAddress',
  ORDER_LINE_ITEMS = 'orderLineItems',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-address.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IOrder } from './order.model'; //NOSONAR

export function OrderAddressFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    line1: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(60)]), nonNullable: true }),
    line2: new FormControl<string | null>(null, { validators: Validators.maxLength(60) } ),
    city: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(100)]), nonNullable: true }),
    stateProvince: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    countryRegion: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    postalCode: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(15)]), nonNullable: true }),
    billToOrders: new FormArray([]),
    shipToOrders: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-address.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IOrder } from './order.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IOrderAddress {
  id?: string;
  line1?: string;
  line2?: string;
  city?: string;
  stateProvince?: string;
  countryRegion?: string;
  postalCode?: string;
  billToOrders?: IOrder[];
  shipToOrders?: IOrder[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-address.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum OrderAddressProperties {
  ID = 'id',
  LINE_1 = 'line1',
  LINE_2 = 'line2',
  CITY = 'city',
  STATE_PROVINCE = 'stateProvince',
  COUNTRY_REGION = 'countryRegion',
  POSTAL_CODE = 'postalCode',
  BILL_TO_ORDERS = 'billToOrders',
  SHIP_TO_ORDERS = 'shipToOrders',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-line-item.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IOrder } from './order.model'; //NOSONAR
import { IProduct } from './product.model'; //NOSONAR

export function OrderLineItemFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    orderId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    orderQty: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    productId: new FormControl<string>('', { validators: Validators.required, nonNullable: true } ),
    unitPrice: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    unitPriceDiscount: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    lineTotal: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    order: new FormControl<IOrder | null>(null),
    product: new FormControl<IProduct | null>(null),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-line-item.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IOrder } from './order.model';
import { IProduct } from './product.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IOrderLineItem {
  id?: string;
  orderId?: string;
  orderQty?: number;
  productId?: string;
  unitPrice?: number;
  unitPriceDiscount?: number;
  lineTotal?: number;
  order?: IOrder;
  product?: IProduct;
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-line-item.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum OrderLineItemProperties {
  ID = 'id',
  ORDER_ID = 'orderId',
  ORDER_QTY = 'orderQty',
  PRODUCT_ID = 'productId',
  UNIT_PRICE = 'unitPrice',
  UNIT_PRICE_DISCOUNT = 'unitPriceDiscount',
  LINE_TOTAL = 'lineTotal',
  ORDER = 'order',
  PRODUCT = 'product',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: order-status-types.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum OrderStatusTypes {
  Processing = 0,
  WaitingOnShipping = 10,
  InTransit = 20,
  Received = 50,
}

export const orderStatusTypeValues = [
  { key: 0, name: 'Processing', displayText: 'Processing'},
  { key: 10, name: 'WaitingOnShipping', displayText: 'Waiting On Shipping'},
  { key: 20, name: 'InTransit', displayText: 'In Transit'},
  { key: 50, name: 'Received', displayText: 'Received'},
];
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IProductModel } from './product-model.model'; //NOSONAR
import { IProductCategory } from './product-category.model'; //NOSONAR
import { IOrderLineItem } from './order-line-item.model'; //NOSONAR

export function ProductFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    name: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(50)]), nonNullable: true }),
    num: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.minLength(10), Validators.maxLength(25)]), nonNullable: true }),
    color: new FormControl<string | null>(null, { validators: Validators.compose([Validators.minLength(3), Validators.maxLength(15)]) }),
    standardCost: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    listPrice: new FormControl<number>(0, { validators: Validators.required, nonNullable: true } ),
    size: new FormControl<string | null>(null, { validators: Validators.maxLength(5) } ),
    weight: new FormControl<number | null>(null),
    productCategoryId: new FormControl<string | null>(null),
    productModelId: new FormControl<string | null>(null),
    sellStartDate: new FormControl<Date>(new Date(), { validators: Validators.required, nonNullable: true } ),
    sellEndDate: new FormControl<Date | null>(null),
    discontinuedDate: new FormControl<Date | null>(null),
    thumbNailPhoto: new FormControl<string | null>(null, { validators: Validators.maxLength(5000) } ),
    productModel: new FormControl<IProductModel | null>(null),
    productCategory: new FormControl<IProductCategory | null>(null),
    orderLineItems: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IProductModel } from './product-model.model';
import { IProductCategory } from './product-category.model';
import { IOrderLineItem } from './order-line-item.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IProduct {
  id?: string;
  name?: string;
  num?: string;
  color?: string;
  standardCost?: number;
  listPrice?: number;
  size?: string;
  weight?: number;
  productCategoryId?: string;
  productModelId?: string;
  sellStartDate?: Date;
  sellEndDate?: Date;
  discontinuedDate?: Date;
  thumbNailPhoto?: string;
  productModel?: IProductModel;
  productCategory?: IProductCategory;
  orderLineItems?: IOrderLineItem[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum ProductProperties {
  ID = 'id',
  NAME = 'name',
  NUM = 'num',
  COLOR = 'color',
  STANDARD_COST = 'standardCost',
  LIST_PRICE = 'listPrice',
  SIZE = 'size',
  WEIGHT = 'weight',
  PRODUCT_CATEGORY_ID = 'productCategoryId',
  PRODUCT_MODEL_ID = 'productModelId',
  SELL_START_DATE = 'sellStartDate',
  SELL_END_DATE = 'sellEndDate',
  DISCONTINUED_DATE = 'discontinuedDate',
  THUMB_NAIL_PHOTO = 'thumbNailPhoto',
  PRODUCT_MODEL = 'productModel',
  PRODUCT_CATEGORY = 'productCategory',
  ORDER_LINE_ITEMS = 'orderLineItems',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-category.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IProduct } from './product.model'; //NOSONAR

export function ProductCategoryFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    name: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    products: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-category.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IProduct } from './product.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IProductCategory {
  id?: string;
  name?: string;
  products?: IProduct[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-category.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum ProductCategoryProperties {
  ID = 'id',
  NAME = 'name',
  PRODUCTS = 'products',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-model.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IProduct } from './product.model'; //NOSONAR

export function ProductModelFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<string | null>(null),
    name: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(50)]), nonNullable: true }),
    description: new FormControl<string | null>(null, { validators: Validators.maxLength(500) } ),
    products: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-model.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IProduct } from './product.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IProductModel {
  id?: string;
  name?: string;
  description?: string;
  products?: IProduct[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: product-model.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum ProductModelProperties {
  ID = 'id',
  NAME = 'name',
  DESCRIPTION = 'description',
  PRODUCTS = 'products',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: sales-agent.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { ICustomer } from './customer.model'; //NOSONAR

export function SalesAgentFormGroupFac(): FormGroup {
  return new FormGroup({
    id: new FormControl<number | null>(null),
    name: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(256)]), nonNullable: true }),
    loginId: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(256)]), nonNullable: true }),
    customers: new FormArray([]),
  });
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: sales-agent.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { ICustomer } from './customer.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface ISalesAgent {
  id?: number;
  name?: string;
  loginId?: string;
  customers?: ICustomer[];
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: sales-agent.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum SalesAgentProperties {
  ID = 'id',
  NAME = 'name',
  LOGIN_ID = 'loginId',
  CUSTOMERS = 'customers',
}
"
`;

exports[`Url Based - Full Integration Tests Adventure Works Account Service should generate files: shipping-types.enum.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #enum.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

export enum ShippingTypes {
  Other = 1,
  Air = 2,
  Truck = 3,
  Train = 4,
  CargoTransport = 5,
}

export const shippingTypeValues = [
  { key: 1, name: 'Other', displayText: 'Other'},
  { key: 2, name: 'Air', displayText: 'Air'},
  { key: 3, name: 'Truck', displayText: 'Truck'},
  { key: 4, name: 'Train', displayText: 'Train'},
  { key: 5, name: 'CargoTransport', displayText: 'Cargo Transport'},
];
"
`;

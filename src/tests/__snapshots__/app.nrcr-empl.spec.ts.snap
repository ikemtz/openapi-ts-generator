// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files 1`] = `
Array [
  "employee-certification.form-group-fac.ts",
  "employee-certification.form.ts",
  "employee-certification.model.ts",
  "employee-certification.properties.ts",
  "employee-certification.test-obj-fac.ts",
  "employee-competency.form-group-fac.ts",
  "employee-competency.form.ts",
  "employee-competency.model.ts",
  "employee-competency.properties.ts",
  "employee-competency.test-obj-fac.ts",
  "employee-health-item.form-group-fac.ts",
  "employee-health-item.form.ts",
  "employee-health-item.model.ts",
  "employee-health-item.properties.ts",
  "employee-health-item.test-obj-fac.ts",
  "employee.form-group-fac.ts",
  "employee.form.ts",
  "employee.model.ts",
  "employee.properties.ts",
  "employee.test-obj-fac.ts",
  "endpoints.ts",
  "index.ts",
]
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR
import { IEmployeeCertificationForm } from './employee-certification.form';
import { IEmployeeCompetencyForm } from './employee-competency.form';
import { IEmployeeHealthItemForm } from './employee-health-item.form';

export interface IEmployeeForm {
    id?: FormControl<string | null | undefined>;
    lastName?: FormControl<string | undefined>;
    firstName?: FormControl<string | undefined>;
    birthDate?: FormControl<Date | null | undefined>;
    mobilePhone?: FormControl<string | null | undefined>;
    homePhone?: FormControl<string | null | undefined>;
    photo?: FormControl<string | null | undefined>;
    email?: FormControl<string | undefined>;
    addressLine1?: FormControl<string | null | undefined>;
    addressLine2?: FormControl<string | null | undefined>;
    city?: FormControl<string | null | undefined>;
    state?: FormControl<string | null | undefined>;
    zip?: FormControl<string | null | undefined>;
    isEnabled?: FormControl<boolean | undefined>;
    hireDate?: FormControl<Date | undefined>;
    fireDate?: FormControl<Date | null | undefined>;
    totalHoursOfService?: FormControl<number | null | undefined>;
    certificationCount?: FormControl<number | undefined>;
    competencyCount?: FormControl<number | undefined>;
    healthItemCount?: FormControl<number | undefined>;
    employeeCertifications?: FormArray<FormGroup<IEmployeeCertificationForm>>;
    employeeCompetencies?: FormArray<FormGroup<IEmployeeCompetencyForm>>;
    employeeHealthItems?: FormArray<FormGroup<IEmployeeHealthItemForm>>;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IEmployeeForm } from './employee.form';
import { IEmployeeCertificationForm } from './employee-certification.form';
import { IEmployeeCompetencyForm } from './employee-competency.form';
import { IEmployeeHealthItemForm } from './employee-health-item.form';

export function EmployeeFormGroupFac(): FormGroup<IEmployeeForm> {
  return new FormGroup<IEmployeeForm>({
    id: new FormControl<string | null>(null),
    lastName: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(250)]), nonNullable: true }),
    firstName: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(250)]), nonNullable: true }),
    birthDate: new FormControl<Date | null>(null),
    mobilePhone: new FormControl<string | null>(null, { validators: Validators.maxLength(25) } ),
    homePhone: new FormControl<string | null>(null, { validators: Validators.maxLength(25) } ),
    photo: new FormControl<string | null>(null, { validators: Validators.maxLength(4000) } ),
    email: new FormControl<string>('', { validators: Validators.compose([Validators.required, Validators.maxLength(250)]), nonNullable: true }),
    addressLine1: new FormControl<string | null>(null, { validators: Validators.maxLength(250) } ),
    addressLine2: new FormControl<string | null>(null, { validators: Validators.maxLength(250) } ),
    city: new FormControl<string | null>(null, { validators: Validators.maxLength(150) } ),
    state: new FormControl<string | null>(null, { validators: Validators.compose([Validators.minLength(2), Validators.maxLength(2), Validators.pattern('^[A-Z]{2}$')]) }),
    zip: new FormControl<string | null>(null, { validators: Validators.maxLength(10) } ),
    isEnabled: new FormControl<boolean>(false, { validators: Validators.required, nonNullable: true } ),
    hireDate: new FormControl<Date>(new Date(), { validators: Validators.required, nonNullable: true } ),
    fireDate: new FormControl<Date | null>(null),
    totalHoursOfService: new FormControl<number | null>(null, { validators: Validators.min(0) } ),
    certificationCount: new FormControl<number>(0, { validators: Validators.compose([Validators.required, Validators.max(99)]), nonNullable: true }),
    competencyCount: new FormControl<number>(0, { validators: Validators.compose([Validators.required, Validators.min(0), Validators.max(99)]), nonNullable: true }),
    healthItemCount: new FormControl<number>(0, { validators: Validators.compose([Validators.required, Validators.min(0), Validators.max(99)]), nonNullable: true }),
    employeeCertifications: new FormArray<FormGroup<IEmployeeCertificationForm>>([]),
    employeeCompetencies: new FormArray<FormGroup<IEmployeeCompetencyForm>>([]),
    employeeHealthItems: new FormArray<FormGroup<IEmployeeHealthItemForm>>([]),
  });
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { IEmployeeCertification } from './employee-certification.model';
import { IEmployeeCompetency } from './employee-competency.model';
import { IEmployeeHealthItem } from './employee-health-item.model';

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IEmployee {
  id?: string | null;
  lastName?: string;
  firstName?: string;
  birthDate?: Date | null;
  mobilePhone?: string | null;
  homePhone?: string | null;
  photo?: string | null;
  email?: string;
  addressLine1?: string | null;
  addressLine2?: string | null;
  city?: string | null;
  state?: string | null;
  zip?: string | null;
  isEnabled?: boolean;
  hireDate?: Date;
  fireDate?: Date | null;
  totalHoursOfService?: number | null;
  certificationCount?: number;
  competencyCount?: number;
  healthItemCount?: number;
  employeeCertifications?: Partial<IEmployeeCertification[]>;
  employeeCompetencies?: Partial<IEmployeeCompetency[]>;
  employeeHealthItems?: Partial<IEmployeeHealthItem[]>;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum EmployeeProperties {
  ID = 'id',
  LAST_NAME = 'lastName',
  FIRST_NAME = 'firstName',
  BIRTH_DATE = 'birthDate',
  MOBILE_PHONE = 'mobilePhone',
  HOME_PHONE = 'homePhone',
  PHOTO = 'photo',
  EMAIL = 'email',
  ADDRESS_LINE_1 = 'addressLine1',
  ADDRESS_LINE_2 = 'addressLine2',
  CITY = 'city',
  STATE = 'state',
  ZIP = 'zip',
  IS_ENABLED = 'isEnabled',
  HIRE_DATE = 'hireDate',
  FIRE_DATE = 'fireDate',
  TOTAL_HOURS_OF_SERVICE = 'totalHoursOfService',
  CERTIFICATION_COUNT = 'certificationCount',
  COMPETENCY_COUNT = 'competencyCount',
  HEALTH_ITEM_COUNT = 'healthItemCount',
  EMPLOYEE_CERTIFICATIONS = 'employeeCertifications',
  EMPLOYEE_COMPETENCIES = 'employeeCompetencies',
  EMPLOYEE_HEALTH_ITEMS = 'employeeHealthItems',
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { EmployeeProperties } from './employee.properties';

export function createTestEmployee() {
    return { 
      [EmployeeProperties.ID]: 'ID',
      [EmployeeProperties.LAST_NAME]: 'LAST_NAME',
      [EmployeeProperties.FIRST_NAME]: 'FIRST_NAME',
      [EmployeeProperties.BIRTH_DATE]: new Date(),
      [EmployeeProperties.MOBILE_PHONE]: 'MOBILE_PHONE',
      [EmployeeProperties.HOME_PHONE]: 'HOME_PHONE',
      [EmployeeProperties.PHOTO]: 'PHOTO',
      [EmployeeProperties.EMAIL]: 'EMAIL',
      [EmployeeProperties.ADDRESS_LINE_1]: 'ADDRESS_LINE_1',
      [EmployeeProperties.ADDRESS_LINE_2]: 'ADDRESS_LINE_2',
      [EmployeeProperties.CITY]: 'CITY',
      [EmployeeProperties.STATE]: 'ST',
      [EmployeeProperties.ZIP]: 'ZIP',
      [EmployeeProperties.IS_ENABLED]: false,
      [EmployeeProperties.HIRE_DATE]: new Date(),
      [EmployeeProperties.FIRE_DATE]: new Date(),
      [EmployeeProperties.TOTAL_HOURS_OF_SERVICE]: 0,
      [EmployeeProperties.CERTIFICATION_COUNT]: 0,
      [EmployeeProperties.COMPETENCY_COUNT]: 0,
      [EmployeeProperties.HEALTH_ITEM_COUNT]: 0, 
      [EmployeeProperties.EMPLOYEE_CERTIFICATIONS]: [],
      [EmployeeProperties.EMPLOYEE_COMPETENCIES]: [],
      [EmployeeProperties.EMPLOYEE_HEALTH_ITEMS]: [],
    };
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-certification.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface IEmployeeCertificationForm {
    id?: FormControl<string | null | undefined>;
    employeeId?: FormControl<string | null | undefined>;
    certificationId?: FormControl<string | null | undefined>;
    certificationName?: FormControl<string | null | undefined>;
    expiresOnUtc?: FormControl<Date | null | undefined>;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-certification.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IEmployeeCertificationForm } from './employee-certification.form';

export function EmployeeCertificationFormGroupFac(): FormGroup<IEmployeeCertificationForm> {
  return new FormGroup<IEmployeeCertificationForm>({
    id: new FormControl<string | null>(null),
    employeeId: new FormControl<string | null>(null),
    certificationId: new FormControl<string | null>(null),
    certificationName: new FormControl<string | null>(null),
    expiresOnUtc: new FormControl<Date | null>(null),
  });
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-certification.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IEmployeeCertification {
  id?: string | null;
  employeeId?: string | null;
  certificationId?: string | null;
  certificationName?: string | null;
  expiresOnUtc?: Date | null;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-certification.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum EmployeeCertificationProperties {
  ID = 'id',
  EMPLOYEE_ID = 'employeeId',
  CERTIFICATION_ID = 'certificationId',
  CERTIFICATION_NAME = 'certificationName',
  EXPIRES_ON_UTC = 'expiresOnUtc',
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-certification.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { EmployeeCertificationProperties } from './employee-certification.properties';

export function createTestEmployeeCertification() {
    return { 
      [EmployeeCertificationProperties.ID]: 'ID',
      [EmployeeCertificationProperties.EMPLOYEE_ID]: 'EMPLOYEE_ID',
      [EmployeeCertificationProperties.CERTIFICATION_ID]: 'CERTIFICATION_ID',
      [EmployeeCertificationProperties.CERTIFICATION_NAME]: 'CERTIFICATION_NAME',
      [EmployeeCertificationProperties.EXPIRES_ON_UTC]: new Date(), 
    };
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-competency.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface IEmployeeCompetencyForm {
    id?: FormControl<string | null | undefined>;
    employeeId?: FormControl<string | null | undefined>;
    competencyId?: FormControl<string | null | undefined>;
    competencyName?: FormControl<string | null | undefined>;
    expiresOnUtc?: FormControl<Date | null | undefined>;
    isEnabled?: FormControl<boolean | null | undefined>;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-competency.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IEmployeeCompetencyForm } from './employee-competency.form';

export function EmployeeCompetencyFormGroupFac(): FormGroup<IEmployeeCompetencyForm> {
  return new FormGroup<IEmployeeCompetencyForm>({
    id: new FormControl<string | null>(null),
    employeeId: new FormControl<string | null>(null),
    competencyId: new FormControl<string | null>(null),
    competencyName: new FormControl<string | null>(null),
    expiresOnUtc: new FormControl<Date | null>(null),
    isEnabled: new FormControl<boolean | null>(null),
  });
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-competency.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IEmployeeCompetency {
  id?: string | null;
  employeeId?: string | null;
  competencyId?: string | null;
  competencyName?: string | null;
  expiresOnUtc?: Date | null;
  isEnabled?: boolean | null;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-competency.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum EmployeeCompetencyProperties {
  ID = 'id',
  EMPLOYEE_ID = 'employeeId',
  COMPETENCY_ID = 'competencyId',
  COMPETENCY_NAME = 'competencyName',
  EXPIRES_ON_UTC = 'expiresOnUtc',
  IS_ENABLED = 'isEnabled',
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-competency.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { EmployeeCompetencyProperties } from './employee-competency.properties';

export function createTestEmployeeCompetency() {
    return { 
      [EmployeeCompetencyProperties.ID]: 'ID',
      [EmployeeCompetencyProperties.EMPLOYEE_ID]: 'EMPLOYEE_ID',
      [EmployeeCompetencyProperties.COMPETENCY_ID]: 'COMPETENCY_ID',
      [EmployeeCompetencyProperties.COMPETENCY_NAME]: 'COMPETENCY_NAME',
      [EmployeeCompetencyProperties.EXPIRES_ON_UTC]: new Date(),
      [EmployeeCompetencyProperties.IS_ENABLED]: false, 
    };
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-health-item.form.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup } from '@angular/forms'; //NOSONAR

export interface IEmployeeHealthItemForm {
    id?: FormControl<string | null | undefined>;
    employeeId?: FormControl<string | null | undefined>;
    healthItemId?: FormControl<string | null | undefined>;
    healthItemName?: FormControl<string | null | undefined>;
    expiresOnUtc?: FormControl<Date | null | undefined>;
    isEnabled?: FormControl<boolean | null | undefined>;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-health-item.form-group-fac.ts 1`] = `
"/* eslint-disable @typescript-eslint/no-unused-vars */
/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #form-group-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
import { FormControl, FormArray, FormGroup, Validators } from '@angular/forms'; //NOSONAR
import { IEmployeeHealthItemForm } from './employee-health-item.form';

export function EmployeeHealthItemFormGroupFac(): FormGroup<IEmployeeHealthItemForm> {
  return new FormGroup<IEmployeeHealthItemForm>({
    id: new FormControl<string | null>(null),
    employeeId: new FormControl<string | null>(null),
    healthItemId: new FormControl<string | null>(null),
    healthItemName: new FormControl<string | null>(null),
    expiresOnUtc: new FormControl<Date | null>(null),
    isEnabled: new FormControl<boolean | null>(null),
  });
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-health-item.model.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface IEmployeeHealthItem {
  id?: string | null;
  employeeId?: string | null;
  healthItemId?: string | null;
  healthItemName?: string | null;
  expiresOnUtc?: Date | null;
  isEnabled?: boolean | null;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-health-item.properties.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #model-properties.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum EmployeeHealthItemProperties {
  ID = 'id',
  EMPLOYEE_ID = 'employeeId',
  HEALTH_ITEM_ID = 'healthItemId',
  HEALTH_ITEM_NAME = 'healthItemName',
  EXPIRES_ON_UTC = 'expiresOnUtc',
  IS_ENABLED = 'isEnabled',
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: employee-health-item.test-obj-fac.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #test-object-factory.ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */

import { EmployeeHealthItemProperties } from './employee-health-item.properties';

export function createTestEmployeeHealthItem() {
    return { 
      [EmployeeHealthItemProperties.ID]: 'ID',
      [EmployeeHealthItemProperties.EMPLOYEE_ID]: 'EMPLOYEE_ID',
      [EmployeeHealthItemProperties.HEALTH_ITEM_ID]: 'HEALTH_ITEM_ID',
      [EmployeeHealthItemProperties.HEALTH_ITEM_NAME]: 'HEALTH_ITEM_NAME',
      [EmployeeHealthItemProperties.EXPIRES_ON_UTC]: new Date(),
      [EmployeeHealthItemProperties.IS_ENABLED]: false, 
    };
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: endpoints.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #endpoints-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export enum Endpoints {
  employees = '/odata/v1/Employees',
}
export interface IEndpoints {
  readonly employees: string;
}
"
`;

exports[`File Based - Full Integration Tests NRSRx Employee OData Microservice should generate files: index.ts 1`] = `
"/* istanbul ignore file */
/**
 * This file is generated by the openapi-ts-generator
 * #generate-barrel-ts.hbs
 * For issues or feature request, visit the repo: https://github.com/ikemtz/openapi-ts-generator
 * Do not edit.
 */
/* tslint:disable */
export * from './employee-certification.form-group-fac';
export * from './employee-certification.form';
export * from './employee-certification.model';
export * from './employee-certification.properties';
export * from './employee-certification.test-obj-fac';
export * from './employee-competency.form-group-fac';
export * from './employee-competency.form';
export * from './employee-competency.model';
export * from './employee-competency.properties';
export * from './employee-competency.test-obj-fac';
export * from './employee-health-item.form-group-fac';
export * from './employee-health-item.form';
export * from './employee-health-item.model';
export * from './employee-health-item.properties';
export * from './employee-health-item.test-obj-fac';
export * from './employee.form-group-fac';
export * from './employee.form';
export * from './employee.model';
export * from './employee.properties';
export * from './employee.test-obj-fac';
"
`;
